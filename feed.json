{
    "version": "https://jsonfeed.org/version/1",
    "title": "永远少年！",
    "description": " 欢迎来到我的笔记空间꒰⑅•ᴗ•⑅꒱,在这里,你可以阅读我的学习笔记并提出独到的见解~我们将互相学习交流知识,共同进步( ๑╹ ꇴ╹) ｸﾞｯ!",
    "home_page_url": "http://红叶.top",
    "items": [
        {
            "id": "http://红叶.top/2023/06/03/computer-science/notes/fun/",
            "url": "http://红叶.top/2023/06/03/computer-science/notes/fun/",
            "title": "一些有趣的代码",
            "date_published": "2023-06-03T10:43:13.906Z",
            "content_html": "<h2 id=\"洗牌算法\"><a class=\"anchor\" href=\"#洗牌算法\">#</a> 洗牌算法</h2>\n<p>这个代码很简单，只有两行代码，但是却可以实现这个功能：对于给定的 n 个元素，生成的那个排列，每一个元素都能等概率地出现在每一个位置。</p>\n<p>换句话说，每一个位置都能等概率地放置每个元素。</p>\n<p>代码如下（JDK 中 Collections.<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuemhpaHUuY29tL3NlYXJjaD9xPXNodWZmbGUmYW1wO3NlYXJjaF9zb3VyY2U9RW50aXR5JmFtcDtoeWJyaWRfc2VhcmNoX3NvdXJjZT1FbnRpdHkmYW1wO2h5YnJpZF9zZWFyY2hfZXh0cmE9JTdCJTIyc291cmNlVHlwZSUyMiUzQSUyMmFuc3dlciUyMiUyQyUyMnNvdXJjZUlkJTIyJTNBMjY4NDcyNDg4MiU3RA==\">shuffle</span> () 也是这样实现的）：</p>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"><span>洗牌算法</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>for(int i = n - 1; i >= 0 ; i -- )</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    // rand(0, i) 生成 [0, i] 之间的随机整数</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tswap(arr[i], arr[rand(0, i)])</pre></td></tr></table></figure><h2 id=\"睡眠排序\"><a class=\"anchor\" href=\"#睡眠排序\">#</a> 睡眠排序</h2>\n<p>代码如下：</p>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"><span>睡眠排序</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>public class SleepSort &#123;  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    public static void main(String[] args) &#123;  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        int[] ints = &#123;1,4,7,3,8,9,2,6,5&#125;;  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        SortThread[] sortThreads = new SortThread[ints.length];  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        for (int i = 0; i &lt; sortThreads.length; i++) &#123;  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            sortThreads[i] = new SortThread(ints[i]);  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        &#125;  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        for (int i = 0; i &lt; sortThreads.length; i++) &#123;  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            sortThreads[i].start();  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        &#125;  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    &#125;  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>&#125;  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>class SortThread extends Thread&#123;  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    int ms = 0;  </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    public SortThread(int ms)&#123;  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        this.ms = ms;  </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    &#125;  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    public void run()&#123;  </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        try &#123;  </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            sleep(ms*10+10);  </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        &#125; catch (InterruptedException e) &#123;  </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            // TODO Auto-generated catch block  </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            e.printStackTrace();  </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        &#125;  </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        System.out.println(ms);  </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    &#125;  </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>&#125;</pre></td></tr></table></figure><p>它原理是构造 n 个线程，它们和这 n 个数一一对应。</p>\n<p>初始化后，线程们开始睡眠，等到对应的数那么多个时间单位后各自醒来，然后输出它对应的数。</p>\n<p>这样最小的数对应的线程最早醒来，这个数最早被输出。</p>\n<p>等所有线程都醒来，排序就结束了。</p>\n<p>不要问时间复杂度，时间复杂度在这个排序上已经毫无意义！</p>\n",
            "tags": [
                "学习心得"
            ]
        },
        {
            "id": "http://红叶.top/2023/05/29/computer-science/network/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%B8%B8%E8%AF%86/",
            "url": "http://红叶.top/2023/05/29/computer-science/network/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%B8%B8%E8%AF%86/",
            "title": "网安常识",
            "date_published": "2023-05-29T01:43:32.813Z",
            "content_html": "<h1 id=\"网安常识问答\"><a class=\"anchor\" href=\"#网安常识问答\">#</a> 网安常识 (问答)</h1>\n<p>问 1：什么是 WebShell？</p>\n<pre><code>答：Webshell是一种被黑客用来控制Web服务器的脚本或程序，它可以通过Web应用程序或其他漏洞来注入到受感染的Web服务器上，以便黑客能够以管理员权限执行任意命令。\n</code></pre>\n<p>问 2：什么是反弹 Shell？</p>\n<pre><code>答：反弹Shell（Reverse Shell）是一种网络攻击技术，它利用受感染主机和攻击者之间的网络连接，在远程计算机上执行命令并获取目标计算机的控制权。\n</code></pre>\n<p>问 3：Webshell 和反弹 Shell 的主要区别是什么？</p>\n<pre><code>答：Webshell和反弹Shell的主要区别在于它们的运行位置和通信方式。Webshell运行在Web服务器上，通常是通过HTTP或HTTPS协议与攻击者进行通信。而反弹Shell则在目标计算机上运行，通常使用TCP或UDP协议与攻击者进行通信。Webshell通常是被动的，只有当攻击者访问Web服务器时才会被激活。而反弹Shell则是主动的，一旦与攻击者建立连接，就可以随时进行操作。\n</code></pre>\n<p>问 4：什么是僵尸网络？</p>\n<pre><code>答：僵尸网络（Botnet）是一种网络犯罪工具，它由大量已感染的计算机组成，这些计算机被远程控制，可以执行攻击者指定的各种恶意操作。僵尸网络通常被用于执行大规模的网络攻击，例如分布式拒绝服务攻击（DDoS攻击）、垃圾邮件发送、网络钓鱼、密码破解等。\n</code></pre>\n<p>问 5：什么是后门程序？</p>\n<pre><code>答：后门程序（Backdoor）是一种恶意软件，通常指在计算机系统中暗藏的一种能够绕过正常的安全控制措施，允许攻击者远程访问计算机系统并获取系统权限的程序。通过安装后门程序，攻击者可以在被攻击的计算机上实施各种恶意行为，例如窃取敏感信息、传播恶意软件、控制计算机、植入其他恶意软件等。\n</code></pre>\n<p>问 6：什么是木马病毒？</p>\n<pre><code>答：木马病毒（Trojan）是一种恶意软件，通常指伪装成合法程序或文件，但实际上包含了攻击者的恶意代码，可以在计算机系统中执行各种恶意操作。与其他病毒不同，木马病毒通常不会自我复制和传播，而是需要攻击者以某种方式将其安装在受害计算机上。\n</code></pre>\n<p>问 7：如何防范木马病毒的攻击？</p>\n<pre><code>答：用户需要保持良好的安全习惯和意识，不要轻信不明来源的软件或文件，尤其是可执行文件和脚本文件。同时，用户还需要安装并及时更新杀毒软件和防火墙，以便及时发现和清除木马病毒。组织还需要加强网络安全管理和员工安全意识教育，以减少木马病毒对计算机系统和数据的危害。\n</code></pre>\n<p>问 8：电脑中毒后会有哪些明显的异常？</p>\n<pre><code>答：当电脑感染病毒后，可能会出现以下异常：\n1、电脑运行变慢：病毒可能会占用系统资源，导致电脑运行变慢或出现卡顿现象。\n2、频繁崩溃或死机：病毒可能会破坏系统文件或程序，导致电脑频繁崩溃或死机。\n3、桌面背景或浏览器主页被篡改：病毒可能会修改电脑的桌面背景或浏览器主页，强制用户访问恶意网站。\n4、弹窗广告：病毒可能会在电脑上弹出各种广告窗口，影响用户的正常使用。\n5、文件损坏或丢失：病毒可能会删除或篡改用户的文件，导致数据丢失或损坏。\n6、电脑异常行为：病毒可能会修改电脑的系统设置或添加未知的程序，导致电脑出现异常行为，如自动启动或关闭。\n7、网络异常：病毒可能会在用户的电脑上安装恶意程序或木马，以便攻击者远程控制电脑或窃取用户的敏感信息，导致网络异常。\n</code></pre>\n<p>问 9：手机中毒后会有哪些明显的异常？</p>\n<pre><code>答：当手机感染病毒后，可能会出现以下异常：\n1、电量消耗加快：病毒可能会在后台不断运行，占用大量的CPU和内存资源，导致电量消耗加快。\n2、手机发热：病毒可能会在后台不断运行，占用大量的CPU和内存资源，导致手机发热。\n3、流量异常：病毒可能会在手机上执行网络攻击行为，导致手机的流量异常增加。\n4、手机运行变慢：病毒可能会占用系统资源，导致手机运行变慢或出现卡顿现象。\n5、应用异常：病毒可能会操纵或破坏手机上的应用程序，导致应用异常崩溃或无法启动。\n6、信息泄露：病毒可能会窃取手机中的敏感信息，例如短信、通讯录、账户密码等，导致个人信息泄露。\n7、广告弹窗：病毒可能会在手机上弹出各种广告窗口，影响用户的正常使用。\n</code></pre>\n<p>问 10：什么是网络蜜罐？</p>\n<pre><code>答：蜜罐（Honeypot）是一种安全技术，它通过部署虚假的网络服务或系统来吸引攻击者，使攻击者将注意力和攻击行为集中在蜜罐上，从而达到监控、识别和追踪攻击者的目的。\n</code></pre>\n<p>问 11：什么是蠕虫？</p>\n<pre><code>答：蠕虫（worm）是一种自我复制的恶意软件，它能够利用计算机网络的漏洞和弱点，自动扫描、感染其他计算机，从而形成一个庞大的网络攻击系统。蠕虫通常不需要任何人工干预，它们能够在网络中自主传播，大规模感染和攻击目标。\n</code></pre>\n<p>问 12：什么是计算机病毒？</p>\n<pre><code>答：计算机病毒（computer virus）是一种恶意软件，它能够自我复制并感染计算机上的程序、文件或系统，从而影响计算机的正常运行。病毒通常通过植入病毒代码来感染目标程序或文件，然后在程序或文件被执行时自我复制和传播。\n</code></pre>\n<p>问 13：什么是网页挂马？</p>\n<pre><code>答：网页挂马（web page hijacking）指的是黑客通过各种手段将恶意代码嵌入到正常的网页中，使得用户在访问这些网页时被自动重定向到恶意网站或者下载并运行恶意软件。网页挂马是一种常见的网络攻击方式，通常会利用一些常见的漏洞，例如：未经认证的文件上传、SQL注入、跨站脚本攻击（XSS）等等。\n</code></pre>\n<p>问 14：什么是垃圾邮件？</p>\n<pre><code>答：垃圾邮件（spam）是指那些未经用户同意、没有实际意义或不良目的的电子邮件。垃圾邮件通常用来传播广告、欺诈信息、恶意软件等等，会对用户的网络安全和个人隐私造成严重威胁，同时也会给网络资源和邮件服务器造成不必要的负担和压力。\n</code></pre>\n<p>问 15：什么是域名劫持？</p>\n<pre><code>答：域名劫持指的是恶意攻击者通过各种手段篡改了 DNS 解析的结果，使得用户在访问某个域名时，被导向到了恶意网站，从而达到窃取用户账号密码、敏感信息或者诱导用户下载恶意软件等攻击目的的行为。域名劫持通常是通过篡改 DNS 服务器配置或者本地 hosts 文件实现的。劫持者还可能利用伪造证书、DNS 缓存污染等手段，进一步提高攻击成功率。\n</code></pre>\n<p>问 16：什么是 CVE？</p>\n<pre><code>答：CVE 的全称是“Common Vulnerabilities and Exposures”，即“公共漏洞和曝光”。它是一个标准的漏洞编号和公开漏洞的识别系统，为全球各大厂商、组织和研究人员提供了一个公共的漏洞信息库。\n</code></pre>\n<p>问 17：什么是 EPP？</p>\n<pre><code>答：EPP代表终端保护平台（Endpoint Protection Platform），它是一种安全技术，用于保护企业终端设备免受各种网络攻击和威胁。\n</code></pre>\n<p>问 18：什么是 CISP 认证？</p>\n<pre><code>答：CISP（中国信息安全测评认证中心）是中国信息安全行业的权威认证机构之一，成立于2002年。CISP主要提供信息系统安全测评、安全评估、风险评估、安全管理体系认证等服务，目前CISP认证已经成为企业选择安全服务提供商时的重要参考指标。\n</code></pre>\n<p>问 19：什么是 CISP-PTE 认证？</p>\n<pre><code>答：CISP-PTE认证是CISP（中国信息安全测评认证中心）颁发的一种信息安全专业技能认证。PTE的全称是Professional Technology Expert，即专业技术专家。CISP-PTE认证主要是针对从事信息安全技术工作的人员进行考核，证明其在信息安全技术领域的专业技能和实际操作能力。\n</code></pre>\n<p>问 20：什么是 CISSP 认证？</p>\n<pre><code>答：CISSP（Certified Information Systems Security Professional）认证是由国际信息系统安全认证联盟（(ISC)²）颁发的一种信息安全领域的顶级认证。该认证是针对信息安全领域的专业人员，要求考生具备广泛的知识和技能，包括安全管理、安全架构、安全工程、安全运营等多个方面，被认为是信息安全领域的“黄金证书”。\n</code></pre>\n<p>问 21：什么是 CEH 认证？</p>\n<pre><code>答：CEH（Certified Ethical Hacker）认证是一种专业的安全认证，旨在证明持证者具备黑客攻击和防御的知识和技能。CEH认证的主要内容包括黑客攻击方法和技术、漏洞评估和利用、网络安全防御、密码学和安全管理等。\n</code></pre>\n<p>问 22：什么是 Security + 认证？</p>\n<pre><code>答：Security+认证是由CompTIA组织提供的一种证明安全专业人员具备基本安全原则和实践知识的认证。该认证主要考察持证者在网络安全、应用安全、设备安全、密码学和安全管理等方面的知识和技能。\n</code></pre>\n<p>问 22：什么是 CISM 认证？</p>\n<pre><code>答：CISM（Certified Information Security Manager）认证是一种国际上广泛认可的信息安全管理专业认证，旨在证明持证者在信息安全管理领域具备必要的知识和技能，包括信息安全战略制定、风险管理、安全意识培训、安全合规性等方面。\n</code></pre>\n<p>问 23：什么是 GSEC 认证？</p>\n<pre><code>答：GSEC（GIAC Security Essentials Certification）认证是由全球信息保障认证（GIAC）机构颁发的一种信息安全领域的专业认证。该认证涵盖了网络安全、系统安全、应用安全、数据安全等多个方面的知识，认证内容包括安全概念、攻击技术、加密算法、网络协议、安全管理等。\n</code></pre>\n<p>问 24：什么是 OSCP 认证？</p>\n<pre><code>答：OSCP（Offensive Security Certified Professional）认证是由Offensive Security机构颁发的一种信息安全领域的专业认证。该认证是针对网络渗透测试领域的专业人员，要求考生能够在一个模拟网络环境中，对指定的目标系统进行渗透测试，找到系统中的漏洞并进行攻击，最终获取系统权限。\n</code></pre>\n<p>问 25：什么是 OWASP Top 10？</p>\n<pre><code>答：OWASP Top 10是由Open Web Application Security Project（OWASP）组织发布的十种最常见的Web应用程序安全风险清单，它是Web应用程序安全的重要参考指南之一。\n</code></pre>\n<p>问 26：什么是 WAF？</p>\n<pre><code>答：WAF代表Web应用程序防火墙，是一种用于保护Web应用程序的安全设备。WAF可以在Web应用程序和客户端之间拦截和检测网络流量，以防止各种攻击，例如SQL注入、跨站点脚本攻击（XSS）和跨站点请求伪造（CSRF）等。\n</code></pre>\n<p>问 27：什么是 IPS？</p>\n<pre><code>答：IPS代表入侵防御系统（Intrusion Prevention System），它是一种网络安全设备，用于检测和防止网络攻击，包括恶意软件、漏洞利用和其他入侵行为。\n</code></pre>\n<p>问 28：什么是 IDS？</p>\n<pre><code>答：IDS代表入侵检测系统（Intrusion Detection System），它是一种网络安全设备，用于检测网络流量中的入侵行为和异常活动。\n</code></pre>\n<p>问 29：什么是 EDR？</p>\n<pre><code>答：EDR代表终端检测与响应（Endpoint Detection and Response），它是一种安全技术，用于检测和响应终端设备上的安全事件和威胁。\n</code></pre>\n<p>问 30：什么是 CWPP？</p>\n<pre><code>答：CWPP代表云原生Web应用程序防护（Cloud Native Web Application Protection），它是一种云安全技术，用于保护云原生Web应用程序免受各种网络攻击和威胁。\n</code></pre>\n<p>问 31：什么是 0day 漏洞？</p>\n<pre><code>0day，也称为“零日漏洞”（Zero Day Vulnerability），是指软件或系统中存在的未公开的漏洞，攻击者可以利用这些漏洞进行攻击，而开发者和用户都不知道这些漏洞的存在。\n</code></pre>\n<p>问 32：什么是 nday 漏洞？</p>\n<pre><code>答：&quot;n-day&quot;漏洞是指已知存在的但未被修复的漏洞，其中“n”表示漏洞公开的时间（通常以天为单位）。\n</code></pre>\n<p>问 33：什么是反序列化攻击？</p>\n<pre><code>答：反序列化攻击（Deserialization Attack）是一种利用应用程序中的反序列化漏洞实现攻击的技术。当应用程序接收到来自外部的序列化数据（如 JSON、XML 等）时，它会将这些数据反序列化成对象或数据结构，然后进行后续的操作。而攻击者可以通过构造恶意的序列化数据来触发反序列化漏洞，从而导致应用程序受到攻击。\n</code></pre>\n<p>问 34：反序列化攻击有什么威胁？</p>\n<pre><code>答：1、代码执行攻击：攻击者可以构造恶意的序列化数据，使得应用程序在反序列化时执行恶意代码，从而实现远程代码执行攻击。\n2、身份验证绕过攻击：攻击者可以通过构造恶意的序列化数据，绕过身份验证，从而实现越权访问攻击。\n3、敏感信息泄漏攻击：攻击者可以通过构造恶意的序列化数据，将应用程序中的敏感信息序列化并发送到攻击者的服务器，从而实现敏感信息泄漏攻击。\n</code></pre>\n<p>问 35：防止反序列化攻击，可以采取什么措施？</p>\n<pre><code>答：1、对输入数据进行验证：对从外部输入的序列化数据进行严格的验证，例如检查数据格式、数据长度等。\n2、序列化和反序列化数据进行限制：限制序列化和反序列化的数据范围和类型，例如只允许序列化和反序列化特定类型的数据。\n3、序列化和反序列化数据进行安全配置：通过安全配置来限制反序列化漏洞的利用，例如使用安全的序列化库、禁止使用不安全的序列化库、关闭危险的反序列化特性等。\n4、更新和修补：及时更新和修补应用程序中的漏洞，以确保应用程序的安全性。\n</code></pre>\n<p>问 36：什么是零信任？</p>\n<pre><code>答：零信任（Zero Trust）是一种新兴的安全架构和理念，旨在打破传统网络安全防御的“信任边界”，并采用更加精细的、基于策略的安全控制方法，以提高企业网络的安全性。传统的安全模型通常将企业内部网络划分为“信任区域”和“不信任区域”，并基于这种边界模型来进行安全控制。然而，随着云计算、移动设备和IoT等技术的兴起，企业内部网络边界变得越来越模糊，传统的边界模型也越来越难以保证网络安全。相比之下，零信任模型则采用了一种基于策略的、精细化的安全控制方法，不再信任任何一个用户或设备，并将网络访问的控制点移动到了更细粒度的层面。在零信任模型中，每个用户、设备和应用程序都必须进行身份验证和授权，访问权限也将根据用户和设备的上下文信息（如位置、设备类型、应用程序访问权限等）进行动态调整。\n</code></pre>\n<p>问 37：什么是 XDR？</p>\n<pre><code>答：XDR是“扩展检测和响应”（Extended Detection and Response）的缩写，是一种新兴的安全解决方案，旨在为企业提供更全面、智能化的安全防御能力。传统的安全解决方案主要集中在单一的安全层面，例如网络、终端、云等，这些层面的解决方案通常是独立的，缺乏协同和集成能力。而XDR解决方案通过整合来自不同层面的数据和安全事件信息，提供全面的安全威胁感知和响应能力。\n</code></pre>\n<p>问 38：什么是网络安全？</p>\n<pre><code>答：网络安全是指对计算机网络系统中的信息和资源进行保护，防止未经授权的访问、使用、修改、破坏、泄露等行为。\n</code></pre>\n<p>问 39：为什么需要网络安全？</p>\n<pre><code>答：网络安全是保障信息安全的重要手段，可以保护个人隐私、商业机密、国家安全等重要信息不被恶意攻击者窃取或破坏。\n</code></pre>\n<p>问 40：常见的网络安全威胁有哪些？</p>\n<pre><code>答：常见的网络安全威胁包括病毒、木马、蠕虫、恶意软件、钓鱼、网络钓鱼、拒绝服务攻击、黑客攻击等。\n</code></pre>\n<p>问 41：如何保护自己的计算机网络安全？</p>\n<pre><code>答：保护计算机网络安全需要采取多种措施，如使用防病毒软件、防火墙、定期更新系统和应用程序、使用强密码等。\n</code></pre>\n<p>问 42：如何保护自己的移动设备安全？</p>\n<pre><code>答：保护移动设备安全需要采取多种措施，如设置密码、使用加密通信、下载应用程序时注意来源、定期更新系统和应用程序等。\n</code></pre>\n<p>问 43：如何保护自己的个人隐私？</p>\n<pre><code>答：保护个人隐私需要采取多种措施，如设置隐私选项、不泄露个人信息、使用加密通信等。\n</code></pre>\n<p>问 44：什么是黑客？黑客攻击有哪些类型？</p>\n<pre><code>答：黑客是指具有计算机技术能力并试图入侵计算机系统或网络的人。黑客攻击有多种类型，包括但不限于：网络钓鱼、恶意软件、拒绝服务攻击、SQL注入攻击、跨站脚本攻击等。\n</code></pre>\n<p>问 45：渗透测试的定义是什么？</p>\n<pre><code>答：渗透测试是一种安全测试方法，旨在模拟黑客攻击，以发现系统中存在的安全漏洞。\n</code></pre>\n<p>问 46：渗透测试的目的是什么？</p>\n<pre><code>答：渗透测试的目的是发现系统中的安全漏洞，以便组织可以采取措施来修复这些漏洞，从而提高系统的安全性。\n</code></pre>\n<p>问 47：渗透测试的类型有哪些？</p>\n<pre><code>答：渗透测试的类型包括网络渗透测试、应用程序渗透测试、物理安全渗透测试、社交工程渗透测试等。\n</code></pre>\n<p>问 48：渗透测试的流程是什么？</p>\n<pre><code>答：渗透测试的流程包括情报收集、漏洞扫描、漏洞利用、维持访问、清理痕迹等步骤。\n</code></pre>\n<p>问 49：渗透测试中常用的工具有哪些？</p>\n<pre><code>答：渗透测试中常用的工具包括Nmap、Metasploit、Burp Suite、Wireshark等。\n</code></pre>\n<p>问 50：什么是漏洞扫描？</p>\n<pre><code>答：漏洞扫描是一种自动化工具，用于检测系统中存在的已知漏洞。\n</code></pre>\n<p>问 51：什么是漏洞利用？</p>\n<pre><code>答：漏洞利用是指利用系统中已知的漏洞来获取未经授权的访问权限。\n</code></pre>\n<p>问 52：什么是黑客社交工程？</p>\n<pre><code>答：黑客社交工程是一种攻击技术，旨在通过欺骗、误导或诱骗人员来获取未经授权的访问权限。\n</code></pre>\n<p>问 53：什么是 SQL 注入攻击？如何防止它？</p>\n<pre><code>答：SQL注入攻击是一种攻击方式，通过向应用程序输入恶意的SQL语句来获取或修改数据库中的数据。防止SQL注入攻击的最佳方法是使用参数化查询或存储过程。\n</code></pre>\n<p>问 54：什么是跨站点脚本攻击（XSS）？如何防止它？</p>\n<pre><code>答：跨站点脚本攻击是一种攻击方式，攻击者利用应用程序中的漏洞，将恶意脚本注入到网页中，从而获取用户的敏感信息。防止XSS攻击的最佳方法是对输入进行过滤和验证，以确保不允许任何未经授权的脚本注入。\n</code></pre>\n<p>问 55：什么是跨站点请求伪造（CSRF）攻击？如何防止它？</p>\n<pre><code>答：跨站点请求伪造攻击是一种攻击方式，攻击者利用用户已经登录的会话，向应用程序发送恶意请求。防止CSRF攻击的最佳方法是使用令牌验证来确保请求来源于预期的用户。\n</code></pre>\n<p>问 56：什么是 JSON 注入攻击？如何防止它？</p>\n<pre><code>答：JSON注入攻击是一种攻击方式，攻击者通过注入恶意JSON数据来获取敏感信息或执行恶意操作。防止JSON注入攻击的最佳方法是对JSON数据进行过滤和转义，以及使用安全的编程语言和库。\n</code></pre>\n<p>问 57：什么是 DOM XSS 攻击？如何防止它？</p>\n<pre><code>答：DOM XSS攻击是一种攻击方式，攻击者通过修改DOM元素来执行恶意操作。防止DOM XSS攻击的最佳方法是使用安全的编程语言和库，并对用户输入进行过滤和转义。\n</code></pre>\n<p>问 58：什么是点击劫持攻击？如何防止它？</p>\n<pre><code>答：点击劫持攻击是一种攻击方式，通过将恶意网页放在目标网站的上层，欺骗用户点击了看似无害的按钮或链接，实际上是触发了恶意操作。防止点击劫持攻击的最佳方法是使用X-Frame-Options标头来防止网页被嵌入到其他网页中。\n</code></pre>\n<p>问 59：什么是文件包含攻击？如何防止它？</p>\n<pre><code>答：文件包含攻击是一种攻击方式，攻击者通过应用程序中的漏洞，将恶意代码注入到应用程序中，从而执行恶意操作。防止文件包含攻击的最佳方法是确保不允许用户控制的输入作为文件名或路径传递给应用程序。\n</code></pre>\n<p>问 60：什么是命令注入攻击？如何防止它？</p>\n<pre><code>答：命令注入攻击是一种攻击方式，攻击者通过应用程序中的漏洞，将恶意命令注入到系统中，从而获取敏感信息或执行恶意操作。防止命令注入攻击的最佳方法是使用参数化命令或使用安全的API。\n</code></pre>\n<p>问 61：什么是会话劫持攻击？如何防止它？</p>\n<pre><code>答：会话劫持攻击是一种攻击方式，攻击者通过窃取用户的会话ID，来获取用户的敏感信息或执行恶意操作。防止会话劫持攻击的最佳方法是使用HTTPS协议来加密通信，并使用安全的会话管理方法。\n</code></pre>\n<p>问 62：什么是端口扫描？如何检测它？</p>\n<pre><code>答：端口扫描是一种攻击方式，攻击者通过扫描目标系统的端口，来确定哪些服务正在运行。检测端口扫描的最佳方法是使用入侵检测系统（IDS）或入侵防御系统（IPS）。\n</code></pre>\n<p>问 63：什么是缓冲区溢出攻击？如何防止它？</p>\n<pre><code>答：缓冲区溢出攻击是一种攻击方式，攻击者通过向应用程序输入超过缓冲区容量的数据，来覆盖内存中的其他数据或执行恶意代码。防止缓冲区溢出攻击的最佳方法是使用安全的编程语言或库，并确保输入数据被正确验证和限制。\n</code></pre>\n<p>问 64：什么是网络钓鱼？如何防止它？</p>\n<pre><code>答：网络钓鱼是一种攻击方式，攻击者通过伪造合法网站或电子邮件，欺骗用户输入敏感信息，从而获取用户的账号和密码。防止网络钓鱼的最佳方法是通过教育用户如何识别和避免网络钓鱼攻击。\n</code></pre>\n<p>问 65：什么是逆向工程？如何防止它？</p>\n<pre><code>答：逆向工程是一种攻击方式，攻击者通过分析应用程序的代码和结构，来获取敏感信息或执行恶意操作。防止逆向工程的最佳方法是使用加密和混淆技术来保护代码和数据。\n</code></pre>\n<p>问 66：什么是 DDoS 攻击？如何防止它？</p>\n<pre><code>答：DDoS攻击是一种攻击方式，攻击者通过向目标系统发送大量的流量，来使系统无法正常工作。防止DDoS攻击的最佳方法是使用防火墙、负载均衡器和CDN等技术来分散流量。\n</code></pre>\n<p>问 67：什么是密码破解攻击？如何防止它？</p>\n<pre><code>答：密码破解攻击是一种攻击方式，攻击者通过尝试不同的密码组合，来获取用户的账号和密码。防止密码破解攻击的最佳方法是使用强密码策略、多因素身份验证和限制登录尝试次数等措施。\n</code></pre>\n<p>问 68：什么是端点安全？如何保护端点安全？</p>\n<pre><code>答：端点安全是指保护终端设备上的数据和应用程序免受攻击的能力。保护端点安全的最佳方法是使用安全的操作系统、应用程序和防病毒软件，并进行定期更新和维护。\n</code></pre>\n<p>问 69：什么是身份验证和授权？如何保护身份验证和授权？</p>\n<pre><code>答：身份验证是确认用户身份的过程，授权是确定用户可以访问哪些资源的过程。保护身份验证和授权的最佳方法是使用安全的身份验证和授权方法，并进行定期更新和维护。\n</code></pre>\n<p>问 70：什么是安全漏洞评估？如何进行安全漏洞评估？</p>\n<pre><code>答：安全漏洞评估是一种评估系统中存在的安全漏洞和脆弱性的过程。进行安全漏洞评估的最佳方法是使用安全工具和技术，如漏洞扫描、渗透测试和代码审查等。\n</code></pre>\n<p>问 71：什么是网络钓鱼？如何避免成为网络钓鱼的受害者？</p>\n<pre><code>答：网络钓鱼是一种欺骗手段，通过伪装成合法的机构或个人来获取用户的敏感信息。避免成为网络钓鱼的受害者，应该警惕不明来源的电子邮件或链接，并确保在访问任何网站或输入任何敏感信息之前，先验证其真实性。\n</code></pre>\n<p>问 72：如何保护自己的密码免受黑客攻击？</p>\n<pre><code>答：保护密码的最佳方法是使用强密码，并定期更改密码。此外，使用密码管理器可以帮助您管理和保护您的密码。\n</code></pre>\n<p>问 73：什么是 DDoS 攻击？如何防止 DDoS 攻击？</p>\n<pre><code>答：DDoS攻击是一种通过向目标网络发送大量流量来使其瘫痪的攻击。防止DDoS攻击的方法包括使用防火墙、负载均衡器和DDoS防护服务等。\n</code></pre>\n<p>问 74：什么是恶意软件？如何避免感染恶意软件？</p>\n<pre><code>答：恶意软件是一种恶意程序，旨在损害计算机系统或窃取敏感信息。避免感染恶意软件的最佳方法是使用安全的防病毒软件，并避免下载来自不可信来源的文件或程序。\n</code></pre>\n<p>问 75：什么是网络漏洞？如何修补网络漏洞？</p>\n<pre><code>答：网络漏洞是指计算机系统中存在的安全漏洞，黑客可以利用这些漏洞入侵系统。修补网络漏洞的方法包括定期更新软件和操作系统、使用防火墙和入侵检测系统等。\n</code></pre>\n<p>问 76：什么是加密？为什么加密对网络安全很重要？</p>\n<pre><code>答：加密是一种将数据转换为无法理解的形式的技术，以保护数据的机密性和完整性。加密对网络安全很重要，因为它可以防止黑客窃取敏感信息或篡改数据。\n</code></pre>\n<p>问 77：什么是网络安全政策？为什么制定网络安全政策很重要？</p>\n<pre><code>答：网络安全政策是一组规则和措施，旨在保护计算机系统和数据免受黑客攻击和其他安全威胁。制定网络安全政策很重要，因为它可以帮助组织识别和管理风险，并确保员工了解和遵守最佳实践。\n</code></pre>\n<p>问 78：什么是黑客？如何保护自己免受黑客攻击？</p>\n<pre><code>答：黑客是一种通过非法手段入侵计算机系统的人。保护自己免受黑客攻击的方法包括使用强密码、定期更新软件和操作系统、使用防病毒软件和防火墙等。\n</code></pre>\n<p>问 79：什么是多重身份验证？为什么多重身份验证对网络安全很重要？</p>\n<pre><code>答：多重身份验证是一种需要用户提供两个或多个身份验证因素才能访问系统或应用程序的技术。多重身份验证对网络安全很重要，因为它可以防止黑客通过窃取单一身份验证因素来入侵系统。\n</code></pre>\n<p>问 80：什么是网络安全审计？为什么进行网络安全审计很重要？</p>\n<pre><code>答：网络安全审计是一种评估计算机系统和网络安全的过程。进行网络安全审计很重要，因为它可以帮助组织发现和修复安全漏洞，并确保符合法规和最佳实践。\n</code></pre>\n<p>问 81：什么是网络安全培训？为什么进行网络安全培训很重要？</p>\n<pre><code>答：网络安全培训是一种教育员工如何保护计算机系统和数据免受黑客攻击和其他安全威胁的过程。进行网络安全培训很重要，因为它可以帮助员工识别和管理风险，并确保他们了解和遵守最佳实践。\n</code></pre>\n<p>问 82：什么是防火墙？为什么防火墙对网络安全很重要？</p>\n<pre><code>答：防火墙是一种网络安全设备，可以监控和控制网络流量。防火墙对网络安全很重要，因为它可以阻止未经授权的访问和恶意流量进入网络。\n</code></pre>\n<p>问 83：什么是安全漏洞扫描？为什么进行安全漏洞扫描很重要？</p>\n<pre><code>答：安全漏洞扫描是一种评估计算机系统和网络安全的过程，可以发现潜在的安全漏洞。进行安全漏洞扫描很重要，因为它可以帮助组织识别和修复安全漏洞，从而减少黑客攻击的风险。\n</code></pre>\n<p>问 84：什么是入侵检测系统？为什么入侵检测系统对网络安全很重要？</p>\n<pre><code>答：入侵检测系统是一种网络安全设备，可以监控网络流量并检测潜在的入侵行为。入侵检测系统对网络安全很重要，因为它可以帮助组织及时发现和应对入侵行为。\n</code></pre>\n<p>问 85：什么是数据备份？为什么数据备份对网络安全很重要？</p>\n<pre><code>答：数据备份是一种将数据复制到另一个位置以保护数据免受损坏或丢失的过程。数据备份对网络安全很重要，因为它可以确保在发生安全事件或灾难时，组织可以恢复数据并继续运营。\n</code></pre>\n<p>问 86：什么是网络安全威胁情报？为什么网络安全威胁情报对网络安全很重要？</p>\n<pre><code>答：网络安全威胁情报是指有关潜在网络安全威胁的信息，包括黑客活动、恶意软件和漏洞等。网络安全威胁情报对网络安全很重要，因为它可以帮助组织及时了解和应对潜在的安全威胁，有效地减少安全事件的风险。\n</code></pre>\n<p>问 87：渗透测试中的常见工具 Wireshark 有什么作用？</p>\n<pre><code>答：Wireshark是一种网络协议分析工具，可用于捕获和分析网络数据包，以发现网络中的安全问题。\n</code></pre>\n<p>问 88：渗透测试中的常见工具 Nessus 有什么作用？</p>\n<pre><code>答：Nessus是一种漏洞扫描工具，可用于发现系统中存在的已知漏洞，并提供修复建议。\n</code></pre>\n<p>问 89：渗透测试中的常见工具 Aircrack-ng 有什么作用？</p>\n<pre><code>答：Aircrack-ng是一种无线网络安全工具，可用于破解无线网络的加密密码。\n</code></pre>\n<p>问 90：渗透测试中的常见工具 John the Ripper 有什么作用？</p>\n<pre><code>答：John the Ripper是一种密码破解工具，可用于破解加密的密码文件。\n</code></pre>\n<p>问 91：什么是漏洞评估？</p>\n<pre><code>答：漏洞评估是一种安全测试方法，旨在评估系统中存在的安全漏洞的风险和影响。\n</code></pre>\n<p>问 92：渗透测试中的常见技术有哪些？</p>\n<pre><code>答：渗透测试中的常见技术包括端口扫描、漏洞扫描、漏洞利用、社交工程、无线网络攻击等。\n</code></pre>\n<p>问 93：什么是渗透测试报告？</p>\n<pre><code>答：渗透测试报告是一份详细的文档，描述了渗透测试的结果和发现的漏洞，并提供了修复建议。\n</code></pre>\n<p>问 94：渗透测试报告中应包含哪些内容？</p>\n<pre><code>答：渗透测试报告中应包含漏洞的描述、风险评估、漏洞利用的步骤、修复建议等内容。\n</code></pre>\n<p>问 95：什么是漏洞利用框架？</p>\n<pre><code>答：漏洞利用框架是一种工具，可用于自动化执行漏洞利用过程，以获取未经授权的访问权限。\n</code></pre>\n<p>问 96：渗透测试中的常见漏洞利用框架有哪些？</p>\n<pre><code>答：渗透测试中的常见漏洞利用框架包括Metasploit、Canvas、Core Impact等。\n</code></pre>\n<p>问 97：什么是反向 Shell？</p>\n<pre><code>答：反向Shell是一种网络连接，允许攻击者通过目标系统与自己的计算机进行交互，以获取未经授权的访问权限。\n</code></pre>\n<p>问 98：渗透测试中的常见反向 Shell 有哪些？</p>\n<pre><code>答：渗透测试中的常见反向Shell包括Netcat、Meterpreter等。\n</code></pre>\n<p>问 99：什么是漏洞管理？</p>\n<pre><code>答：漏洞管理是一种安全管理方法，旨在跟踪和管理系统中存在的安全漏洞，并提供修复建议。\n</code></pre>\n<p>问 100：渗透测试中的常见漏洞管理工具有哪些？</p>\n<pre><code>答：渗透测试中的常见漏洞管理工具包括Nessus、OpenVAS、QualysGuard等。</code></pre>\n",
            "tags": [
                "学习心得"
            ]
        },
        {
            "id": "http://红叶.top/2023/05/27/Essays/Miscellaneous/%E8%AF%B6%E5%98%BF~/",
            "url": "http://红叶.top/2023/05/27/Essays/Miscellaneous/%E8%AF%B6%E5%98%BF~/",
            "title": "突然想写点东西",
            "date_published": "2023-05-27T15:20:27.000Z",
            "content_html": "<p><span class=\"rainbow\">诶嘿～</span><br />\n 没啥原因，就是突然想写写东西，就当是写写日记啦。<br />\n<span class=\"spoiler\" title=\"你知道得太多了\">其实很久以前就想每天写写日记，随想啥的记录一下自己的生活，奈何都没能坚持下来，前前后后四五次吧，都是写着写着就停下了，所以呢希望这一次自己能持之以恒，慢慢写下去吧。</span></p>\n<p>这次呢，我想通过写作的形式来复盘一下自己每天的生活。之所以如此呢，是因为我感觉到我可能又掉到坑里了，和以前一样犯着同样的小错误，回顾最近几周感觉到记忆一片空白，毫无收获，只是浑浑噩噩的浪费时间罢了。</p>\n<p>我知道这是因为我的逻辑思维和认知能力并没有在近期得到提高。所以会感觉时间过得像流水一样，回顾过去总是白茫茫的一片。但不能再继续下去了，要做出改变，所以要从今天开始复盘自己，以得到持续的提升！</p>\n",
            "tags": [
                "生活记录"
            ]
        },
        {
            "id": "http://红叶.top/2023/05/23/computer-science/notes/%E5%AE%8F%E5%AE%9A%E4%B9%89/",
            "url": "http://红叶.top/2023/05/23/computer-science/notes/%E5%AE%8F%E5%AE%9A%E4%B9%89/",
            "title": "宏定义",
            "date_published": "2023-05-23T07:52:26.893Z",
            "content_html": "<p>#define   宏名   替换文本\t// 无参<br />\n 1、# 可以不在行首，但只允许它前面有空格符<br />\n 2、标识符和替换列表之间不能加赋值号 =，替换列表后不能加分号<br />\n 3、由于宏定义仅是做简单的文本替换，故替换列表中如有表达式，必须把该表达式用括号括起来，否则可能会出现逻辑上的 “错误”<br />\n4、当替换列表一行写不下时，可以使用反斜线 \\ 作为续行符延续到下一行（续行符后直接按回车键换行，不能含有包括空格在内的任何字符，否则是错误的宏定义形式）</p>\n<p>#define 标识符 (参数 1, 参数 2,..., 参数 n) 替换列表\t// 有参<br />\n 1、标识符与参数表的左括号之间不能有空格，否则预处理器会把该宏理解为普通的无参宏定义<br />\n 2、宏替换列表中每个参数及整个替换列表，都必须用一对小括号 () 括起来，否则可能会出现歧义</p>\n<p>#undef 标识符\t// 删除宏定义</p>\n<p>宏定义规则：<br />\n1、只要一条宏定义语句里包含有操作符，就一个用括号把它括起来<br />\n 2、宏定义越紧凑越好；表达式比语句好，单条语句比多条语句好<br />\n 3、在宏定义应避免使用有副作用的表达式及会导致二义性或副作用的 C 语言元素（如自增自减运算符）<br />\n4、宏越简单越好，如果无法得到一个简单的宏，就应该把它定义为一个函数<br />\n 5、一定要让对宏进行扩展得到的字符串 —— 不管它是一个表达式、一条语句（不包括表示语句结束的分号）、还是一个语句块 —— 成为一个完整的 C 语言元素</p>\n<p>const 与 define。两者都可以用来定义常量，但是 const 定义时，定义了常量的类型，所以更精确一些。#define 只是简单的文本替换，除了可以定义常量外，还可以用来定义一些简单的函数，有点类似内联函数 (Inline)。const 和 define 定义的常量可以放在头文件里面。</p>\n",
            "tags": [
                "学习心得"
            ]
        },
        {
            "id": "http://红叶.top/2023/05/23/computer-science/notes/%E8%87%AA%E5%A2%9E%E8%87%AA%E5%87%8F%E8%BF%90%E7%AE%97%E5%BF%83%E5%BE%97/",
            "url": "http://红叶.top/2023/05/23/computer-science/notes/%E8%87%AA%E5%A2%9E%E8%87%AA%E5%87%8F%E8%BF%90%E7%AE%97%E5%BF%83%E5%BE%97/",
            "title": "自增自减",
            "date_published": "2023-05-23T07:52:26.532Z",
            "content_html": "<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">int</span> a<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>b<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tc<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// 此语句在不同的编译器结果可能不一样</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\td<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token operator\">++</span>b<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token operator\">++</span>b<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token operator\">++</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// 此语句在不同的编译器结果可能不一样</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d,%d,%d,%d\"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>Vc 中结果为 8，8，18，22;\tVS 中为 8，8，15，24。</p>\n<p>原因：VS 中，把括号里的内容先执行，既 b 自增三次以后再相加的；而对 a，a<ins> 表示的是运算了之后，再自加 1<br />\n 所以在给 C 赋值的时候，a 的值还是 5，而 a 运算之后自加了三次，所以 a 的值为 8。<br />\nVc 中，先按照自左向右的规则，先计算第一个 + 运算符，用第一个括号执行完就是 6，第二个执行完就是 7，第三个就是 8，算加号前，先算两边括号。就是算第一个加号时，两个</ins> b 都被先执行了，b 就变成 7 了，所以 (++b)+(++b)，两个 b 先自加，b=7，再加起来就是 14，然后再计算第二个加号，就是 14+（++b），一样 b 先自加，就是 8，14+8=22，就是这样来的；a 同理。</p>\n<p>总结：编程时，应避免在一条语句中出现多次自加或者自减的操作。因为可能因为不同的环境（编译器）导致不同的结果，造成程序的不确定性。</p>\n<pre><code>\t\t   **为什么(i++ + ++i)之类的代码是没有意义的**\n</code></pre>\n<p>很多程序员在学习或者面试的时候可能会遇到类似于 (i++ + ++i) 这样让人无奈的问题。其实像这样的问题根本没有必要纠结。</p>\n<p>ISO C++ 2003: 5.0.4 摘录如下：</p>\n<p>Except where noted, the order of evaluation of operands of individual operators and subexpressions of individual expressions, and the order in which side effects take place, is unspecified.Between the previous and next sequence point a scalar object shall have its stored value modified at most once by the evaluation of an expression. Furthermore, the prior value shall be accessed only to determine the value to be stored.</p>\n<p>The requirements of this paragraph shall be met for each allowable ordering of the subexpressions of a full expression; otherwise the behavior is undefined.</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"><span>code</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>[Example:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        i &#x3D; v[i++];        &#x2F;&#x2F; the behavior is unspecified</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        i &#x3D; 7, i++, i++;        &#x2F;&#x2F; i becomes 9</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        i &#x3D; ++i + 1;        &#x2F;&#x2F; the behavior is unspecified</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        i &#x3D; i + 1;        &#x2F;&#x2F; the value of i is incremented</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        —end example]</pre></td></tr></table></figure><p>在 ANSI/ISO C 标准这样描述：在上一个和下一个序列点之间，一个对象所保存的值至多只能被表达式的计算修改一次。而且前一个值只能用于决定将要保存的值。</p>\n<p>序列点是一个时间点（在整个表达式全部计算完毕之后或在 ||、 &amp;&amp;、 ? : 或逗号运算符处，或在函数调用之前）, 此刻尘埃落定，所有的副作用都已确保结束。</p>\n<p>第二句话比较费解。它说在一个表达式中如果某个对象需要写入，则在同一表达式中对该对象的访问应该只局限于直接用于计算将要写入的值。这条规则有效地限制了只有能确保在修改之前才访问变量的表达式为合法。例如 i = i+1 合法，而 a [i] = i++ 则非法。</p>\n<p>在许多经典书籍里也有类似情况的说明。</p>\n<p>包含多个不确定的副作用的代码的行为总是被认为未定义<br />\n —— 引于《C 语言常见问题集》</p>\n<p>简单言之，&quot;多个不确定副作用&quot; 是指在同一个表达式中使用导致同一对象修改两次或修改以后又被引用的自增、自减和赋值操作符的任何组合。</p>\n<p>其实甚至都不要试图探究这些东西在你的编译器中是如何实现的（这与许多 C 教科书上的弱智练习正好相反）；正如 K&amp;R 明智地指出，&quot;如果你不知道它们在不同的机器上如何实现，这样的无知可能恰恰会有助于保护你。&quot;</p>\n",
            "tags": [
                "学习心得"
            ]
        },
        {
            "id": "http://红叶.top/2023/05/23/computer-science/notes/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/",
            "url": "http://红叶.top/2023/05/23/computer-science/notes/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/",
            "title": "进制转换",
            "date_published": "2023-05-23T07:52:26.190Z",
            "content_html": "<p>进制和转换：<br />\n1. 十进制： 都是以 0-9 这九个数字组成，不能以 0 开头。</p>\n<p>2. 二进制： 由 0 和 1 两个数字组成。</p>\n<p>3. 八进制： 由 0-7 数字组成，为了区分与其他进制的数字区别，开头都是以 0 开始。</p>\n<p>4. 十六进制：由 0-9 和 A-F 组成。为了区分于其他数字的区别，开头都是以 0x 开始。</p>\n<p>一、十进制转换为二进制、八进制、十六进制<br />\n整数转换<br />\n 1、十进制转二进制</p>\n<p>（1）十进制转二进制的转换原理：除以 2，反向取余数，直到商为 0 终止。(“除 2 取余，逆序输出” 法。)</p>\n<p>（2）具体做法：</p>\n<pre><code>将某个十进制数除2得到的整数部分保留，作为第二次除2时的被除数，得到的余数依次记下，重复上述步骤，直到整数部分为0就结束，将所有得到的余数最终逆序输出，则为该十进制对应的二进制数。\n</code></pre>\n<p>例如：10 (十进制)→1010 (二进制）<br />\n10/2=5...0  ---&gt;  5/2=2...1  ---&gt;2/2=1...0  ---&gt;  1/2=0...1 (再逆序输出)</p>\n<p>2、十进制转八进制</p>\n<p>（1）转换原理：除以 8，反向取余数，直到商为 0 终止。</p>\n<p>（2）具体步骤与二进制一样</p>\n<p>例如：十进制数 796 转换成八进制数：</p>\n<p>将 796 除 8 取得第一个余数为 4，将除 8 得到的整数部分 99 作为第二次的被除数，重复上述步骤，直至最终整数部分为 0 就结束。将取得的所有余数逆序输出<br />\n 796/8=99...4  ---&gt;  99/8=12...3  ---&gt;  12/8=1...4  ---&gt;  1/8=0...1</p>\n<p>则为：796–&gt;1434</p>\n<p>3、十进制转十六进制</p>\n<p>（1）转换原理：除以 16，反向取余数，直到商为 0 终止。</p>\n<p>（2）具体步骤也和二进制、八进制一样，重复上述做法即可得到十六进制数。</p>\n<p>例如：十进制数 796 转换为十六进制数<br />\n 796/16=49...12  ---&gt;  49/16=3...1  ---&gt;  3/16=0...3<br />\n 即为：796–&gt;31c</p>\n<pre><code>需要注意的是，十六进制数是由0-9和A-F(或者a-f)组成的，A相当于十进制中的10，B相当于11，依次类推，F相当与15，上述事例中取得的余数12即为十六进制中的c\n</code></pre>\n<p>总结：以上几种进制的整数部分转换原理都是除进制数取余数，倒序输出</p>\n<p>小数部分转换<br />\n 1、十进制转二进制</p>\n<p>（1）原理：十进制小数转换成二进制小数采用 “乘 2 取整，顺序输出” 法。</p>\n<pre><code>例题： 0.68D = ______ B（精确到小数点后5位）\n如下所示，0.68乘以2，取整，然后再将小数乘以2，取整，直到达到题目要求精度。得到结果：0.10101B.\n例如：十进制小数0.68转换为二进制数\n具体步骤：\n0.68* 2=1.36 --&gt;1\n0.36* 2=0.72 --&gt;0\n0.72* 2=1.44 --&gt;1\n0.44* 2=0.88–&gt;0\n0.88* 2=1.76 --&gt;1\n已经达到了题目要求的精度，最后将取出的整数部分顺序输出即可\n则为：0.68D–&gt;0.10101B\n</code></pre>\n<p>2、十进制转八进制</p>\n<p>（1）原理：十进制小数转换成八进制小数采用 “乘 8 取整，顺序输出” 法。</p>\n<p>（2）思路和十进制转二进制一样，参考如下例题：</p>\n<pre><code>例题： 10.68D = ______ Q（精确到小数点后3位）\n解析：如下图所示，整数部分除以8取余数，直到无法整除。小数部分0.68乘以8，取整，然后再将小数乘以8，取整，直到达到题目要求精度。得到结果：12.534Q.\n\n例如：十进制数10.68转换成八进制数，分为整数部分和小数部分求解\n步骤：\n(1)整数部分\n10/8=1 --&gt;2\n1/8=0 --&gt;1\n倒序输出为12\n(2)小数部分\n0.68* 8=5.44 --&gt;5\n0.44* 8=3.52 --&gt;3\n0.52* 8=4.16 --&gt;4\n已经达到了题目要求的精度，即可结束\n则小数部分为：0.68–&gt;0.534\n因此10.68D --&gt;12.534Q\n</code></pre>\n<p>3、十进制转十六进制</p>\n<p>（1）原理：十进制小数转换成十六进制小数采用 “乘 16 取整，顺序输出” 法。</p>\n<p>（2）思路也是一样的，就不重复了</p>\n<p>例题： 25.68D = ______ H（精确到小数点后 3 位）</p>\n<pre><code>解析：如下图所示，整数部分除以16取余数，直到无法整除。小数部分0.68乘以16，取整，然后再将小数乘以16，取整，直到达到题目要求精度。得到结果：19.ae1H.\n（1）整数部分\n25/16=1 --&gt;9\n1/16=0 --&gt;1\n倒序输出为：19\n（2）小数部分\n0.68* 16=10.88 --&gt;a(即十进制中的10)\n0.88* 16=14.08 --&gt;e\n0.08* 16=1.28 --&gt;1\n已经达到了要求的精度，顺序输出为：ae1\n则：25.68D --&gt;19.ae1H\n</code></pre>\n<p>总结：小数部分转换原理都是乘进制数取整数部分，再将整数部分顺序输出。<br />\n二、<br />\n二进制、八进制、十六进制转换为十进制（按位权展开）<br />\n整数转换<br />\n例如，将八进制数字 53627 转换成十进制：</p>\n<p>53627 = 5<em>8^4 + 3</em>8^3 + 6<em>8^2 + 2</em>8^1 + 7*8^0 = 22423（十进制）<br />\n从右往左看，第 1 位的位权为 8^0=1，第 2 位的位权为 8^1=8，第 3 位的位权为 8^2=64，第 4 位的位权为 8^3=512，第 5 位的位权为 8^4=4096 …… 第 n 位的位权就为 8^n-1。将各个位的数字乘以位权，然后再相加，就得到了十进制形式。</p>\n<pre><code>注意，这里我们需要以十进制形式来表示位权。\n</code></pre>\n<p>再如，将十六进制数字 9FA8C 转换成十进制：</p>\n<p>9FA8C = 9<em>16^4 + 15</em>16^3 + 10<em>16^2 + 8</em>16^1 + 12*16^0 = 653964（十进制）<br />\n从右往左看，第 1 位的位权为 16^0=1，第 2 位的位权为 16^1=16，第 3 位的位权为 16^2=256，第 4 位的位权为 16^3=4096，第 5 位的位权为 16^4=65536 …… 第 n 位的位权就为 16^n-1。将各个位的数字乘以位权，然后再相加，就得到了十进制形式。</p>\n<p>将二进制数字转换成十进制也是类似的道理：</p>\n<p>11010 = 1<em>2^4 + 1</em>2^3 + 0<em>2^2 + 1</em>2^1 + 0*2^0 = 26（十进制）<br />\n从右往左看，第 1 位的位权为 2^0=1，第 2 位的位权为 2^1=2，第 3 位的位权为 2^2=4，第 4 位的位权为 2^3=8，第 5 位的位权为 2^4=16 …… 第 n 位的位权就为 2^n-1。将各个位的数字乘以位权，然后再相加，就得到了十进制形式。</p>\n<p>例子说明：<br />\n小数部分转换<br />\n 1、二进制转十进制</p>\n<p>（1）原理：整数部分按上述进行操作即可，小数部分从小数点后一位指数为 - 1 开始算起，以后依次为 - 2、-3……<br />\n（2）具体运用以及步骤举例说明：<br />\n例如：二进制数 101.1011 转换成十进制数<br />\n步骤：<br />\n（1）整数部分：<br />\n1<em>2<sup>2+0*2</sup>1+1</em>2^0=5<br />\n (2)  小数部分：<br />\n1<em>2<sup>(-1)+0*2</sup>(-2)+1</em>2<sup>(-3)+1*2</sup>(-4)=0.6875</p>\n<p>2、八进制转十进制</p>\n<p>（1）原理：整数部分操作以及运算不变，小数部分同二进制类似，将 2 改为 8 即可</p>\n<p>（2）具体步骤方法如下：</p>\n<pre><code>例如：八进制数72.45转换成十进制数\n步骤：\n（1）整数部分：\n7* 8^1+ 2* 8 ^0=58\n（2）小数部分\n4* 8^(-1) + 5* 8^(-2)=0.5+0.078125=0.578125\n则为：72.45 --&gt;58.578125\n</code></pre>\n<p>3、十六进制转十进制</p>\n<p>（1）原理：整数运算一样，小数部分换成 16 即可</p>\n<p>（2）具体方法步骤如下：</p>\n<pre><code>例：1A6.3B8=1* 16^2+A* 16 ^1+6* 16 ^0 +3* 16 ^(-1)+B* 16 ^(-2)+8* 16 ^(-3) =422.232422\n</code></pre>\n<p>总结：以上二进制、八进制、十六进制转换为十进制当中的整数部分从右往左指数从 0 开始递增，小数部分从左往右从 - 1 开始递减，原理都是一样的。</p>\n<p>二进制转八进制：” 取三合一” 法，即从二进制的小数点为分界线，向左（或向右）每三位取成一位。<br />\n例子说明：<br />\n二进制数 1010111.01101 转换成八进制数：127.32Q<br />\n 二进制：1010111.01101<br />\n 八进制：001  010  111.  011  010<br />\n1       2      7       3      2</p>\n<p>二进制转十六进制：” 取四合一” 法，即从二进制的小数点为分界线，向左（或向右）每四位取成一位。<br />\n例子说明：<br />\n二进制数 1010 0100.011101B 转换成十六进制数为：a4.74H<br />\n 二进制：10100100.011101<br />\n 十六进制：1010  0100.  0111  0100<br />\na       4         7        4</p>\n<p>再来贴个例子：<br />\n四、八进制、十六进制转换成二进制<br />\n八进制数 37.416 转换成二进制数：011111.100001110<br />\n 八进制：   3      7.      4     1      6<br />\n 二进制：011  111.  100  001  110<br />\n 十六进制数 5DF.9 转换成二进制数：10111011111.1001<br />\n 十六进制：  5       D        F.        9<br />\n 二进制： 0101  1101  1111.  1001</p>\n<p>1、八进制数转换成二进制<br />\n原理：八进制数的一位是二进制数的三位</p>\n<p>2、十六进制数转换成二进制<br />\n原理：十六进制数的一位是二进制数的四位<br />\n五、八进制与十六进制之间的转换</p>\n<p>这两者之间的转换可以借助十进制或者二进制完成，可以先将八进制转换成十进制或二进制，再转换成十六进制。通过间接转换来实现。</p>\n",
            "tags": [
                "学习心得"
            ]
        },
        {
            "id": "http://红叶.top/2023/05/23/memo-list/quick-reference/Python%203%20%E5%A4%87%E5%BF%98%E6%B8%85%E5%8D%95/",
            "url": "http://红叶.top/2023/05/23/memo-list/quick-reference/Python%203%20%E5%A4%87%E5%BF%98%E6%B8%85%E5%8D%95/",
            "title": "Python 备忘清单",
            "date_published": "2023-05-23T07:49:38.100Z",
            "content_html": "<p>Python 备忘单是 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucHl0aG9uLm9yZy8=\">Python 3</span> 编程语言的单页参考表</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSU4NSVBNSVFOSU5NyVBOA==\"></span>入门</h2>\n<h3 id=\"-2\"><a class=\"anchor\" href=\"#-2\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNCVCQiU4QiVFNyVCQiU4RA==\"></span>介绍</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucHl0aG9uLm9yZy8=\">Python</span> <em>(<span class=\"exturl\" data-url=\"aHR0cDovL3B5dGhvbi5vcmc=\">python.org</span>)</em></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybnhpbnltaW51dGVzLmNvbS9kb2NzL3B5dGhvbi8=\">Learn X in Y minutes</span> <em>(<span class=\"exturl\" data-url=\"aHR0cDovL2xlYXJueGlueW1pbnV0ZXMuY29t\">learnxinyminutes.com</span>)</em></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3JlZ2V4Lmh0bWwjcHl0aG9uLSVFNCVCOCVBRCVFNyU5QSU4NCVFNiVBRCVBMyVFNSU4OCU5OSVFOCVBMSVBOCVFOCVCRSVCRSVFNSVCQyU4Rg==\">Regex in python</span> <em>(<span class=\"exturl\" data-url=\"aHR0cDovL2pheXdjamxvdmUuZ2l0aHViLmlv\">jaywcjlove.github.io</span>)</em></li>\n</ul>\n<h3 id=\"-3\"><a class=\"anchor\" href=\"#-3\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI2hlbGxvLXdvcmxk\"></span>Hello World</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, World!\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Hello<span class=\"token punctuation\">,</span> World!</pre></td></tr></table></figure><p>Python 中著名的 “Hello World” 程序</p>\n<h3 id=\"-4\"><a class=\"anchor\" href=\"#-4\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSU4RiU5OCVFOSU4NyU4Rg==\"></span>变量</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>age <span class=\"token operator\">=</span> <span class=\"token number\">18</span>      <span class=\"token comment\"># 年龄是 int 类型</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>name <span class=\"token operator\">=</span> <span class=\"token string\">\"John\"</span> <span class=\"token comment\"># name 现在是 str 类型</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>Python 不能在没有赋值的情况下声明变量</p>\n<h3 id=\"-5\"><a class=\"anchor\" href=\"#-5\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNiU5NSVCMCVFNiU4RCVBRSVFNyVCMSVCQiVFNSU5RSU4Qg==\"></span>数据类型</h3>\n<p><code>str</code></p>\n<p>Text</p>\n<p><code>int</code> ,  <code>float</code> ,  <code>complex</code></p>\n<p>Numeric</p>\n<p><code>list</code> ,  <code>tuple</code> ,  <code>range</code></p>\n<p>Sequence</p>\n<p><code>dict</code></p>\n<p>Mapping</p>\n<p><code>set</code> ,  <code>frozenset</code></p>\n<p>Set</p>\n<p><code>bool</code></p>\n<p>Boolean</p>\n<p><code>bytes</code> ,  <code>bytearray</code> ,  <code>memoryview</code></p>\n<p>Binary</p>\n<p>查看: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI3B5dGhvbi0lRTYlOTUlQjAlRTYlOEQlQUUlRTclQjElQkIlRTUlOUUlOEI=\">Data Types</span></p>\n<h3 id=\"-6\"><a class=\"anchor\" href=\"#-6\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI3NsaWNpbmctc3RyaW5n\"></span>Slicing String</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> msg <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello, World!\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>llo</pre></td></tr></table></figure><p>查看: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI3B5dGhvbi0lRTUlQUQlOTclRTclQUMlQTYlRTQlQjglQjI=\">Strings</span></p>\n<h3 id=\"-7\"><a class=\"anchor\" href=\"#-7\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI2xpc3Rz\"></span>Lists</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>mylist <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>mylist<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>mylist<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> item <span class=\"token keyword\">in</span> mylist<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 打印输出 1,2</span></pre></td></tr></table></figure><p>查看: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI3B5dGhvbi1saXN0cw==\">Lists</span></p>\n<h3 id=\"-8\"><a class=\"anchor\" href=\"#-8\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI2lmLWVsc2U=\"></span>If Else</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>num <span class=\"token operator\">=</span> <span class=\"token number\">200</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> num <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"num is greater than 0\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"num is not greater than 0\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>查看: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI3B5dGhvbi0lRTYlQjUlODElRTclQTglOEIlRTYlOEUlQTclRTUlODglQjY=\">流程控制</span></p>\n<h3 id=\"-9\"><a class=\"anchor\" href=\"#-9\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSVCRSVBQSVFNyU4RSVBRg==\"></span>循环</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> item <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span> item <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Finally finished!\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>查看: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI3B5dGhvbi0lRTUlQkUlQUElRTclOEUlQUY=\">Loops</span></p>\n<h3 id=\"-10\"><a class=\"anchor\" href=\"#-10\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSU4NyVCRCVFNiU5NSVCMA==\"></span>函数</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">my_function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"来自函数的你好\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> my_function<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>来自函数的你好</pre></td></tr></table></figure><p>查看: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSU4NyVCRCVFNiU5NSVCMA==\">Functions</span></p>\n<h3 id=\"-11\"><a class=\"anchor\" href=\"#-11\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNiU5NiU4NyVFNCVCQiVCNiVFNSVBNCU4NCVFNyU5MCU4Ng==\"></span>文件处理</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myfile.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>查看: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI3B5dGhvbi0lRTYlOTYlODclRTQlQkIlQjYlRTUlQTQlODQlRTclOTAlODY=\">文件处理</span></p>\n<h3 id=\"-12\"><a class=\"anchor\" href=\"#-12\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNyVBRSU5NyVFNiU5QyVBRg==\"></span>算术</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>result <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token operator\">+</span> <span class=\"token number\">30</span> <span class=\"token comment\"># => 40</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>result <span class=\"token operator\">=</span> <span class=\"token number\">40</span> <span class=\"token operator\">-</span> <span class=\"token number\">10</span> <span class=\"token comment\"># => 30</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>result <span class=\"token operator\">=</span> <span class=\"token number\">50</span> <span class=\"token operator\">*</span> <span class=\"token number\">5</span>  <span class=\"token comment\"># => 250</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>result <span class=\"token operator\">=</span> <span class=\"token number\">16</span> <span class=\"token operator\">/</span> <span class=\"token number\">4</span>  <span class=\"token comment\"># => 4.0 (Float Division)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>result <span class=\"token operator\">=</span> <span class=\"token number\">16</span> <span class=\"token operator\">//</span> <span class=\"token number\">4</span> <span class=\"token comment\"># => 4 (Integer Division)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>result <span class=\"token operator\">=</span> <span class=\"token number\">25</span> <span class=\"token operator\">%</span> <span class=\"token number\">2</span>  <span class=\"token comment\"># => 1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>result <span class=\"token operator\">=</span> <span class=\"token number\">5</span> <span class=\"token operator\">**</span> <span class=\"token number\">3</span>  <span class=\"token comment\"># => 125</span></pre></td></tr></table></figure><p><code>/</code>  表示 x 和 y 的商， <code>//</code>  表示 x 和 y 的底商，另见 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9hLzE4Mzg3MC8xMzE5MjMyMA==\">StackOverflow</span></p>\n<h3 id=\"-13\"><a class=\"anchor\" href=\"#-13\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSU4QSVBMCVFNyVBRCU4OSVFNCVCQSU4RQ==\"></span>加等于</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>counter <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>counter <span class=\"token operator\">+=</span> <span class=\"token number\">10</span>           <span class=\"token comment\"># => 10</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>counter <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>counter <span class=\"token operator\">=</span> counter <span class=\"token operator\">+</span> <span class=\"token number\">10</span>  <span class=\"token comment\"># => 10</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>message <span class=\"token operator\">=</span> <span class=\"token string\">\"Part 1.\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># => Part 1.Part 2.</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>message <span class=\"token operator\">+=</span> <span class=\"token string\">\"Part 2.\"</span></pre></td></tr></table></figure><h3 id=\"-14\"><a class=\"anchor\" href=\"#-14\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI2YtJUU1JUFEJTk3JUU3JUFDJUE2JUU0JUI4JUIycHl0aG9uLTM2\"></span>f - 字符串 (Python 3.6+)</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> website <span class=\"token operator\">=</span> <span class=\"token string\">'Quick Reference'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"Hello, </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>website<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token string\">\"Hello, Quick Reference\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> num <span class=\"token operator\">=</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>num<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> + 10 = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>num <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token string\">'10 + 10 = 20'</span></pre></td></tr></table></figure><p>查看: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI3B5dGhvbi1mLSVFNSVBRCU5NyVFNyVBQyVBNiVFNCVCOCVCMiVFOCU4NyVBQS1weXRob24tMzYtJUU4JUI1JUI3\">Python F-Strings</span></p>\n<h2 id=\"-15\"><a class=\"anchor\" href=\"#-15\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI3B5dGhvbi0lRTYlOTUlQjAlRTYlOEQlQUUlRTclQjElQkIlRTUlOUUlOEI=\"></span>Python 数据类型</h2>\n<h3 id=\"-16\"><a class=\"anchor\" href=\"#-16\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSVBRCU5NyVFNyVBQyVBNiVFNCVCOCVCMg==\"></span>字符串</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hello <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello World\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>hello <span class=\"token operator\">=</span> <span class=\"token string\">'Hello World'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>multi_string <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">\"\"\"Multiline Strings</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Lorem ipsum dolor sit amet,</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>consectetur adipiscing elit \"\"\"</span></pre></td></tr></table></figure><p>查看: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI3B5dGhvbi0lRTUlQUQlOTclRTclQUMlQTYlRTQlQjglQjI=\">Strings</span></p>\n<h3 id=\"-17\"><a class=\"anchor\" href=\"#-17\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNiU5NSVCMCVFNSVBRCU5Nw==\"></span>数字</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>x <span class=\"token operator\">=</span> <span class=\"token number\">1</span>    <span class=\"token comment\"># int</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>y <span class=\"token operator\">=</span> <span class=\"token number\">2.8</span>  <span class=\"token comment\"># float</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>z <span class=\"token operator\">=</span> <span class=\"token number\">1j</span>   <span class=\"token comment\"># complex</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'int'</span><span class=\"token operator\">></span></pre></td></tr></table></figure><h3 id=\"-18\"><a class=\"anchor\" href=\"#-18\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSVCOCU4MyVFNSVCMCU5NCVFNSU4MCVCQw==\"></span>布尔值</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>my_bool <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>my_bool <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin\">bool</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\"># => False</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin\">bool</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\"># => True</span></pre></td></tr></table></figure><h3 id=\"-19\"><a class=\"anchor\" href=\"#-19\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI2xpc3RzLTE=\"></span>Lists</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>list1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cherry\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>list2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>list3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>list4 <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>查看: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI3B5dGhvbi1saXN0cw==\">Lists</span></p>\n<h3 id=\"-20\"><a class=\"anchor\" href=\"#-20\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSU4NSU4MyVFNyVCQiU4NC10dXBsZQ==\"></span>元组 Tuple</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>my_tuple <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>my_tuple <span class=\"token operator\">=</span> <span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>类似于 List 但不可变</p>\n<h3 id=\"-21\"><a class=\"anchor\" href=\"#-21\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI3NldA==\"></span>Set</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>set1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">&#125;</span>   </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>set2 <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>一组独特的项目 / 对象</p>\n<h3 id=\"-22\"><a class=\"anchor\" href=\"#-22\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSVBRCU5NyVFNSU4NSVCOC1kaWN0aW9uYXJ5\"></span>字典 Dictionary</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> empty_dict <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"one\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"two\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"three\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> a<span class=\"token punctuation\">[</span><span class=\"token string\">\"one\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> a<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>dict_keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'one'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'two'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'three'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> a<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>dict_values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> a<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"four\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> a<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>dict_keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'one'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'two'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'three'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'four'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> a<span class=\"token punctuation\">[</span><span class=\"token string\">'four'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">4</span></pre></td></tr></table></figure><p>Key：值对，JSON 类对象</p>\n<h3 id=\"-23\"><a class=\"anchor\" href=\"#-23\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI2Nhc3Rpbmc=\"></span>Casting</h3>\n<h4 id=\"-24\"><a class=\"anchor\" href=\"#-24\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNiU5NSVCNCVFNiU5NSVCMC1pbnRlZ2Vycw==\"></span>整数 Integers</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>x <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>       <span class=\"token comment\"># x 将是 1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>y <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">2.8</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\"># y 将是 2</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>z <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"3\"</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\"># z 将是 3</span></pre></td></tr></table></figure><h4 id=\"-25\"><a class=\"anchor\" href=\"#-25\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNiVCNSVBRSVFNyU4MiVCOSVFNiU5NSVCMC1mbG9hdHM=\"></span>浮点数 Floats</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>x <span class=\"token operator\">=</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\"># x 将为 1.0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>y <span class=\"token operator\">=</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token number\">2.8</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># y 将是 2.8</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>z <span class=\"token operator\">=</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"3\"</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># z 将为 3.0</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>w <span class=\"token operator\">=</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"4.2\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># w 将是 4.2</span></pre></td></tr></table></figure><h4 id=\"-26\"><a class=\"anchor\" href=\"#-26\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSVBRCU5NyVFNyVBQyVBNiVFNCVCOCVCMi1zdHJpbmdz\"></span>字符串 Strings</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>x <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s1\"</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\"># x 将是's1'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>y <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>       <span class=\"token comment\"># y 将是 '2'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>z <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">3.0</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\"># z 将是 '3.0'</span></pre></td></tr></table></figure><h2 id=\"-27\"><a class=\"anchor\" href=\"#-27\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI3B5dGhvbi0lRTUlQUQlOTclRTclQUMlQTYlRTQlQjglQjI=\"></span>Python 字符串</h2>\n<h3 id=\"-28\"><a class=\"anchor\" href=\"#-28\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNyVCMSVCQiVFNiU5NSVCMCVFNyVCQiU4NA==\"></span>类数组</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> hello <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello, World\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>hello<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>e</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>hello<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>d</pre></td></tr></table></figure><p>获取位置  <code>1</code>  或最后的字符</p>\n<h3 id=\"-29\"><a class=\"anchor\" href=\"#-29\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSVCRSVBQSVFNyU4RSVBRi0x\"></span>循环</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> char <span class=\"token keyword\">in</span> <span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>char<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>f</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>o</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>o</pre></td></tr></table></figure><p>遍历单词  <code>foo</code>  中的字母</p>\n<h3 id=\"-30\"><a class=\"anchor\" href=\"#-30\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSU4OCU4NyVFNyU4OSU4NyVFNSVBRCU5NyVFNyVBQyVBNiVFNCVCOCVCMg==\"></span>切片字符串</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>┌───┬───┬───┬───┬───┬───┬───┐</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token operator\">|</span> m <span class=\"token operator\">|</span> y <span class=\"token operator\">|</span> b <span class=\"token operator\">|</span> a <span class=\"token operator\">|</span> c <span class=\"token operator\">|</span> o <span class=\"token operator\">|</span> n <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> └───┴───┴───┴───┴───┴───┴───┘</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token number\">0</span>   <span class=\"token number\">1</span>   <span class=\"token number\">2</span>   <span class=\"token number\">3</span>   <span class=\"token number\">4</span>   <span class=\"token number\">5</span>   <span class=\"token number\">6</span>   <span class=\"token number\">7</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">-</span><span class=\"token number\">7</span>  <span class=\"token operator\">-</span><span class=\"token number\">6</span>  <span class=\"token operator\">-</span><span class=\"token number\">5</span>  <span class=\"token operator\">-</span><span class=\"token number\">4</span>  <span class=\"token operator\">-</span><span class=\"token number\">3</span>  <span class=\"token operator\">-</span><span class=\"token number\">2</span>  <span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr></table></figure><hr />\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> s <span class=\"token operator\">=</span> <span class=\"token string\">'mybacon'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> s<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token string\">'bac'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> s<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token string\">'my'</span></pre></td></tr></table></figure><hr />\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> s <span class=\"token operator\">=</span> <span class=\"token string\">'mybacon'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> s<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token string\">'my'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> s<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token string\">'bacon'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> s<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> s<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token string\">'mybacon'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> s<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token string\">'mybacon'</span></pre></td></tr></table></figure><hr />\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> s <span class=\"token operator\">=</span> <span class=\"token string\">'mybacon'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> s<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token string\">'baco'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> s<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token string\">'baco'</span></pre></td></tr></table></figure><h4 id=\"-31\"><a class=\"anchor\" href=\"#-31\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNiVBRCVBNSVFOSU5NSVCRg==\"></span>步长</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> s <span class=\"token operator\">=</span> <span class=\"token string\">'12345'</span> <span class=\"token operator\">*</span> <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> s</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token string\">'1234512345123451234512345'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> s<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token string\">'11111'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> s<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token string\">'55555'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> s<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token string\">'55555'</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> s<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token string\">'5432154321543215432154321'</span></pre></td></tr></table></figure><h3 id=\"-32\"><a class=\"anchor\" href=\"#-32\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSVBRCU5NyVFNyVBQyVBNiVFNCVCOCVCMiVFOSU5NSVCRiVFNSVCQSVBNg==\"></span>字符串长度</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> hello <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello, World!\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>hello<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">13</span></pre></td></tr></table></figure><p><code>len()</code>  函数返回字符串的长度</p>\n<h3 id=\"-33\"><a class=\"anchor\" href=\"#-33\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSVBNCU5QSVFNCVCQiVCRA==\"></span>多份</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> s <span class=\"token operator\">=</span> <span class=\"token string\">'===+'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> n <span class=\"token operator\">=</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> s <span class=\"token operator\">*</span> n</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token string\">'===+===+===+===+===+===+===+===+'</span></pre></td></tr></table></figure><h3 id=\"-34\"><a class=\"anchor\" href=\"#-34\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNiVBMyU4MCVFNiU5RiVBNSVFNSVBRCU5NyVFNyVBQyVBNiVFNCVCOCVCMg==\"></span>检查字符串</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> s <span class=\"token operator\">=</span> <span class=\"token string\">'spam'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> s <span class=\"token keyword\">in</span> <span class=\"token string\">'I saw spamalot!'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> s <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> <span class=\"token string\">'I saw The Holy Grail!'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token boolean\">True</span></pre></td></tr></table></figure><h3 id=\"-35\"><a class=\"anchor\" href=\"#-35\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFOCVCRiU5RSVFNiU4RSVBNQ==\"></span>连接</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> s <span class=\"token operator\">=</span> <span class=\"token string\">'spam'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> t <span class=\"token operator\">=</span> <span class=\"token string\">'egg'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> s <span class=\"token operator\">+</span> t</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token string\">'spamegg'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'spam'</span> <span class=\"token string\">'egg'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token string\">'spamegg'</span></pre></td></tr></table></figure><h3 id=\"-36\"><a class=\"anchor\" href=\"#-36\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNiVBMCVCQyVFNSVCQyU4RiVFNSU4QyU5Ng==\"></span>格式化</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>name <span class=\"token operator\">=</span> <span class=\"token string\">\"John\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, %s!\"</span> <span class=\"token operator\">%</span> name<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><hr />\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>name <span class=\"token operator\">=</span> <span class=\"token string\">\"John\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>age <span class=\"token operator\">=</span> <span class=\"token number\">23</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s is %d years old.\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"-37\"><a class=\"anchor\" href=\"#-37\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI2Zvcm1hdC0lRTYlOTYlQjklRTYlQjMlOTU=\"></span>format () 方法</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>txt1 <span class=\"token operator\">=</span> <span class=\"token string\">\"My name is &#123;fname&#125;, I'm &#123;age&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>fname<span class=\"token operator\">=</span><span class=\"token string\">\"John\"</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">=</span><span class=\"token number\">36</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>txt2 <span class=\"token operator\">=</span> <span class=\"token string\">\"My name is &#123;0&#125;, I'm &#123;1&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"John\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>txt3 <span class=\"token operator\">=</span> <span class=\"token string\">\"My name is &#123;&#125;, I'm &#123;&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"John\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"-38\"><a class=\"anchor\" href=\"#-38\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI2lucHV0LSVFOCVCRSU5MyVFNSU4NSVBNQ==\"></span>Input 输入</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> name <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter your name: \"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Enter your name<span class=\"token punctuation\">:</span> Tom</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> name</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token string\">'Tom'</span></pre></td></tr></table></figure><p>从控制台获取输入数据</p>\n<h3 id=\"-39\"><a class=\"anchor\" href=\"#-39\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI2pvaW4tJUU1JThBJUEwJUU1JTg1JUE1\"></span>Join 加入</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">\"#\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"John\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Peter\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Vicky\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token string\">'John#Peter#Vicky'</span></pre></td></tr></table></figure><h3 id=\"-40\"><a class=\"anchor\" href=\"#-40\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI2VuZHN3aXRoLSVFNCVCQiVBNSVFNyVCQiU5MyVFNiU5RCU5Rg==\"></span>Endswith 以.. 结束</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">\"Hello, world!\"</span><span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span><span class=\"token string\">\"!\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token boolean\">True</span></pre></td></tr></table></figure><h3 id=\"-41\"><a class=\"anchor\" href=\"#-41\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFOCVCRCVBQyVFNCVCOSU4OSVFNyVBQyVBNiVFNSU4RiVCNw==\"></span>转义符号</h3>\n<p><code>\\\\</code></p>\n<p>输出反斜杠</p>\n<p><code>\\'</code></p>\n<p>输出单引号</p>\n<p><code>\\&quot;</code></p>\n<p>输出双引号</p>\n<p><code>\\n</code></p>\n<p>换行</p>\n<p><code>\\t</code></p>\n<p>水平制表符</p>\n<p><code>\\r</code></p>\n<p>光标回到首位</p>\n<p><code>\\b</code></p>\n<p>退格</p>\n<h2 id=\"-42\"><a class=\"anchor\" href=\"#-42\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI3B5dGhvbi1mLSVFNSVBRCU5NyVFNyVBQyVBNiVFNCVCOCVCMiVFOCU4NyVBQS1weXRob24tMzYtJUU4JUI1JUI3\"></span>Python F 字符串（自 Python 3.6+ 起）</h2>\n<h3 id=\"-43\"><a class=\"anchor\" href=\"#-43\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI2Ytc3RyaW5ncy0lRTclOTQlQTglRTYlQjMlOTU=\"></span>f-Strings 用法</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> website <span class=\"token operator\">=</span> <span class=\"token string\">'Reference'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"Hello, </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>website<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token string\">\"Hello, Reference\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> num <span class=\"token operator\">=</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>num<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> + 10 = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>num <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token string\">'10 + 10 = 20'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"\"\"He said </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"I'm John\"</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"\"\"</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token string\">\"He said I'm John\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string-interpolation\"><span class=\"token string\">f'5 </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"&#123;stars&#125;\"</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token string\">'5 &#123;stars&#125;'</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string-interpolation\"><span class=\"token string\">f'5 </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"stars\"</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token string\">'&#123;5&#125; stars'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> name <span class=\"token operator\">=</span> <span class=\"token string\">'Eric'</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> age <span class=\"token operator\">=</span> <span class=\"token number\">27</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"\"\"Hello!</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>...     I'm </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>...     I'm </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>age<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.\"\"\"</span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token string\">\"Hello!\\n    I'm Eric.\\n    I'm 27.\"</span></pre></td></tr></table></figure><p>它从 Python 3.6 开始可用，另见: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvMy9yZWZlcmVuY2UvbGV4aWNhbF9hbmFseXNpcy5odG1sI2Ytc3RyaW5ncw==\">格式化的字符串文字</span></p>\n<h3 id=\"-44\"><a class=\"anchor\" href=\"#-44\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI2Ytc3RyaW5ncy0lRTUlQTElQUIlRTUlODUlODUlRTUlQUYlQjklRTklQkQlOTA=\"></span>f-Strings 填充对齐</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"text\"</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">10</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span>   <span class=\"token comment\"># [宽度]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token string\">'text      '</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">*>10</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span> <span class=\"token comment\"># 向左填充</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token string\">'******test'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">*&lt;10</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span> <span class=\"token comment\"># 向右填充</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token string\">'test******'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">*^10</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span> <span class=\"token comment\"># 填充中心</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token string\">'***test***'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token number\">12345</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">0>10</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span>  <span class=\"token comment\"># 填写数字</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token string\">'0000012345'</span></pre></td></tr></table></figure><h3 id=\"-45\"><a class=\"anchor\" href=\"#-45\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI2Ytc3RyaW5ncy0lRTclQjElQkIlRTUlOUUlOEI=\"></span>f-Strings 类型</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token number\">10</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">b</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span>     <span class=\"token comment\"># binary 二进制类型</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token string\">'1010'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token number\">10</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">o</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span>     <span class=\"token comment\"># octal 八进制类型</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token string\">'12'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token number\">200</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span>    <span class=\"token comment\"># hexadecimal 十六进制类型</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token string\">'c8'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token number\">200</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">X</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token string\">'C8'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token number\">345600000000</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">e</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span> <span class=\"token comment\"># 科学计数法</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token string\">'3.456000e+11'</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token number\">65</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">c</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span>       <span class=\"token comment\"># 字符类型</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token string\">'A'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token number\">10</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">#b</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span>      <span class=\"token comment\"># [类型] 带符号（基础）</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token string\">'0b1010'</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token number\">10</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">#o</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token string\">'0o12'</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token number\">10</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">#x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token string\">'0xa'</span></pre></td></tr></table></figure><h3 id=\"-46\"><a class=\"anchor\" href=\"#-46\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI2Ytc3RyaW5ncy1zaWdu\"></span>F-Strings Sign</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token number\">12345</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">+</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span>      <span class=\"token comment\"># [sign] (+/-)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token string\">'+12345'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token operator\">-</span><span class=\"token number\">12345</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">+</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token string\">'-12345'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token operator\">-</span><span class=\"token number\">12345</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">+10</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token string\">'    -12345'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token operator\">-</span><span class=\"token number\">12345</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">+010</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token string\">'-000012345'</span></pre></td></tr></table></figure><h3 id=\"-47\"><a class=\"anchor\" href=\"#-47\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI2Ytc3RyaW5ncy0lRTUlODUlQjYlRTUlQUUlODM=\"></span>F-Strings 其它</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token operator\">-</span><span class=\"token number\">12345</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">0=10</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span>  <span class=\"token comment\"># 负数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token string\">'-000012345'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token number\">12345</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">010</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span>    <span class=\"token comment\"># [0] 快捷方式（不对齐）</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token string\">'0000012345'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token operator\">-</span><span class=\"token number\">12345</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">010</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token string\">'-000012345'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> math       <span class=\"token comment\"># [.precision]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> math<span class=\"token punctuation\">.</span>pi</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">3.141592653589793</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>math<span class=\"token punctuation\">.</span>pi<span class=\"token punctuation\">:</span><span class=\"token format-spec\">.2f</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token string\">'3.14'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1000000</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">,.2f</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span> <span class=\"token comment\"># [分组选项]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token string\">'1,000,000.00'</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1000000</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">_.2f</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token string\">'1_000_000.00'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0.25</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">0%</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span>      <span class=\"token comment\"># 百分比</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token string\">'25.000000%'</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0.25</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">.0%</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token string\">'25%'</span></pre></td></tr></table></figure><h2 id=\"-48\"><a class=\"anchor\" href=\"#-48\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI3B5dGhvbi1saXN0cw==\"></span>Python Lists</h2>\n<h3 id=\"-49\"><a class=\"anchor\" href=\"#-49\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSVBRSU5QSVFNCVCOSU4OQ==\"></span>定义</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> li1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> li1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> li2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> li2</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> li3 <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> li3</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> li4 <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> li4</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h3 id=\"-50\"><a class=\"anchor\" href=\"#-50\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNyU5NCU5RiVFNiU4OCU5MA==\"></span>生成</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x <span class=\"token punctuation\">:</span> x <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>x <span class=\"token operator\">**</span> <span class=\"token number\">2</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span>  x <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">49</span><span class=\"token punctuation\">,</span> <span class=\"token number\">81</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>x <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">if</span> x <span class=\"token operator\">></span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> x <span class=\"token operator\">></span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h3 id=\"-51\"><a class=\"anchor\" href=\"#-51\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNiVCNyVCQiVFNSU4QSVBMA==\"></span>添加</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> li <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> li<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> li</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> li<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> li</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> li<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> li</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> li<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> li</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h3 id=\"-52\"><a class=\"anchor\" href=\"#-52\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI2xpc3QtJUU1JTg4JTg3JUU3JTg5JTg3\"></span>List 切片</h3>\n<p>列表切片的语法：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a_list<span class=\"token punctuation\">[</span>start<span class=\"token punctuation\">:</span>end<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a_list<span class=\"token punctuation\">[</span>start<span class=\"token punctuation\">:</span>end<span class=\"token punctuation\">:</span>step<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h4 id=\"-53\"><a class=\"anchor\" href=\"#-53\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSU4OCU4NyVFNyU4OSU4Nw==\"></span>切片</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'spam'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'egg'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bacon'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'tomato'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ham'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lobster'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> a<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">'bacon'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'tomato'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ham'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> a<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">'egg'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bacon'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'tomato'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> a<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">'egg'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bacon'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'tomato'</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h4 id=\"-54\"><a class=\"anchor\" href=\"#-54\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNyU5QyU4MSVFNyU5NSVBNSVFNyVCNCVBMiVFNSVCQyU5NQ==\"></span>省略索引</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> a<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">'spam'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'egg'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bacon'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'tomato'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">'spam'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'egg'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bacon'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'tomato'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> a<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">'bacon'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'tomato'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ham'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lobster'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> a<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">'bacon'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'tomato'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ham'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lobster'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> a</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">'spam'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'egg'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bacon'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'tomato'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ham'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lobster'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> a<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">'spam'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'egg'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bacon'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'tomato'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ham'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lobster'</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h4 id=\"-55\"><a class=\"anchor\" href=\"#-55\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFOCVCNyVCMyVFOCVCNyU4MyVFNyVCNCVBMiVFNSVCQyU5NQ==\"></span>跳跃索引</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">'spam'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'egg'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bacon'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'tomato'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ham'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lobster'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">'spam'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bacon'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ham'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> a<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">'egg'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'tomato'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lobster'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> a<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">'lobster'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'tomato'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'egg'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> a</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">'spam'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'egg'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bacon'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'tomato'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ham'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lobster'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> a<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">'lobster'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ham'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'tomato'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bacon'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'egg'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'spam'</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h3 id=\"-56\"><a class=\"anchor\" href=\"#-56\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSU4OCVBMCVFOSU5OSVBNA==\"></span>删除</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> li <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'bread'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'butter'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'milk'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> li<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token string\">'milk'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> li</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">'bread'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'butter'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">del</span> li<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> li</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">'butter'</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h3 id=\"-57\"><a class=\"anchor\" href=\"#-57\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSU4OCU5NyVFOCVBMSVBOCVFOCVCRSVCOSVFNyU5NSU4Qw==\"></span>列表边界</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> li <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'d'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> li<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token string\">'a'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> li<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token string\">'d'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> li<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Traceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>IndexError<span class=\"token punctuation\">:</span> <span class=\"token builtin\">list</span> index out of <span class=\"token builtin\">range</span></pre></td></tr></table></figure><h3 id=\"-58\"><a class=\"anchor\" href=\"#-58\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFOCVCRiU5RSVFNiU4RSVBNS0x\"></span>连接</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> odd <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> odd<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> odd</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> odd <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> odd <span class=\"token operator\">+</span> <span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h3 id=\"-59\"><a class=\"anchor\" href=\"#-59\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNiU4RSU5MiVFNSVCQSU4RiVFNSU5MiU4QyVFNSU4RiU4RCVFOCVCRCVBQw==\"></span>排序和反转</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> li <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> li<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> li</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> li<span class=\"token punctuation\">.</span>reverse<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> li</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h3 id=\"-60\"><a class=\"anchor\" href=\"#-60\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFOCVBRSVBMSVFNiU5NSVCMA==\"></span>计数</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> li <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> li<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">2</span></pre></td></tr></table></figure><h3 id=\"-61\"><a class=\"anchor\" href=\"#-61\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFOSU4NyU4RCVFNSVBNCU4RA==\"></span>重复</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> li <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"re\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> li</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">'re'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'re'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'re'</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h2 id=\"-62\"><a class=\"anchor\" href=\"#-62\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI3B5dGhvbi0lRTYlQjUlODElRTclQTglOEIlRTYlOEUlQTclRTUlODglQjY=\"></span>Python 流程控制</h2>\n<h3 id=\"-63\"><a class=\"anchor\" href=\"#-63\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSU5RiVCQSVFNiU5QyVBQw==\"></span>基本</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>num <span class=\"token operator\">=</span> <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> num <span class=\"token operator\">></span> <span class=\"token number\">10</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"num is totally bigger than 10.\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">elif</span> num <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"num is smaller than 10.\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"num is indeed 10.\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"-64\"><a class=\"anchor\" href=\"#-64\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNCVCOCU4MCVFOCVBMSU4Qw==\"></span>一行</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> a <span class=\"token operator\">=</span> <span class=\"token number\">330</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> b <span class=\"token operator\">=</span> <span class=\"token number\">200</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> r <span class=\"token operator\">=</span> <span class=\"token string\">\"a\"</span> <span class=\"token keyword\">if</span> a <span class=\"token operator\">></span> b <span class=\"token keyword\">else</span> <span class=\"token string\">\"b\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>a</pre></td></tr></table></figure><h3 id=\"-65\"><a class=\"anchor\" href=\"#-65\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI2Vsc2UtaWY=\"></span>else if</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>value <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> value<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Value is False\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">elif</span> value <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Value is None\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Value is True\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"-66\"><a class=\"anchor\" href=\"#-66\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI3B5dGhvbi0lRTUlQkUlQUElRTclOEUlQUY=\"></span>Python 循环</h2>\n<h3 id=\"-67\"><a class=\"anchor\" href=\"#-67\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSU5RiVCQSVFNyVBMSU4MA==\"></span>基础</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>primes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> prime <span class=\"token keyword\">in</span> primes<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>prime<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"-68\"><a class=\"anchor\" href=\"#-68\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNiU5QyU4OSVFNyVCNCVBMiVFNSVCQyU5NQ==\"></span>有索引</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>animals <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"dog\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cat\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"mouse\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> value <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>animals<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"-69\"><a class=\"anchor\" href=\"#-69\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI3doaWxl\"></span>While</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>x <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">while</span> x <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    x <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>  <span class=\"token comment\"># Shorthand for x = x + 1</span></pre></td></tr></table></figure><h3 id=\"-70\"><a class=\"anchor\" href=\"#-70\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI2JyZWFr\"></span>Break</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>x <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> index <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    x <span class=\"token operator\">=</span> index <span class=\"token operator\">*</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span> index <span class=\"token operator\">==</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"-71\"><a class=\"anchor\" href=\"#-71\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI2NvbnRpbnVl\"></span>Continue</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> index <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    x <span class=\"token operator\">=</span> index <span class=\"token operator\">*</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> index <span class=\"token operator\">==</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"-72\"><a class=\"anchor\" href=\"#-72\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFOCU4QyU4MyVFNSU5QiVCNA==\"></span>范围</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token comment\"># Prints: 0 1 2 3</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token comment\"># Prints: 4 5 6 7</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token comment\"># Prints: 4 6 8</span></pre></td></tr></table></figure><h3 id=\"-73\"><a class=\"anchor\" href=\"#-73\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNCVCRCVCRiVFNyU5NCVBOC16aXA=\"></span>使用 zip ()</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>name <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Pete'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'John'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Elizabeth'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>age <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> n<span class=\"token punctuation\">,</span> a <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'%s is %d years old'</span> <span class=\"token operator\">%</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"-74\"><a class=\"anchor\" href=\"#-74\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSU4OCU5NyVFOCVBMSVBOCVFNyU5MCU4NiVFOCVBNyVBMw==\"></span>列表理解</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>x<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> x <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># [0, 4, 16, 36, 64]</span></pre></td></tr></table></figure><h2 id=\"-75\"><a class=\"anchor\" href=\"#-75\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI3B5dGhvbi0lRTUlODclQkQlRTYlOTUlQjA=\"></span>Python 函数</h2>\n<h3 id=\"-76\"><a class=\"anchor\" href=\"#-76\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSU5RiVCQSVFNyVBMSU4MC0x\"></span>基础</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">hello_world</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello, World!'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"-77\"><a class=\"anchor\" href=\"#-77\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFOCVCRiU5NCVFNSU5QiU5RQ==\"></span>返回</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"x is %s, y is %s\"</span> <span class=\"token operator\">%</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\"># => 11</span></pre></td></tr></table></figure><h3 id=\"-78\"><a class=\"anchor\" href=\"#-78\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNCVCRCU4RCVFNyVCRCVBRSVFNSU4RiU4MiVFNiU5NSVCMA==\"></span>位置参数</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">varargs</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> args</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>varargs<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># => (1, 2, 3)</span></pre></td></tr></table></figure><h3 id=\"-79\"><a class=\"anchor\" href=\"#-79\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSU4NSVCMyVFOSU5NCVBRSVFNSVBRCU5NyVFNSU4RiU4MiVFNiU5NSVCMA==\"></span>关键字参数</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">keyword_args</span><span class=\"token punctuation\">(</span><span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> kwargs</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># => &#123;\"big\": \"foot\", \"loch\": \"ness\"&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>keyword_args<span class=\"token punctuation\">(</span>big<span class=\"token operator\">=</span><span class=\"token string\">\"foot\"</span><span class=\"token punctuation\">,</span> loch<span class=\"token operator\">=</span><span class=\"token string\">\"ness\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"-80\"><a class=\"anchor\" href=\"#-80\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFOCVCRiU5NCVFNSU5QiU5RSVFNSVBNCU5QSVFNCVCOCVBQQ==\"></span>返回多个</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> y<span class=\"token punctuation\">,</span> x</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>x <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>y <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> swap<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># => x = 2, y = 1</span></pre></td></tr></table></figure><h3 id=\"-81\"><a class=\"anchor\" href=\"#-81\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFOSVCQiU5OCVFOCVBRSVBNCVFNSU4MCVCQw==\"></span>默认值</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>      <span class=\"token comment\"># => 15</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># => 25</span></pre></td></tr></table></figure><h3 id=\"-82\"><a class=\"anchor\" href=\"#-82\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSU4QyVCRiVFNSU5MCU4RCVFNSU4NyVCRCVFNiU5NSVCMA==\"></span>匿名函数</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># => True</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> x <span class=\"token operator\">></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># => 5</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">:</span> x <span class=\"token operator\">**</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> y <span class=\"token operator\">**</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"-83\"><a class=\"anchor\" href=\"#-83\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI3B5dGhvbi0lRTYlQTglQTElRTUlOUQlOTc=\"></span>Python 模块</h2>\n<h3 id=\"-84\"><a class=\"anchor\" href=\"#-84\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSVBRiVCQyVFNSU4NSVBNSVFNiVBOCVBMSVFNSU5RCU5Nw==\"></span>导入模块</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> math</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">.</span>sqrt<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># => 4.0</span></pre></td></tr></table></figure><h3 id=\"-85\"><a class=\"anchor\" href=\"#-85\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNCVCQiU4RSVFNCVCOCU4MCVFNCVCOCVBQSVFNiVBOCVBMSVFNSU5RCU5NyVFNSVBRiVCQyVFNSU4NSVBNQ==\"></span>从一个模块导入</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> math <span class=\"token keyword\">import</span> ceil<span class=\"token punctuation\">,</span> floor</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ceil<span class=\"token punctuation\">(</span><span class=\"token number\">3.7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># => 4.0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>floor<span class=\"token punctuation\">(</span><span class=\"token number\">3.7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># => 3.0</span></pre></td></tr></table></figure><h3 id=\"-86\"><a class=\"anchor\" href=\"#-86\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSU4NSVBOCVFOSU4MyVBOCVFNSVBRiVCQyVFNSU4NSVBNQ==\"></span>全部导入</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> math <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr></table></figure><h3 id=\"-87\"><a class=\"anchor\" href=\"#-87\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNyVCQyVBOSVFNyU5RiVBRCVFNiVBOCVBMSVFNSU5RCU5Nw==\"></span>缩短模块</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> math <span class=\"token keyword\">as</span> m</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># => True</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>math<span class=\"token punctuation\">.</span>sqrt<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> m<span class=\"token punctuation\">.</span>sqrt<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"-88\"><a class=\"anchor\" href=\"#-88\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSU4QSU5RiVFOCU4MyVCRCVFNSU5MiU4QyVFNSVCMSU5RSVFNiU4MCVBNw==\"></span>功能和属性</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> math</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin\">dir</span><span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"-89\"><a class=\"anchor\" href=\"#-89\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI3B5dGhvbi0lRTYlOTYlODclRTQlQkIlQjYlRTUlQTQlODQlRTclOTAlODY=\"></span>Python 文件处理</h2>\n<h3 id=\"-90\"><a class=\"anchor\" href=\"#-90\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFOCVBRiVCQiVFNSU4RiU5NiVFNiU5NiU4NyVFNCVCQiVCNg==\"></span>读取文件</h3>\n<h4 id=\"-91\"><a class=\"anchor\" href=\"#-91\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFOSU4MCU5MCVFOCVBMSU4Qw==\"></span>逐行</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myfile.txt\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"-92\"><a class=\"anchor\" href=\"#-92\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSVCOCVBNiVFOCVBMSU4QyVFNSU4RiVCNw==\"></span>带行号</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin\">file</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myfile.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> line <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">,</span> start<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Number %s: %s\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"-93\"><a class=\"anchor\" href=\"#-93\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSVBRCU5NyVFNyVBQyVBNiVFNCVCOCVCMi0x\"></span>字符串</h3>\n<h4 id=\"-94\"><a class=\"anchor\" href=\"#-94\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSU4NiU5OSVFNCVCOCU4MCVFNCVCOCVBQSVFNSVBRCU5NyVFNyVBQyVBNiVFNCVCOCVCMg==\"></span>写一个字符串</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>contents <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"aa\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bb\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">21</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myfile1.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"w+\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>contents<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"-95\"><a class=\"anchor\" href=\"#-95\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFOCVBRiVCQiVFNSU4RiU5NiVFNCVCOCU4MCVFNCVCOCVBQSVFNSVBRCU5NyVFNyVBQyVBNiVFNCVCOCVCMg==\"></span>读取一个字符串</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myfile1.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r+\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    contents <span class=\"token operator\">=</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>contents<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"-96\"><a class=\"anchor\" href=\"#-96\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSVBRiVCOSVFOCVCMSVBMQ==\"></span>对象</h3>\n<h4 id=\"-97\"><a class=\"anchor\" href=\"#-97\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSU4NiU5OSVFNCVCOCU4MCVFNCVCOCVBQSVFNSVBRiVCOSVFOCVCMSVBMQ==\"></span>写一个对象</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>contents <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"aa\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bb\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">21</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myfile2.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"w+\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>contents<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"-98\"><a class=\"anchor\" href=\"#-98\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFOCVBRiVCQiVFNSU4RiU5NiVFNSVBRiVCOSVFOCVCMSVBMQ==\"></span>读取对象</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myfile2.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r+\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    contents <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>contents<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"-99\"><a class=\"anchor\" href=\"#-99\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSU4OCVBMCVFOSU5OSVBNCVFNiU5NiU4NyVFNCVCQiVCNg==\"></span>删除文件</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> os</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>os<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span><span class=\"token string\">\"myfile.txt\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"-100\"><a class=\"anchor\" href=\"#-100\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNiVBMyU4MCVFNiU5RiVBNSVFNSU5MiU4QyVFNSU4OCVBMCVFOSU5OSVBNA==\"></span>检查和删除</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> os</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span><span class=\"token string\">\"myfile.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    os<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span><span class=\"token string\">\"myfile.txt\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The file does not exist\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"-101\"><a class=\"anchor\" href=\"#-101\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSU4OCVBMCVFOSU5OSVBNCVFNiU5NiU4NyVFNCVCQiVCNiVFNSVBNCVCOQ==\"></span>删除文件夹</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> os</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>os<span class=\"token punctuation\">.</span>rmdir<span class=\"token punctuation\">(</span><span class=\"token string\">\"myfolder\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"-102\"><a class=\"anchor\" href=\"#-102\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI3B5dGhvbi0lRTclQjElQkIlRTUlOTIlOEMlRTclQkIlQTclRTYlODklQkY=\"></span>Python 类和继承</h2>\n<h3 id=\"-103\"><a class=\"anchor\" href=\"#-103\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI2RlZmluaW5n\"></span>Defining</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyNewClass</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># Class Instantiation</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>my <span class=\"token operator\">=</span> MyNewClass<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"-104\"><a class=\"anchor\" href=\"#-104\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNiU5RSU4NCVFOSU4MCVBMCVFNSU4NyVCRCVFNiU5NSVCMA==\"></span>构造函数</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> voice<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        self<span class=\"token punctuation\">.</span>voice <span class=\"token operator\">=</span> voice</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>cat <span class=\"token operator\">=</span> Animal<span class=\"token punctuation\">(</span><span class=\"token string\">'Meow'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>cat<span class=\"token punctuation\">.</span>voice<span class=\"token punctuation\">)</span>    <span class=\"token comment\"># => Meow</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>dog <span class=\"token operator\">=</span> Animal<span class=\"token punctuation\">(</span><span class=\"token string\">'Woof'</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dog<span class=\"token punctuation\">.</span>voice<span class=\"token punctuation\">)</span>    <span class=\"token comment\"># => Woof</span></pre></td></tr></table></figure><h3 id=\"-105\"><a class=\"anchor\" href=\"#-105\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNiU5NiVCOSVFNiVCMyU5NQ==\"></span>方法</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\"># 类的方法</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">bark</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Ham-Ham\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>charlie <span class=\"token operator\">=</span> Dog<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>charlie<span class=\"token punctuation\">.</span>bark<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># => \"Ham-Ham\"</span></pre></td></tr></table></figure><h3 id=\"-106\"><a class=\"anchor\" href=\"#-106\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNyVCMSVCQiVFNSU4RiU5OCVFOSU4NyU4Rg==\"></span>类变量</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyClass</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    class_variable <span class=\"token operator\">=</span> <span class=\"token string\">\"A class variable!\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># => 一个类变量！</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>MyClass<span class=\"token punctuation\">.</span>class_variable<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>x <span class=\"token operator\">=</span> MyClass<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># => 一个类变量！</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>class_variable<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"-107\"><a class=\"anchor\" href=\"#-107\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI3N1cGVyLSVFNSU4NyVCRCVFNiU5NSVCMA==\"></span>Super () 函数</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ParentClass</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">print_test</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Parent Method\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ChildClass</span><span class=\"token punctuation\">(</span>ParentClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">print_test</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Child Method\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\"># 调用父级的 print_test ()</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>print_test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><hr />\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> child_instance <span class=\"token operator\">=</span> ChildClass<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> child_instance<span class=\"token punctuation\">.</span>print_test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Child Method</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Parent Method</pre></td></tr></table></figure><h3 id=\"-108\"><a class=\"anchor\" href=\"#-108\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sI3JlcHItJUU2JTk2JUI5JUU2JUIzJTk1\"></span>repr () 方法</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Employee</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__repr__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>name</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>john <span class=\"token operator\">=</span> Employee<span class=\"token punctuation\">(</span><span class=\"token string\">'John'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>john<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># => John</span></pre></td></tr></table></figure><h3 id=\"-109\"><a class=\"anchor\" href=\"#-109\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNyU5NCVBOCVFNiU4OCVCNyVFNSVBRSU5QSVFNCVCOSU4OSVFNyU5QSU4NCVFNSVCQyU4MiVFNSVCOCVCOA==\"></span>用户定义的异常</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomError</span><span class=\"token punctuation\">(</span>Exception<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">pass</span></pre></td></tr></table></figure><h3 id=\"-110\"><a class=\"anchor\" href=\"#-110\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSVBNCU5QSVFNiU4MCU4MSVFNiU4MCVBNw==\"></span>多态性</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ParentClass</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">print_self</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ChildClass</span><span class=\"token punctuation\">(</span>ParentClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">print_self</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'B'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>obj_A <span class=\"token operator\">=</span> ParentClass<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>obj_B <span class=\"token operator\">=</span> ChildClass<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>obj_A<span class=\"token punctuation\">.</span>print_self<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># => A</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>obj_B<span class=\"token punctuation\">.</span>print_self<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># => B</span></pre></td></tr></table></figure><h3 id=\"-111\"><a class=\"anchor\" href=\"#-111\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFOCVBNiU4NiVFNyU5QiU5Ng==\"></span>覆盖</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ParentClass</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">print_self</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Parent\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ChildClass</span><span class=\"token punctuation\">(</span>ParentClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">print_self</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Child\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>child_instance <span class=\"token operator\">=</span> ChildClass<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>child_instance<span class=\"token punctuation\">.</span>print_self<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># => Child</span></pre></td></tr></table></figure><h3 id=\"-112\"><a class=\"anchor\" href=\"#-112\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNyVCQiVBNyVFNiU4OSVCRg==\"></span>继承</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> legs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        self<span class=\"token punctuation\">.</span>legs <span class=\"token operator\">=</span> legs</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">(</span>Animal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">sound</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Woof!\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Yoki <span class=\"token operator\">=</span> Dog<span class=\"token punctuation\">(</span><span class=\"token string\">\"Yoki\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Yoki<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span> <span class=\"token comment\"># => YOKI</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Yoki<span class=\"token punctuation\">.</span>legs<span class=\"token punctuation\">)</span> <span class=\"token comment\"># => 4</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Yoki<span class=\"token punctuation\">.</span>sound<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\"># => Woof!</span></pre></td></tr></table></figure><h2 id=\"-113\"><a class=\"anchor\" href=\"#-113\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSU5MCU4NCVFNyVBNyU4RCVFNSU5MCU4NCVFNiVBMCVCNyVFNyU5QSU4NA==\"></span>各种各样的</h2>\n<h3 id=\"-114\"><a class=\"anchor\" href=\"#-114\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNiVCMyVBOCVFOSU4NyU4QQ==\"></span>注释</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 这是单行注释</span></pre></td></tr></table></figure><hr />\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">\"\"\" 可以写多行字符串</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    使用三个\"，并且经常使用</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    作为文档。</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\"\"\"</span></pre></td></tr></table></figure><hr />\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">''' 可以写多行字符串</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    使用三个'，并且经常使用</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    作为文档。</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>'''</span></pre></td></tr></table></figure><h3 id=\"-115\"><a class=\"anchor\" href=\"#-115\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNyU5NCU5RiVFNiU4OCU5MCVFNSU5OSVBOA==\"></span>生成器</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">double_numbers</span><span class=\"token punctuation\">(</span>iterable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> iterable<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">yield</span> i <span class=\"token operator\">+</span> i</pre></td></tr></table></figure><p>生成器可帮助您编写惰性代码</p>\n<h3 id=\"-116\"><a class=\"anchor\" href=\"#-116\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFOCVBNiU4MSVFNSU4OCU5NyVFNSU4NyVCQSVFNyU5QSU4NCVFNyU5NCU5RiVFNiU4OCU5MCVFNSU5OSVBOA==\"></span>要列出的生成器</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>values <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>x <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>gen_to_list <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># => [-1, -2, -3, -4, -5]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>gen_to_list<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"-117\"><a class=\"anchor\" href=\"#-117\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSVBNCU4NCVFNyU5MCU4NiVFNSVCQyU4MiVFNSVCOCVCOA==\"></span>处理异常</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\"># 使用 “raise” 来引发错误</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">raise</span> IndexError<span class=\"token punctuation\">(</span><span class=\"token string\">\"这是一个索引错误\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">except</span> IndexError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">pass</span>                 <span class=\"token comment\"># pass 只是一个空操作。 通常你会在这里做恢复。</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">except</span> <span class=\"token punctuation\">(</span>TypeError<span class=\"token punctuation\">,</span> NameError<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">pass</span>                 <span class=\"token comment\"># 如果需要，可以一起处理多个异常。</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>                    <span class=\"token comment\"># try/except 块的可选子句。 必须遵循除块之外的所有内容</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"All good!\"</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 仅当 try 中的代码未引发异常时运行</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>                 <span class=\"token comment\"># 在所有情况下执行</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我们可以在这里清理资源\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"-118\"><a class=\"anchor\" href=\"#-118\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3B5dGhvbi5odG1sIyVFNSU4RiVBNiVFOCVBNyU4MQ==\"></span>另见</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucHl0aG9uLm9yZy8=\">Python</span> <em>(<span class=\"exturl\" data-url=\"aHR0cDovL3B5dGhvbi5vcmc=\">python.org</span>)</em></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybnhpbnltaW51dGVzLmNvbS9kb2NzL3B5dGhvbi8=\">Learn X in Y minutes</span> <em>(<span class=\"exturl\" data-url=\"aHR0cDovL2xlYXJueGlueW1pbnV0ZXMuY29t\">learnxinyminutes.com</span>)</em></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3JlZ2V4Lmh0bWwjcHl0aG9uLSVFNCVCOCVBRCVFNyU5QSU4NCVFNiVBRCVBMyVFNSU4OCU5OSVFOCVBMSVBOCVFOCVCRSVCRSVFNSVCQyU4Rg==\">Regex in python</span> <em>(<span class=\"exturl\" data-url=\"aHR0cDovL2pheXdjamxvdmUuZ2l0aHViLmlv\">jaywcjlove.github.io</span>)</em></li>\n</ul>\n<p>© 2022 Kenny Wang.</p>\n",
            "tags": [
                "编程语言"
            ]
        },
        {
            "id": "http://红叶.top/2023/05/23/memo-list/quick-reference/Java%20%E5%A4%87%E5%BF%98%E6%B8%85%E5%8D%95/",
            "url": "http://红叶.top/2023/05/23/memo-list/quick-reference/Java%20%E5%A4%87%E5%BF%98%E6%B8%85%E5%8D%95/",
            "title": "Java 备忘清单",
            "date_published": "2023-05-23T07:49:38.092Z",
            "content_html": "<p>该备忘单是针对 Java 初学者的速成课程，有助于复习 Java 语言的基本语法。</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCMlRTUlODUlQTUlRTklOTclQTg=\"></span>入门</h2>\n<h3 id=\"-2\"><a class=\"anchor\" href=\"#-2\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCNoZWxsb2phdmE=\"></span>Hello.java</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Hello</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token comment\">// 主要方法</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// 输出: Hello, world!</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, world!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>编译和运行</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ javac Hello.java</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ <span class=\"token function\">java</span> Hello</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Hello, world<span class=\"token operator\">!</span></pre></td></tr></table></figure><h3 id=\"-3\"><a class=\"anchor\" href=\"#-3\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCMlRTUlOEYlOTglRTklODclOEYtdmFyaWFibGVz\"></span>变量 Variables</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">float</span> floatNum <span class=\"token operator\">=</span> <span class=\"token number\">5.99f</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">char</span> letter <span class=\"token operator\">=</span> <span class=\"token char\">'D'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">boolean</span> bool <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token class-name\">String</span> site <span class=\"token operator\">=</span> <span class=\"token string\">\"jaywcjlove.github.io\"</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"-4\"><a class=\"anchor\" href=\"#-4\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCMlRTUlOEUlOUYlRTUlQTclOEIlRTYlOTUlQjAlRTYlOEQlQUUlRTclQjElQkIlRTUlOUUlOEI=\"></span>原始数据类型</h3>\n<p>数据类型</p>\n<p>大小</p>\n<p>默认</p>\n<p>范围</p>\n<p><code>byte</code></p>\n<p>1 byte</p>\n<p>0</p>\n<p>-128 <sup>to</sup> 127</p>\n<p><code>short</code></p>\n<p>2 byte</p>\n<p>0</p>\n<p>-2<sup>15</sup> <sup>to</sup> 2<sup>15</sup>-1</p>\n<p><code>int</code></p>\n<p>4 byte</p>\n<p>0</p>\n<p>-2<sup>31</sup> <sup>to</sup> 2<sup>31</sup>-1</p>\n<p><code>long</code></p>\n<p>8 byte</p>\n<p>0</p>\n<p>-2<sup>63</sup> <sup>to</sup> 2<sup>63</sup>-1</p>\n<p><code>float</code></p>\n<p>4 byte</p>\n<p>0.0f</p>\n<p><em>N/A</em></p>\n<p><code>double</code></p>\n<p>8 byte</p>\n<p>0.0d</p>\n<p><em>N/A</em></p>\n<p><code>char</code></p>\n<p>2 byte</p>\n<p>\\u0000</p>\n<p>0 <sup>to</sup> 65535</p>\n<p><code>boolean</code></p>\n<p><em>N/A</em></p>\n<p>false</p>\n<p>true / false</p>\n<h3 id=\"-5\"><a class=\"anchor\" href=\"#-5\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCMlRTUlQUQlOTclRTclQUMlQTYlRTQlQjglQjItc3RyaW5ncw==\"></span>字符串 Strings</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">String</span> first <span class=\"token operator\">=</span> <span class=\"token string\">\"John\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">String</span> last <span class=\"token operator\">=</span> <span class=\"token string\">\"Doe\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">String</span> name <span class=\"token operator\">=</span> first <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> last<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>查看: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCNqYXZhLSVFNSVBRCU5NyVFNyVBQyVBNiVFNCVCOCVCMg==\">Strings</span></p>\n<h3 id=\"-6\"><a class=\"anchor\" href=\"#-6\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCMlRTUlQkUlQUElRTclOEUlQUYtbG9vcHM=\"></span>循环 Loops</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">String</span> word <span class=\"token operator\">=</span> <span class=\"token string\">\"QuickRef\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> c<span class=\"token operator\">:</span> word<span class=\"token punctuation\">.</span><span class=\"token function\">toCharArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">+</span> <span class=\"token string\">\"-\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 输出: Q-u-i-c-k-R-e-f-</span></pre></td></tr></table></figure><p>查看: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCNqYXZhLSVFNSVCRSVBQSVFNyU4RSVBRg==\">Loops</span></p>\n<h3 id=\"-7\"><a class=\"anchor\" href=\"#-7\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCMlRTYlOTUlQjAlRTclQkIlODQtYXJyYXlz\"></span>数组 Arrays</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> chars <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>chars<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token char\">'a'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>chars<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token char\">'b'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> letters <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"C\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> mylist <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">boolean</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> answers <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>查看: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCNqYXZhLSVFNiU5NSVCMCVFNyVCQiU4NA==\">Arrays</span></p>\n<h3 id=\"-8\"><a class=\"anchor\" href=\"#-8\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCMlRTQlQkElQTQlRTYlOEQlQTIlRTUlOEYlOTglRTklODclOEYtc3dhcA==\"></span>交换变量 Swap</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1 2</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>a <span class=\"token operator\">=</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>b <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2 1</span></pre></td></tr></table></figure><h3 id=\"-9\"><a class=\"anchor\" href=\"#-9\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCMlRTclQjElQkIlRTUlOUUlOEIlRTglQkQlQUMlRTYlOEQlQTItdHlwZS1jYXN0aW5n\"></span>类型转换 Type Casting</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// Widening</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// byte&lt;short&lt;int&lt;long&lt;float&lt;double</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">long</span> l <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>               <span class=\"token comment\">// 10</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// Narrowing </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">double</span> d <span class=\"token operator\">=</span> <span class=\"token number\">10.02</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">long</span> l <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span>d<span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 10</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// \"10\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"10\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 10</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token class-name\">Double</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseDouble</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"10\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 10.0</span></pre></td></tr></table></figure><h3 id=\"-10\"><a class=\"anchor\" href=\"#-10\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCMlRTYlOUQlQTElRTQlQkIlQjYlRTglQUYlQUQlRTUlOEYlQTUtY29uZGl0aW9uYWxz\"></span>条件语句 Conditionals</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">==</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I get printed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">></span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I don't\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I also don't\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>查看: [Conditionals](# 条件语句 Conditionals)</p>\n<h3 id=\"-11\"><a class=\"anchor\" href=\"#-11\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCMlRTclOTQlQTglRTYlODglQjclRTglQkUlOTMlRTUlODUlQTU=\"></span>用户输入</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Scanner</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">String</span> str <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"-12\"><a class=\"anchor\" href=\"#-12\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCNqYXZhLSVFNSVBRCU5NyVFNyVBQyVBNiVFNCVCOCVCMg==\"></span>Java 字符串</h2>\n<h3 id=\"-13\"><a class=\"anchor\" href=\"#-13\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCMlRTUlOUYlQkElRTYlOUMlQUMlRTclOUElODQ=\"></span>基本的</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">String</span> str1 <span class=\"token operator\">=</span> <span class=\"token string\">\"value\"</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">String</span> str2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"value\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">String</span> str3 <span class=\"token operator\">=</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span><span class=\"token number\">123</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"-14\"><a class=\"anchor\" href=\"#-14\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCMlRTUlQUQlOTclRTclQUMlQTYlRTQlQjglQjIlRTglQkYlOUUlRTYlOEUlQTU=\"></span>字符串连接</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">String</span> s <span class=\"token operator\">=</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"str\"</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 3str3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">String</span> s <span class=\"token operator\">=</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"str\"</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 6str</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">String</span> s <span class=\"token operator\">=</span> <span class=\"token string\">\"3\"</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"str\"</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 33str</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">String</span> s <span class=\"token operator\">=</span> <span class=\"token string\">\"3\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"3\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"23\"</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 3323</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token class-name\">String</span> s <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"23\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3323</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token class-name\">String</span> s <span class=\"token operator\">=</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token number\">23</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 29</span></pre></td></tr></table></figure><h3 id=\"-15\"><a class=\"anchor\" href=\"#-15\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCMlRTUlQUQlOTclRTclQUMlQTYlRTQlQjglQjIlRTclOTQlOUYlRTYlODglOTAlRTUlOTklQTg=\"></span>字符串生成器</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">StringBuilder</span> sb <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><hr />\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>┌───┬───┬───┬───┬───┬───┬───┬───┬───┐</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>└───┴───┴───┴───┴───┴───┴───┴───┴───┘</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">0</span>   <span class=\"token number\">1</span>   <span class=\"token number\">2</span>   <span class=\"token number\">3</span>   <span class=\"token number\">4</span>   <span class=\"token number\">5</span>   <span class=\"token number\">6</span>   <span class=\"token number\">7</span>   <span class=\"token number\">8</span>   <span class=\"token number\">9</span></pre></td></tr></table></figure><hr />\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>sb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Reference\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><hr />\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>┌───┬───┬───┬───┬───┬───┬───┬───┬───┐</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">|</span> <span class=\"token class-name\">R</span> <span class=\"token operator\">|</span> e <span class=\"token operator\">|</span> f <span class=\"token operator\">|</span> e <span class=\"token operator\">|</span> r <span class=\"token operator\">|</span> e <span class=\"token operator\">|</span> n <span class=\"token operator\">|</span> c <span class=\"token operator\">|</span> e <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>└───┴───┴───┴───┴───┴───┴───┴───┴───┘</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">0</span>   <span class=\"token number\">1</span>   <span class=\"token number\">2</span>   <span class=\"token number\">3</span>   <span class=\"token number\">4</span>   <span class=\"token number\">5</span>   <span class=\"token number\">6</span>   <span class=\"token number\">7</span>   <span class=\"token number\">8</span>   <span class=\"token number\">9</span></pre></td></tr></table></figure><hr />\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>sb<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><hr />\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>┌───┬───┬───┬───┬───┬───┬───┬───┬───┐</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">|</span> <span class=\"token class-name\">R</span> <span class=\"token operator\">|</span> e <span class=\"token operator\">|</span> f <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>└───┴───┴───┴───┴───┴───┴───┴───┴───┘</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">0</span>   <span class=\"token number\">1</span>   <span class=\"token number\">2</span>   <span class=\"token number\">3</span>   <span class=\"token number\">4</span>   <span class=\"token number\">5</span>   <span class=\"token number\">6</span>   <span class=\"token number\">7</span>   <span class=\"token number\">8</span>   <span class=\"token number\">9</span></pre></td></tr></table></figure><hr />\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>sb<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"My \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><hr />\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>┌───┬───┬───┬───┬───┬───┬───┬───┬───┐</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">|</span> <span class=\"token class-name\">M</span> <span class=\"token operator\">|</span> y <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span> <span class=\"token class-name\">R</span> <span class=\"token operator\">|</span> e <span class=\"token operator\">|</span> f <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>└───┴───┴───┴───┴───┴───┴───┴───┴───┘</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">0</span>   <span class=\"token number\">1</span>   <span class=\"token number\">2</span>   <span class=\"token number\">3</span>   <span class=\"token number\">4</span>   <span class=\"token number\">5</span>   <span class=\"token number\">6</span>   <span class=\"token number\">7</span>   <span class=\"token number\">8</span>   <span class=\"token number\">9</span></pre></td></tr></table></figure><hr />\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>sb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><hr />\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>┌───┬───┬───┬───┬───┬───┬───┬───┬───┐</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">|</span> <span class=\"token class-name\">M</span> <span class=\"token operator\">|</span> y <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span> <span class=\"token class-name\">R</span> <span class=\"token operator\">|</span> e <span class=\"token operator\">|</span> f <span class=\"token operator\">|</span> <span class=\"token operator\">!</span> <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>└───┴───┴───┴───┴───┴───┴───┴───┴───┘</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">0</span>   <span class=\"token number\">1</span>   <span class=\"token number\">2</span>   <span class=\"token number\">3</span>   <span class=\"token number\">4</span>   <span class=\"token number\">5</span>   <span class=\"token number\">6</span>   <span class=\"token number\">7</span>   <span class=\"token number\">8</span>   <span class=\"token number\">9</span></pre></td></tr></table></figure><h3 id=\"-16\"><a class=\"anchor\" href=\"#-16\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCMlRTYlQUYlOTQlRTglQkUlODM=\"></span>比较</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">String</span> s1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"QuickRef\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">String</span> s2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"QuickRef\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>s1 <span class=\"token operator\">==</span> s2          <span class=\"token comment\">// false</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>s1<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>s2<span class=\"token punctuation\">)</span>     <span class=\"token comment\">// true</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token string\">\"AB\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equalsIgnoreCase</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ab\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// true</span></pre></td></tr></table></figure><h3 id=\"-17\"><a class=\"anchor\" href=\"#-17\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCMlRTYlOTMlOEQlRTclQkElQjU=\"></span>操纵</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">String</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"Abcd\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>str<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// ABCD</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>str<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// abcd</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>str<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// Abcd#</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>str<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// A-cd</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token string\">\"  abc \"</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// abc</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token string\">\"ab\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">toCharArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// &#123;'a', 'b'&#125;</span></pre></td></tr></table></figure><h3 id=\"-18\"><a class=\"anchor\" href=\"#-18\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCMlRTQlQkYlQTElRTYlODElQUY=\"></span>信息</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">String</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"abcd\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>str<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// c</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>str<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">// 0</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>str<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"z\"</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">// -1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>str<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 4</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>str<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// abcd</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>str<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// cd</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>str<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// c</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>str<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// true</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>str<span class=\"token punctuation\">.</span><span class=\"token function\">endsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// true</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>str<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>str<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// false</span></pre></td></tr></table></figure><h3 id=\"-19\"><a class=\"anchor\" href=\"#-19\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCMlRTQlQjglOEQlRTUlOEYlQUYlRTUlOEYlOTg=\"></span>不可变</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">String</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>str<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"world\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 输出: hello</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><hr />\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">String</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">String</span> concat <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"world\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 输出: helloworld</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>concat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>一旦创建就不能修改，任何修改都会创建一个新的 String</p>\n<h2 id=\"-20\"><a class=\"anchor\" href=\"#-20\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCNqYXZhLSVFNiU5NSVCMCVFNyVCQiU4NA==\"></span>Java 数组</h2>\n<h3 id=\"-21\"><a class=\"anchor\" href=\"#-21\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCMlRTUlQTMlQjAlRTYlOTglOEUtZGVjbGFyZQ==\"></span>声明 Declare</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a4 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>a4<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>a4<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>a4<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"-22\"><a class=\"anchor\" href=\"#-22\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCMlRTQlQkYlQUUlRTYlOTQlQjktbW9kaWZ5\"></span>修改 Modify</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 9</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3</span></pre></td></tr></table></figure><h3 id=\"-23\"><a class=\"anchor\" href=\"#-23\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCMlRTUlQkUlQUElRTclOEUlQUYtJUU4JUFGJUJCLS0lRTUlODYlOTk=\"></span>循环 (读 &amp; 写)</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 输出: 2 4 6</span></pre></td></tr></table></figure><h3 id=\"-24\"><a class=\"anchor\" href=\"#-24\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCNsb29wLXJlYWQ=\"></span>Loop (Read)</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token operator\">:</span> arr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 输出: a b c</span></pre></td></tr></table></figure><h3 id=\"-25\"><a class=\"anchor\" href=\"#-25\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCMlRTQlQkElOEMlRTclQkIlQjQlRTYlOTUlQjAlRTclQkIlODQtbXVsdGlkaW1lbnNpb25hbC1hcnJheXM=\"></span>二维数组 Multidimensional Arrays</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> matrix <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 4</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// [[1, 2, 3], [4, 5]]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">deepToString</span><span class=\"token punctuation\">(</span>matrix<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> a<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 输出: 1 2 3 4 5 6 7</span></pre></td></tr></table></figure><h3 id=\"-26\"><a class=\"anchor\" href=\"#-26\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCMlRTYlOEUlOTIlRTUlQkElOEYtc29ydA==\"></span>排序 Sort</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> chars <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token char\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token char\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token char\">'c'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>chars<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// [a, b, c]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>chars<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"-27\"><a class=\"anchor\" href=\"#-27\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCNqYXZhLSVFNiU5RCVBMSVFNCVCQiVCNiVFOCVBRiVBRCVFNSU4RiVBNQ==\"></span>Java 条件语句</h2>\n<h3 id=\"-28\"><a class=\"anchor\" href=\"#-28\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCMlRTglQkYlOTAlRTclQUUlOTclRTclQUMlQTY=\"></span>运算符</h3>\n<ul>\n<li><code>+</code>  <em>(加法运算符 (也用于字符串连接))</em></li>\n<li><code>-</code>  <em>(减法运算符)</em></li>\n<li><code>*</code>  <em>(乘法运算符)</em></li>\n<li><code>/</code>  <em>(分区运算符)</em></li>\n<li><code>%</code>  <em>(余数运算符)</em></li>\n<li><code>=</code>  <em>(简单赋值运算符)</em></li>\n<li><code>++</code>  <em>(增量运算符；将值增加 1)</em></li>\n<li><code>--</code>  <em>(递减运算符；将值减 1)</em></li>\n<li><code>!</code>  <em>(逻辑补码运算符；反转布尔值)</em></li>\n</ul>\n<hr />\n<ul>\n<li><code>==</code>  <em>(等于)</em></li>\n<li><code>!=</code>  <em>(不等于)</em></li>\n<li><code>&gt;</code>  <em>(比... 更棒)</em></li>\n<li><code>&gt;=</code>  <em>(大于或等于)</em></li>\n<li><code>&lt;</code>  <em>(少于)</em></li>\n<li><code>&lt;=</code>  <em>(小于或等于)</em></li>\n</ul>\n<hr />\n<ul>\n<li><code>&amp;&amp;</code>  <em>条件与</em></li>\n<li><code>||</code>  <em>条件或</em></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCMlRTQlQjglODklRTUlODUlODMlRTglQkYlOTAlRTclQUUlOTclRTclQUMlQTY=\">?:</span> <em>三元 (if-then-else 语句的简写)</em></li>\n</ul>\n<hr />\n<ul>\n<li><code>instanceof</code>  <em>(将对象与指定类型进行比较)</em></li>\n</ul>\n<hr />\n<ul>\n<li><code>~</code>  <em>(一元按位补码)</em></li>\n<li><code>&lt;&lt;</code>  <em>(签名左移)</em></li>\n<li><code>&gt;&gt;</code>  <em>(有符号右移)</em></li>\n<li><code>&gt;&gt;&gt;</code>  <em>(无符号右移)</em></li>\n<li><code>&amp;</code>  <em>(按位与)</em></li>\n<li><code>^</code>  <em>(按位异或)</em></li>\n<li><code>|</code>  <em>(按位包含 OR)</em></li>\n</ul>\n<h3 id=\"-29\"><a class=\"anchor\" href=\"#-29\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCNpZi1lbHNl\"></span>If else</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">></span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">></span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"-30\"><a class=\"anchor\" href=\"#-30\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCNzd2l0Y2g=\"></span>Switch</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> month <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">String</span> str<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>month<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    str <span class=\"token operator\">=</span> <span class=\"token string\">\"January\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    str <span class=\"token operator\">=</span> <span class=\"token string\">\"February\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    str <span class=\"token operator\">=</span> <span class=\"token string\">\"March\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    str <span class=\"token operator\">=</span> <span class=\"token string\">\"Some other month\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">// 输出: Result March</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Result \"</span> <span class=\"token operator\">+</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"-31\"><a class=\"anchor\" href=\"#-31\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCMlRTQlQjglODklRTUlODUlODMlRTglQkYlOTAlRTclQUUlOTclRTclQUMlQTY=\"></span>三元运算符</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> max <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">></span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> a <span class=\"token operator\">:</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 输出: 20</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"-32\"><a class=\"anchor\" href=\"#-32\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCNqYXZhLSVFNSVCRSVBQSVFNyU4RSVBRg==\"></span>Java 循环</h2>\n<h3 id=\"-33\"><a class=\"anchor\" href=\"#-33\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCNmb3ItJUU1JUJFJUFBJUU3JThFJUFG\"></span>For 循环</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 输出: 0123456789</span></pre></td></tr></table></figure><hr />\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">,</span>j<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>j <span class=\"token operator\">+</span> <span class=\"token string\">\"|\"</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 输出: 0|0 -1|1 -2|2</span></pre></td></tr></table></figure><h3 id=\"-34\"><a class=\"anchor\" href=\"#-34\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCMlRTUlQTIlOUUlRTUlQkMlQkElRTclOUElODQtZm9yLSVFNSVCRSVBQSVFNyU4RSVBRg==\"></span>增强的 For 循环</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> number<span class=\"token operator\">:</span> numbers<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 输出: 12345</span></pre></td></tr></table></figure><p>用于循环数组或列表</p>\n<h3 id=\"-35\"><a class=\"anchor\" href=\"#-35\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCN3aGlsZS0lRTUlQkUlQUElRTclOEUlQUY=\"></span>While 循环</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>count <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 输出: 01234</span></pre></td></tr></table></figure><h3 id=\"-36\"><a class=\"anchor\" href=\"#-36\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCNkby13aGlsZS0lRTUlQkUlQUElRTclOEUlQUY=\"></span>Do While 循环</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">do</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>count <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 输出: 01234</span></pre></td></tr></table></figure><h3 id=\"-37\"><a class=\"anchor\" href=\"#-37\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCMlRTclQkIlQTclRTclQkIlQUQlRTUlQTMlQjAlRTYlOTglOEU=\"></span>继续声明</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 输出: 01245</span></pre></td></tr></table></figure><h3 id=\"-38\"><a class=\"anchor\" href=\"#-38\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCMlRTQlQjglQUQlRTYlOTYlQUQlRTglQUYlQUQlRTUlOEYlQTU=\"></span>中断语句</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 输出: 0123</span></pre></td></tr></table></figure><h2 id=\"-39\"><a class=\"anchor\" href=\"#-39\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCNqYXZhLSVFNiVBMSU4NiVFNiU5RSVCNiVFNiU5MCU5QyVFOSU5QiU4Ng==\"></span>Java 框架搜集</h2>\n<h3 id=\"-40\"><a class=\"anchor\" href=\"#-40\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCNqYXZhLSVFOSU5QiU4NiVFNSU5MCU4OA==\"></span>Java 集合</h3>\n<p>集合</p>\n<p>Interface</p>\n<p>有序</p>\n<p>已排序</p>\n<p>线程安全</p>\n<p>复制</p>\n<p>Nullable</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vamF2YXNlLzgvZG9jcy9hcGkvamF2YS91dGlsL0FycmF5TGlzdC5odG1s\">ArrayList</span></p>\n<p>List</p>\n<p>Y</p>\n<p><em>N</em></p>\n<p><em>N</em></p>\n<p>Y</p>\n<p>Y</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vamF2YXNlLzgvZG9jcy9hcGkvamF2YS91dGlsL1ZlY3Rvci5odG1s\">Vector</span></p>\n<p>List</p>\n<p>Y</p>\n<p><em>N</em></p>\n<p>Y</p>\n<p>Y</p>\n<p>Y</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vamF2YXNlLzgvZG9jcy9hcGkvamF2YS91dGlsL0xpbmtlZExpc3QuaHRtbA==\">LinkedList</span></p>\n<p>List, Deque</p>\n<p>Y</p>\n<p><em>N</em></p>\n<p><em>N</em></p>\n<p>Y</p>\n<p>Y</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vamF2YXNlLzgvZG9jcy9hcGkvamF2YS91dGlsL2NvbmN1cnJlbnQvQ29weU9uV3JpdGVBcnJheUxpc3QuaHRtbA==\">CopyOnWriteArrayList</span></p>\n<p>List</p>\n<p>Y</p>\n<p><em>N</em></p>\n<p>Y</p>\n<p>Y</p>\n<p>Y</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vamF2YXNlLzgvZG9jcy9hcGkvamF2YS91dGlsL0hhc2hTZXQuaHRtbA==\">HashSet</span></p>\n<p>Set</p>\n<p><em>N</em></p>\n<p><em>N</em></p>\n<p><em>N</em></p>\n<p><em>N</em></p>\n<p>One  <code>null</code></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vamF2YXNlLzgvZG9jcy9hcGkvamF2YS91dGlsL0xpbmtlZEhhc2hTZXQuaHRtbA==\">LinkedHashSet</span></p>\n<p>Set</p>\n<p>Y</p>\n<p><em>N</em></p>\n<p><em>N</em></p>\n<p><em>N</em></p>\n<p>One  <code>null</code></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vamF2YXNlLzgvZG9jcy9hcGkvamF2YS91dGlsL1RyZWVTZXQuaHRtbA==\">TreeSet</span></p>\n<p>Set</p>\n<p>Y</p>\n<p>Y</p>\n<p><em>N</em></p>\n<p><em>N</em></p>\n<p><em>N</em></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vamF2YXNlLzgvZG9jcy9hcGkvamF2YS91dGlsL2NvbmN1cnJlbnQvQ29weU9uV3JpdGVBcnJheVNldC5odG1s\">CopyOnWriteArraySet</span></p>\n<p>Set</p>\n<p>Y</p>\n<p><em>N</em></p>\n<p>Y</p>\n<p><em>N</em></p>\n<p>One  <code>null</code></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vamF2YXNlLzgvZG9jcy9hcGkvamF2YS91dGlsL2NvbmN1cnJlbnQvQ29uY3VycmVudFNraXBMaXN0U2V0Lmh0bWw=\">ConcurrentSkipListSet</span></p>\n<p>Set</p>\n<p>Y</p>\n<p>Y</p>\n<p>Y</p>\n<p><em>N</em></p>\n<p><em>N</em></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vamF2YXNlLzgvZG9jcy9hcGkvamF2YS91dGlsL0hhc2hNYXAuaHRtbA==\">HashMap</span></p>\n<p>Map</p>\n<p><em>N</em></p>\n<p><em>N</em></p>\n<p><em>N</em></p>\n<p><em>N (key)</em></p>\n<p>One  <code>null</code>  <em>(key)</em></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vamF2YXNlLzgvZG9jcy9hcGkvamF2YS91dGlsL0hhc2h0YWJsZS5odG1s\">HashTable</span></p>\n<p>Map</p>\n<p><em>N</em></p>\n<p><em>N</em></p>\n<p>Y</p>\n<p><em>N (key)</em></p>\n<p><em>N (key)</em></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vamF2YXNlLzgvZG9jcy9hcGkvamF2YS91dGlsL0xpbmtlZEhhc2hNYXAuaHRtbA==\">LinkedHashMap</span></p>\n<p>Map</p>\n<p>Y</p>\n<p><em>N</em></p>\n<p><em>N</em></p>\n<p><em>N (key)</em></p>\n<p>One  <code>null</code>  <em>(key)</em></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vamF2YXNlLzgvZG9jcy9hcGkvamF2YS91dGlsL1RyZWVNYXAuaHRtbA==\">TreeMap</span></p>\n<p>Map</p>\n<p>Y</p>\n<p>Y</p>\n<p><em>N</em></p>\n<p><em>N (key)</em></p>\n<p><em>N (key)</em></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vamF2YXNlLzgvZG9jcy9hcGkvamF2YS91dGlsL2NvbmN1cnJlbnQvQ29uY3VycmVudEhhc2hNYXAuaHRtbA==\">ConcurrentHashMap</span></p>\n<p>Map</p>\n<p><em>N</em></p>\n<p><em>N</em></p>\n<p>Y</p>\n<p><em>N (key)</em></p>\n<p><em>N</em></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vamF2YXNlLzgvZG9jcy9hcGkvamF2YS91dGlsL2NvbmN1cnJlbnQvQ29uY3VycmVudFNraXBMaXN0TWFwLmh0bWw=\">ConcurrentSkipListMap</span></p>\n<p>Map</p>\n<p>Y</p>\n<p>Y</p>\n<p>Y</p>\n<p><em>N (key)</em></p>\n<p><em>N</em></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vamF2YXNlLzgvZG9jcy9hcGkvamF2YS91dGlsL0FycmF5RGVxdWUuaHRtbA==\">ArrayDeque</span></p>\n<p>Deque</p>\n<p>Y</p>\n<p><em>N</em></p>\n<p><em>N</em></p>\n<p>Y</p>\n<p><em>N</em></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vamF2YXNlLzgvZG9jcy9hcGkvamF2YS91dGlsL1ByaW9yaXR5UXVldWUuaHRtbA==\">PriorityQueue</span></p>\n<p>Queue</p>\n<p>Y</p>\n<p><em>N</em></p>\n<p><em>N</em></p>\n<p>Y</p>\n<p><em>N</em></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vamF2YXNlLzgvZG9jcy9hcGkvamF2YS91dGlsL2NvbmN1cnJlbnQvQ29uY3VycmVudExpbmtlZFF1ZXVlLmh0bWw=\">ConcurrentLinkedQueue</span></p>\n<p>Queue</p>\n<p>Y</p>\n<p><em>N</em></p>\n<p>Y</p>\n<p>Y</p>\n<p><em>N</em></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vamF2YXNlLzgvZG9jcy9hcGkvamF2YS91dGlsL2NvbmN1cnJlbnQvQ29uY3VycmVudExpbmtlZERlcXVlLmh0bWw=\">ConcurrentLinkedDeque</span></p>\n<p>Deque</p>\n<p>Y</p>\n<p><em>N</em></p>\n<p>Y</p>\n<p>Y</p>\n<p><em>N</em></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vamF2YXNlLzgvZG9jcy9hcGkvamF2YS91dGlsL2NvbmN1cnJlbnQvQXJyYXlCbG9ja2luZ1F1ZXVlLmh0bWw=\">ArrayBlockingQueue</span></p>\n<p>Queue</p>\n<p>Y</p>\n<p><em>N</em></p>\n<p>Y</p>\n<p>Y</p>\n<p><em>N</em></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vamF2YXNlLzgvZG9jcy9hcGkvamF2YS91dGlsL2NvbmN1cnJlbnQvTGlua2VkQmxvY2tpbmdEZXF1ZS5odG1s\">LinkedBlockingDeque</span></p>\n<p>Deque</p>\n<p>Y</p>\n<p><em>N</em></p>\n<p>Y</p>\n<p>Y</p>\n<p><em>N</em></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vamF2YXNlLzgvZG9jcy9hcGkvamF2YS91dGlsL2NvbmN1cnJlbnQvUHJpb3JpdHlCbG9ja2luZ1F1ZXVlLmh0bWw=\">PriorityBlockingQueue</span></p>\n<p>Queue</p>\n<p>Y</p>\n<p><em>N</em></p>\n<p>Y</p>\n<p>Y</p>\n<p><em>N</em></p>\n<h3 id=\"-41\"><a class=\"anchor\" href=\"#-41\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCNhcnJheWxpc3Q=\"></span>ArrayList</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> nums <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 添加</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>nums<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>nums<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>nums<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 检索</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 为循环迭代编制索引</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>nums<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>nums<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 非常慢</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> value <span class=\"token operator\">:</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">//lambda 打印元素</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>nums<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">-></span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"-42\"><a class=\"anchor\" href=\"#-42\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCNoYXNobWFw\"></span>HashMap</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> m <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>m<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Five\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>m<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Eight\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>m<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Six\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>m<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Four\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>m<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Two\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 检索</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// Lambda forEach</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>m<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token class-name\">String</span> msg <span class=\"token operator\">=</span> key <span class=\"token operator\">+</span> <span class=\"token string\">\": \"</span> <span class=\"token operator\">+</span> value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"-43\"><a class=\"anchor\" href=\"#-43\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCNjb25jdXJyZW50aGFzaG1hcA==\"></span>ConcurrentHashMap</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">ConcurrentHashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> m</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ConcurrentHashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>m<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>m<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token number\">101</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Geeks\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>m<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token number\">102</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Geeks\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 移除</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>m<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token number\">101</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Geeks\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 如果不存在，就添加，存在就不变更</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>m<span class=\"token punctuation\">.</span><span class=\"token function\">putIfAbsent</span><span class=\"token punctuation\">(</span><span class=\"token number\">103</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// 替换</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>m<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token number\">101</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"For\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"-44\"><a class=\"anchor\" href=\"#-44\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCNoYXNoc2V0\"></span>HashSet</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> set <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashSet</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>set<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Empty!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>set<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dog\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>set<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cat\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>set<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mouse\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>set<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"snake\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>set<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bear\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>set<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cat\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Contains cat\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>set<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cat\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> element <span class=\"token operator\">:</span> set<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>set<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">-></span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"-45\"><a class=\"anchor\" href=\"#-45\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCNhcnJheWRlcXVl\"></span>ArrayDeque</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Deque</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayDeque</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 使用 add ()</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Dog\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 使用 addFirst ()</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>a<span class=\"token punctuation\">.</span><span class=\"token function\">addFirst</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Cat\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 使用 addLast ()</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>a<span class=\"token punctuation\">.</span><span class=\"token function\">addLast</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Horse\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// [Cat, Dog, Horse]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 访问元素</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span><span class=\"token function\">peek</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// 移除元素</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"-46\"><a class=\"anchor\" href=\"#-46\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCMlRTYlOUQlODIlRTklQTElQjktbWlzYw==\"></span>杂项 Misc</h2>\n<h3 id=\"-47\"><a class=\"anchor\" href=\"#-47\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCMlRTglQUUlQkYlRTklOTclQUUlRTQlQkYlQUUlRTklQTUlQjAlRTclQUMlQTY=\"></span>访问修饰符</h3>\n<p>修饰符</p>\n<p>Class</p>\n<p>Package</p>\n<p>Subclass</p>\n<p>World</p>\n<p>public</p>\n<p>Y</p>\n<p>Y</p>\n<p>Y</p>\n<p>Y</p>\n<p>protected</p>\n<p>Y</p>\n<p>Y</p>\n<p>Y</p>\n<p><em>N</em></p>\n<p>no modifier</p>\n<p>Y</p>\n<p>Y</p>\n<p><em>N</em></p>\n<p><em>N</em></p>\n<p>private</p>\n<p>Y</p>\n<p><em>N</em></p>\n<p><em>N</em></p>\n<p><em>N</em></p>\n<h3 id=\"-48\"><a class=\"anchor\" href=\"#-48\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCMlRTUlQjglQjglRTclOTQlQTglRTglQTElQTglRTglQkUlQkU=\"></span>常用表达</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">String</span> text <span class=\"token operator\">=</span> <span class=\"token string\">\"I am learning Java\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 删除所有空格</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>text<span class=\"token punctuation\">.</span><span class=\"token function\">replaceAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\\s+\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 拆分字符串</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>text<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\\|\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>text<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Pattern</span><span class=\"token punctuation\">.</span><span class=\"token function\">quote</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"|\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>查看: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL3JlZ2V4Lmh0bWwjamF2YS0lRTQlQjglQUQlRTclOUElODQlRTYlQUQlQTMlRTUlODglOTklRTglQTElQTglRTglQkUlQkUlRTUlQkMlOEY=\">Regex in java</span></p>\n<h3 id=\"-49\"><a class=\"anchor\" href=\"#-49\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCMlRTYlQjMlQTglRTklODclOEEtY29tbWVudA==\"></span>注释 Comment</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 我是单行注释！</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>而我是一个</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>多行注释！</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  * 这个</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  * 是</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  * 文档</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  * 注释</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> */</span></pre></td></tr></table></figure><h3 id=\"-50\"><a class=\"anchor\" href=\"#-50\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCMlRTUlODUlQjMlRTklOTQlQUUlRTUlQUQlOTc=\"></span>关键字</h3>\n<ul>\n<li>abstract</li>\n<li>continue</li>\n<li>for</li>\n<li>new</li>\n<li>switch</li>\n<li>assert</li>\n<li>default</li>\n<li>goto</li>\n<li>package</li>\n<li>synchronized</li>\n<li>boolean</li>\n<li>do</li>\n<li>if</li>\n<li>private</li>\n<li>this</li>\n<li>break</li>\n<li>double</li>\n<li>implements</li>\n<li>protected</li>\n<li>throw</li>\n<li>byte</li>\n<li>else</li>\n<li>import</li>\n<li>public</li>\n<li>throws</li>\n<li>case</li>\n<li>enum</li>\n<li>instanceof</li>\n<li>return</li>\n<li>transient</li>\n<li>catch</li>\n<li>extends</li>\n<li>int</li>\n<li>short</li>\n<li>try</li>\n<li>char</li>\n<li>final</li>\n<li>interface</li>\n<li>static</li>\n<li>void</li>\n<li>class</li>\n<li>finally</li>\n<li>long</li>\n<li>strictfp</li>\n<li>volatile</li>\n<li>const</li>\n<li>float</li>\n<li>native</li>\n<li>super</li>\n<li>while</li>\n</ul>\n<h3 id=\"-51\"><a class=\"anchor\" href=\"#-51\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCMlRTYlOTUlQjAlRTUlQUQlQTYlRTYlOTYlQjklRTYlQjMlOTU=\"></span>数学方法</h3>\n<p><code>Math.max(a,b)</code></p>\n<p><code>a</code>  和  <code>b</code>  的最大值</p>\n<p><code>Math.min(a,b)</code></p>\n<p><code>a</code>  和  <code>b</code>  的最小值</p>\n<p><code>Math.abs(a)</code></p>\n<p>绝对值</p>\n<p><code>Math.sqrt(a)</code></p>\n<p><code>a</code>  的平方根</p>\n<p><code>Math.pow(a,b)</code></p>\n<p><code>b</code>  的幂</p>\n<p><code>Math.round(a)</code></p>\n<p>最接近的整数</p>\n<p><code>Math.sin(ang)</code></p>\n<p>正弦</p>\n<p><code>Math.cos(ang)</code></p>\n<p><code>ang</code>  的余弦</p>\n<p><code>Math.tan(ang)</code></p>\n<p><code>ang</code>  的切线</p>\n<p><code>Math.asin(ang)</code></p>\n<p><code>ang</code>  的反正弦</p>\n<p><code>Math.log(a)</code></p>\n<p><code>a</code>  的自然对数</p>\n<p><code>Math.toDegrees(rad)</code></p>\n<p>以度为单位的角度弧度</p>\n<p><code>Math.toRadians(deg)</code></p>\n<p>以弧度为单位的角度度</p>\n<h3 id=\"-52\"><a class=\"anchor\" href=\"#-52\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCMlRTUlQkMlODIlRTUlQjglQjgtdHJ5Y2F0Y2hmaW5hbGx5\"></span>异常 Try/Catch/Finally</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token comment\">// something</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"always printed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"-53\"><a class=\"anchor\" href=\"#-53\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCMlRTUlOEYlOEQlRTUlQjAlODQ=\"></span>反射</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>* 利用反射动态加载依赖库</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>* java9 及以上版本可用</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>* @param jar jar 文件</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token class-name\">Method</span> method <span class=\"token operator\">=</span> <span class=\"token class-name\">URLClassLoader</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaredMethod</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"addURL\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>method<span class=\"token punctuation\">.</span><span class=\"token function\">setAccessible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token class-name\">MethodHandle</span> addURL <span class=\"token operator\">=</span> lookup<span class=\"token punctuation\">.</span><span class=\"token function\">unreflect</span><span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token class-name\">URL</span> url <span class=\"token operator\">=</span> jar<span class=\"token punctuation\">.</span><span class=\"token function\">toURI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toURL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token class-name\">URLClassLoader</span> urlClassLoader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URLClassLoader</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">URL</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span>url<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>addURL<span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span>urlClassLoader<span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">//java8</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token class-name\">Method</span> method <span class=\"token operator\">=</span> <span class=\"token class-name\">URLClassLoader</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaredMethod</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"addURL\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>method<span class=\"token punctuation\">.</span><span class=\"token function\">setAccessible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>method<span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span>classLoader<span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"-54\"><a class=\"anchor\" href=\"#-54\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCN1dGlsJUU1JUI3JUE1JUU1JTg1JUI3JUU3JUIxJUJC\"></span>util 工具类</h3>\n<ul>\n<li><code>ArrayDeque</code>  提供 resizable-array 并实现 Deque 接</li>\n<li><code>Arrays</code>  包含一个静态工厂，允许将数组视为列表</li>\n<li><code>Collections</code>  包含对集合进行操作或返回集合的静态方法</li>\n<li><code>Date</code>  表示特定的时间瞬间，精度为毫秒</li>\n<li><code>Dictionary</code>  是任何类的抽象父类，例如 Hashtable，它将键映射到值</li>\n<li><code>EnumMap</code>  一个专门用于枚举键的 Map 实现</li>\n<li><code>EnumSet</code>  一个专门用于枚举键的 Set 实现</li>\n<li><code>Formatter</code>  提供对布局对齐和对齐、数字、字符串和日期 / 时间数据的常用格式以及特定于语言环境的输出的支持</li>\n<li><code>SecureRandom</code>  实例用于生成安全的伪随机数流</li>\n<li><code>UUID</code>  表示一个不可变的通用唯一标识符</li>\n<li><code>Vector</code>  实现了一个可增长的对象数组</li>\n<li><code>LocalDate</code>  表示没有时区的日期，只包含年月日，不可变并且线程安全的，java8 及以上版本可用</li>\n<li><code>LocalTime</code>  表示没有时区的时间，只包含时分秒，不可变并且线程安全的，java8 及以上版本可用</li>\n<li><code>LocalDateTime</code>  表示没有时区的日期时间，同时包含年月日时分秒，不可变并且线程安全的，java8 及以上版本可用</li>\n</ul>\n<h3 id=\"-55\"><a class=\"anchor\" href=\"#-55\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCNpbyVFNiVCNSU4MQ==\"></span>IO 流</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 输入流转输出流</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> inputContent <span class=\"token operator\">=</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">try</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InputStream</span> inputStream <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ByteArrayInputStream</span><span class=\"token punctuation\">(</span>inputContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     <span class=\"token class-name\">OutputStream</span> outputStream <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ByteArrayOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> buffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token number\">1024</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">int</span> len<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>len <span class=\"token operator\">=</span> inputStream<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        outputStream<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"-56\"><a class=\"anchor\" href=\"#-56\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCNjb2xsZWN0aW9ucy0lRTUlQjclQTUlRTUlODUlQjclRTclQjElQkI=\"></span>Collections 工具类</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 计算出现频率</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">int</span> frequency <span class=\"token operator\">=</span> <span class=\"token class-name\">Collections</span><span class=\"token punctuation\">.</span><span class=\"token function\">frequency</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// frequency = 2</span></pre></td></tr></table></figure><h3 id=\"-57\"><a class=\"anchor\" href=\"#-57\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCNzdHJlYW0tJUU2JUI1JTgx\"></span>Stream 流</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 统计词频</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">></span></span> frequencyMap <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">groupingBy</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">-></span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">counting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 1: 2</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// 2: 3</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// 3: 1</span></pre></td></tr></table></figure><h2 id=\"-58\"><a class=\"anchor\" href=\"#-58\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2phdmEuaHRtbCMlRTUlOEYlQTYlRTglQTclODE=\"></span>另见</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3JhY2xlLmNvbS9jbi9qYXZhLw==\">Java 官网</span> <em>(<span class=\"exturl\" data-url=\"aHR0cDovL29yYWNsZS5jb20vY24vamF2YQ==\">oracle.com/cn/java</span>)</em></li>\n</ul>\n<p>© 2022 Kenny Wang.</p>\n",
            "tags": [
                "编程语言"
            ]
        },
        {
            "id": "http://红叶.top/2023/05/23/memo-list/quick-reference/Linux%20%E5%91%BD%E4%BB%A4%E9%80%9F%E6%9F%A5%E8%A1%A8/",
            "url": "http://红叶.top/2023/05/23/memo-list/quick-reference/Linux%20%E5%91%BD%E4%BB%A4%E9%80%9F%E6%9F%A5%E8%A1%A8/",
            "title": "Linux 命令速查表",
            "date_published": "2023-05-23T07:49:38.092Z",
            "content_html": "<p>这个快速参考备忘单提供了使用 Linux 常用命令的使用清单</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2xpbnV4LWNvbW1hbmQuaHRtbCMlRTUlOTElQkQlRTQlQkIlQTQlRTklODAlOUYlRTYlOUYlQTUlRTglQTElQTg=\"></span>命令速查表</h2>\n<h3 id=\"-2\"><a class=\"anchor\" href=\"#-2\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2xpbnV4LWNvbW1hbmQuaHRtbCMlRTclQjMlQkIlRTclQkIlOUY=\"></span>系统</h3>\n<p><strong> <code>uname</code> </strong></p>\n<p>显示 linux 系统信息</p>\n<p><strong> <code>uname -r</code> </strong></p>\n<p>显示内核版本信息</p>\n<p><strong> <code>uptime</code> </strong></p>\n<p>显示系统运行的时间<br />\n (包括平均负载)</p>\n<p><strong> <code>hostname</code> </strong></p>\n<p>显示系统主机名</p>\n<p><strong> <code>hostname -i</code> </strong></p>\n<p>显示系统的 IP 地址</p>\n<p><strong> <code>last reboot</code> </strong></p>\n<p>显示系统重新启动历史记录</p>\n<p><strong> <code>date</code> </strong></p>\n<p>显示当前系统日期和时间</p>\n<p><strong> <code>timedatectl</code> </strong></p>\n<p>查询和更改系统时钟</p>\n<p><strong> <code>cal</code> </strong></p>\n<p>显示当前日历的月份和日期</p>\n<p><strong> <code>w</code> </strong></p>\n<p>显示系统中当前登录的用户</p>\n<p><strong> <code>whoami</code> </strong></p>\n<p>显示您的登录身份</p>\n<p><strong> <code>finger username</code> </strong></p>\n<p>显示有关用户的信息</p>\n<h3 id=\"-3\"><a class=\"anchor\" href=\"#-3\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2xpbnV4LWNvbW1hbmQuaHRtbCMlRTclQTElQUMlRTQlQkIlQjY=\"></span>硬件</h3>\n<p><strong> <code>dmesg</code> </strong></p>\n<p>显示启动消息</p>\n<p><strong> <code>cat /proc/cpuinfo</code> </strong></p>\n<p>显示有关 CPU 的更多信息，例如型号、型号名称、核心、厂商标识</p>\n<p><strong> <code>cat /proc/meminfo</code> </strong></p>\n<p>显示有关硬件内存的更多信息，例如总内存和可用内存</p>\n<p><strong> <code>lshw</code> </strong></p>\n<p>显示有关系统硬件配置的信息</p>\n<p><strong> <code>lsblk</code> </strong></p>\n<p>显示块设备相关信息</p>\n<p><strong> <code>free -m</code> </strong></p>\n<p>显示系统中空闲和使用的内存 (-m 标志表示内存 (MB))</p>\n<p><strong> <code>lspci -tv</code> </strong></p>\n<p>在树状图中显示 PCI 设备</p>\n<p><strong> <code>lsusb -tv</code> </strong></p>\n<p>以树状图的形式显示 USB 设备</p>\n<p><strong> <code>dmidecode</code> </strong></p>\n<p>显示 BIOS 中的硬件信息</p>\n<p><strong> <code>hdparm -i /dev/xda</code> </strong></p>\n<p>显示有关磁盘数据的信息</p>\n<p><strong> <code>hdparm -tT /dev/xda &lt;:code&gt;</code> </strong></p>\n<p>在设备 xda 上进行读速度测试</p>\n<p><strong> <code>badblocks -s /dev/xda</code> </strong></p>\n<p>测试磁盘上不可读的块</p>\n<h3 id=\"-4\"><a class=\"anchor\" href=\"#-4\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2xpbnV4LWNvbW1hbmQuaHRtbCMlRTclOTQlQTglRTYlODglQjc=\"></span>用户</h3>\n<p><strong> <code>id</code> </strong></p>\n<p>显示活动用户的详细信息，如 uid、gid 和组</p>\n<p><strong> <code>last</code> </strong></p>\n<p>显示系统中的最后一次登录</p>\n<p><strong> <code>who</code> </strong></p>\n<p>显示谁已登录到系统</p>\n<p><strong> <code>groupadd &quot;admin&quot;</code> </strong></p>\n<p>添加组 &quot;admin&quot;</p>\n<p><strong> <code>adduser &quot;Sam&quot;</code> </strong></p>\n<p>添加用户 Sam</p>\n<p><strong> <code>userdel &quot;Sam&quot;</code> </strong></p>\n<p>删除用户 Sam</p>\n<p><strong> <code>usermod</code> </strong></p>\n<p>用于更改 / 修改用户信息</p>\n<h3 id=\"-5\"><a class=\"anchor\" href=\"#-5\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2xpbnV4LWNvbW1hbmQuaHRtbCMlRTclOTklQkIlRTklOTklODY=\"></span>登陆</h3>\n<p><strong> <code>ssh user@host</code> </strong></p>\n<p>使用指定用户安全连接到主机</p>\n<p><strong> <code>ssh -p port_number user@host</code> </strong></p>\n<p>使用指定端口安全地连接到主机</p>\n<p><strong> <code>ssh host</code> </strong></p>\n<p>通过 SSH 默认端口 22 安全连接到系统</p>\n<p><strong> <code>telnet host</code> </strong></p>\n<p>通过 telnet 默认端口 23 连接到主机</p>\n<h3 id=\"-6\"><a class=\"anchor\" href=\"#-6\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2xpbnV4LWNvbW1hbmQuaHRtbCMlRTYlOTYlODclRTQlQkIlQjY=\"></span>文件</h3>\n<p><strong> <code>ls -al</code> </strong></p>\n<p>列出文件 - 包括常规文件和隐藏文件以及它们的权限</p>\n<p><strong> <code>pwd</code> </strong></p>\n<p>显示当前目录文件路径</p>\n<p><strong> <code>mkdir 'directory_name'</code> </strong></p>\n<p>创建一个新目录</p>\n<p><strong> <code>rm file_name</code> </strong></p>\n<p>删除一个文件</p>\n<p><strong> <code>rm -f filename</code> </strong></p>\n<p>强制删除文件</p>\n<p><strong> <code>rm -r directory_name</code> </strong></p>\n<p>递归地删除一个目录</p>\n<p><strong> <code>rm -rf directory_name</code> </strong></p>\n<p>强制并递归地删除一个目录</p>\n<p><strong> <code>cp file1 file2</code> </strong></p>\n<p>将 file1 的内容复制到 file2</p>\n<p><strong> <code>cp -r dir1 dir2</code> </strong></p>\n<p>递归地将 dir1 复制到 dir2。如果 dir2 不存在，则创建它</p>\n<p><strong> <code>mv file1 file2</code> </strong></p>\n<p>将 file1 重命名为 file2</p>\n<p><strong> <code>ln -s /path/to/file_name link_name</code> </strong></p>\n<p>创建到 file_name 的软链接</p>\n<p><strong> <code>touch file_name</code> </strong></p>\n<p>创建一个新文件</p>\n<p><strong> <code>cat &gt; file_name</code> </strong></p>\n<p>从键盘创建一个文件</p>\n<p><strong> <code>more file_name</code> </strong></p>\n<p>输出文件的内容</p>\n<p><strong> <code>head file_name</code> </strong></p>\n<p>显示文件的前 10 行</p>\n<p><strong> <code>tail file_name</code> </strong></p>\n<p>显示文件的最后 10 行</p>\n<p><strong> <code>gpg -c file_name</code> </strong></p>\n<p>加密一个文件</p>\n<p><strong> <code>gpg file_name.gpg</code> </strong></p>\n<p>解密文件</p>\n<p><strong> <code>wc</code> </strong></p>\n<p>打印文件中的字节、单词和行数</p>\n<p><strong> <code>xargs</code> </strong></p>\n<p>从标准输入执行命令</p>\n<h3 id=\"-7\"><a class=\"anchor\" href=\"#-7\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2xpbnV4LWNvbW1hbmQuaHRtbCMlRTglQkYlOUIlRTclQTglOEI=\"></span>进程</h3>\n<p><strong> <code>ps</code> </strong></p>\n<p>显示当前活动的进程</p>\n<p><strong> <code>ps aux | grep 'telnet'</code> </strong></p>\n<p>搜索进程 'telnet' 的 id</p>\n<p><strong> <code>pmap</code> </strong></p>\n<p>显示进程的内存映射</p>\n<p><strong> <code>top</code> </strong></p>\n<p>显示所有正在运行的进程</p>\n<p><strong> <code>kill pid</code> </strong></p>\n<p>使用给定的 pid 终止进程</p>\n<p><strong> <code>killall proc</code> </strong></p>\n<p>杀死 / 终止所有名为 proc 的进程</p>\n<p><strong> <code>pkill process-name</code> </strong></p>\n<p>向具有其名称的进程发送信号</p>\n<p><strong> <code>bg</code> </strong></p>\n<p>将一个在后台暂停的命令，变成继续执行</p>\n<p><strong> <code>fg</code> </strong></p>\n<p>将后台中的命令调至前台继续运行</p>\n<p><strong> <code>fg n</code> </strong></p>\n<p>job n to the foreground</p>\n<p><strong> <code>lsof</code> </strong></p>\n<p>列出进程打开的文件 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2xzb2YuaHRtbA==\">#</span></p>\n<p><strong> <code>renice 19 PID</code> </strong></p>\n<p>使进程以非常低的优先级运行</p>\n<p><strong> <code>pgrep firefox</code> </strong></p>\n<p>查找 Firefox 进程 ID</p>\n<p><strong> <code>pstree</code> </strong></p>\n<p>在树模型中可视化过程</p>\n<h3 id=\"-8\"><a class=\"anchor\" href=\"#-8\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2xpbnV4LWNvbW1hbmQuaHRtbCMlRTUlQUUlODklRTglQTMlODUlRTUlOEMlODU=\"></span>安装包</h3>\n<p><strong> <code>rpm -i pkg_name.rpm</code> </strong></p>\n<p>安装 rpm 包</p>\n<p><strong> <code>rpm -e pkg_name</code> </strong></p>\n<p>删除 rpm 包</p>\n<p><strong> <code>dnf install pkg_name</code> </strong></p>\n<p>使用 dnf 工具安装软件包</p>\n<h3 id=\"-9\"><a class=\"anchor\" href=\"#-9\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2xpbnV4LWNvbW1hbmQuaHRtbCMlRTYlOTYlODclRTQlQkIlQjYlRTYlOUQlODMlRTklOTklOTA=\"></span>文件权限</h3>\n<p><strong> <code>chmod octal filename</code> </strong></p>\n<p>将文件权限更改为八进制</p>\n<p><strong> <code>chmod 777 /data/test.c</code> </strong></p>\n<p>将 rwx 权限设置为 owner、group 和 everyone (其他可以访问服务器的人)</p>\n<p><strong> <code>chmod 755 /data/test.c</code> </strong></p>\n<p>将 rwx 设置为所有者，将 r_x 设置为组和所有人</p>\n<p><strong> <code>chmod 766 /data/test.c</code> </strong></p>\n<p>为所有者设置 rwx，为组和每个人设置 rw</p>\n<p><strong> <code>chown owner user-file</code> </strong></p>\n<p>更改文件的所有权</p>\n<p><strong> <code>chown owner-user:owner-group file_name</code> </strong></p>\n<p>更改文件的所有者和组所有者</p>\n<p><strong> <code>chown owner-user:owner-group directory</code> </strong></p>\n<p>更改目录的所有者和组所有者</p>\n<h3 id=\"-10\"><a class=\"anchor\" href=\"#-10\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2xpbnV4LWNvbW1hbmQuaHRtbCMlRTUlQUUlODklRTglQTMlODUlRTYlQkElOTAlRTclQkMlOTYlRTglQUYlOTE=\"></span>安装源 (编译)</h3>\n<p><strong> <code>./configure</code> </strong></p>\n<p>检查系统，以获得构建程序所需的软件。它将构建包含有效构建项目所需的指令的 Makefile</p>\n<p><strong> <code>make</code> </strong></p>\n<p><strong> <code>make install</code> </strong></p>\n<p>编译后，该命令将二进制文件安装在默认 / 修改的路径中</p>\n<h3 id=\"-11\"><a class=\"anchor\" href=\"#-11\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2xpbnV4LWNvbW1hbmQuaHRtbCMlRTUlOEUlOEIlRTclQkMlQTklRTYlODklOTMlRTUlOEMlODU=\"></span>压缩 / 打包</h3>\n<p><strong> <code>tar -cf home.tar home&lt;:code&gt;</code> </strong></p>\n<p>创建名为 &quot;home&quot; 的存档文件。tar 文件’home'</p>\n<p><strong> <code>tar -xf files.tar</code> </strong></p>\n<p>解压档案文件 &quot;files.tar&quot;</p>\n<p><strong> <code>tar -zcvf home.tar.gz source-folder</code> </strong></p>\n<p>从源文件夹创建压缩的 tar 存档文件</p>\n<p><strong> <code>gzip file</code> </strong></p>\n<p>压缩扩展名为.gz 的文件</p>\n<h3 id=\"-12\"><a class=\"anchor\" href=\"#-12\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2xpbnV4LWNvbW1hbmQuaHRtbCMlRTYlOTAlOUMlRTclQjQlQTI=\"></span>搜索</h3>\n<p><strong> <code>grep ‘pattern’ files</code> </strong></p>\n<p>在文件中搜索给定的模式</p>\n<p><strong> <code>grep -r pattern dir</code> </strong></p>\n<p>Search recursively for a pattern in a given directory</p>\n<p><strong> <code>locate file</code> </strong></p>\n<p>查找文件的所有实例</p>\n<p><strong> <code>find /home/ -name &quot;index&quot;</code> </strong></p>\n<p>在 /home 文件夹中查找以’index’开头的文件名</p>\n<p><strong> <code>find /home -size +10000k</code> </strong></p>\n<p>在主文件夹中查找大于 10000k 的文件</p>\n<h3 id=\"-13\"><a class=\"anchor\" href=\"#-13\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2xpbnV4LWNvbW1hbmQuaHRtbCMlRTclQkQlOTElRTclQkIlOUM=\"></span>网络</h3>\n<p><strong> <code>ip addr show</code> </strong></p>\n<p>显示 IP 地址和所有网络接口</p>\n<p><strong> <code>ip address add 192.168.0.1/24 dev eth0</code> </strong></p>\n<p>将 IP 地址 192.168.0.1 分配给接口 eth0</p>\n<p><strong> <code>ifconfig</code> </strong></p>\n<p>显示所有网络接口的 IP 地址</p>\n<p><strong> <code>ping host</code> </strong></p>\n<p>ping 命令发送 ICMP 回送请求以建立到服务器 / PC 的连接</p>\n<p><strong> <code>whois domain</code> </strong></p>\n<p>检索有关域名的更多信息</p>\n<p><strong> <code>dig domain</code> </strong></p>\n<p>检索关于域的 DNS 信息</p>\n<p><strong> <code>dig -x host</code> </strong></p>\n<p>对域执行反向查找</p>\n<p><strong> <code>host google.com</code> </strong></p>\n<p>执行域名的 IP 查找</p>\n<p><strong> <code>hostname -i</code> </strong></p>\n<p>显示本地 IP 地址</p>\n<p><strong> <code>wget file_name</code> </strong></p>\n<p>从在线资源下载文件</p>\n<p><strong> <code>netstat -pnltu</code> </strong></p>\n<p>显示所有活动监听端口</p>\n<h3 id=\"-14\"><a class=\"anchor\" href=\"#-14\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2xpbnV4LWNvbW1hbmQuaHRtbCMlRTYlOTYlODclRTQlQkIlQjYlRTQlQkMlQTAlRTglQkUlOTM=\"></span>文件传输</h3>\n<p><strong> <code>scp file1.txt server2/tmp</code> </strong></p>\n<p>安全地将 file1.txt 复制到 /tmp 目录中的 server2</p>\n<p><strong> <code>rsync -a /home/apps /backup/</code> </strong></p>\n<p>将 /home/apps 目录中的内容与 /backup 目录进行同步</p>\n<h3 id=\"-15\"><a class=\"anchor\" href=\"#-15\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2xpbnV4LWNvbW1hbmQuaHRtbCMlRTclQTMlODElRTclOUIlOTglRTQlQkQlQkYlRTclOTQlQTglRTYlODMlODUlRTUlODYlQjU=\"></span>磁盘使用情况</h3>\n<p><strong> <code>df -h</code> </strong></p>\n<p>显示安装系统上的空闲空间</p>\n<p><strong> <code>df -i</code> </strong></p>\n<p>显示文件系统上的空闲 inode</p>\n<p><strong> <code>fdisk -l</code> </strong></p>\n<p>显示磁盘分区、大小和类型</p>\n<p><strong> <code>du -sh</code> </strong></p>\n<p>以人类可读的格式显示当前目录中的磁盘使用情况</p>\n<p><strong> <code>findmnt</code> </strong></p>\n<p>显示所有文件系统的目标挂载点</p>\n<p><strong> <code>mount device-path mount-point</code> </strong></p>\n<p>挂载设备</p>\n<h3 id=\"-16\"><a class=\"anchor\" href=\"#-16\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2xpbnV4LWNvbW1hbmQuaHRtbCMlRTclOUIlQUUlRTUlQkQlOTUlRTklODElOEQlRTUlOEUlODY=\"></span>目录遍历</h3>\n<p><strong> <code>cd ..</code> </strong></p>\n<p>在目录树结构中向上移动一层</p>\n<p><strong> <code>cd</code> </strong></p>\n<p>将目录更改为 $HOME 目录</p>\n<p><strong> <code>cd /test</code> </strong></p>\n<p>将目录更改为 /test 目录</p>\n<h2 id=\"-17\"><a class=\"anchor\" href=\"#-17\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2xpbnV4LWNvbW1hbmQuaHRtbCMlRTUlOEYlQTYlRTglQTclODE=\"></span>另见</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qYXl3Y2psb3ZlLmdpdGh1Yi5pby9saW51eC1jb21tYW5k\">Linux 命令大全搜索工具</span> <em>(<span class=\"exturl\" data-url=\"aHR0cDovL2pheXdjamxvdmUuZ2l0aHViLmlv\">jaywcjlove.github.io</span>)</em></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGludXhjb29sLmNvbS8=\">Linux 命令大全 (手册)</span> <em>(<span class=\"exturl\" data-url=\"aHR0cDovL2xpbnV4Y29vbC5jb20=\">linuxcool.com</span>)</em></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYW5wYWdlcy5kZWJpYW4ub3JnL2J1c3Rlci9tYW5wYWdlcy16aC9pbmRleC5odG1s\">MAN 手册 - 中文</span> <em>(<span class=\"exturl\" data-url=\"aHR0cDovL2RlYmlhbi5vcmc=\">debian.org</span>)</em></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY2hlYXQtc2hlZXQuY24vcG9zdC9saW51eC1jb21tYW5kLWxpbmUtY2hlYXQtc2hlZXQv\">Linux 命令行速查表</span> <em>(<span class=\"exturl\" data-url=\"aHR0cDovL2NoZWF0LXNoZWV0LmNu\">cheat-sheet.cn</span>)</em></li>\n</ul>\n<p>© 2022 Kenny Wang.</p>\n",
            "tags": [
                "编程语言"
            ]
        },
        {
            "id": "http://红叶.top/2023/05/23/memo-list/quick-reference/MATLAB%20%E5%A4%87%E5%BF%98%E6%B8%85%E5%8D%95/",
            "url": "http://红叶.top/2023/05/23/memo-list/quick-reference/MATLAB%20%E5%A4%87%E5%BF%98%E6%B8%85%E5%8D%95/",
            "title": "MATLAB 备忘清单",
            "date_published": "2023-05-23T07:49:38.092Z",
            "content_html": "<p>这个快速参考备忘单提供了使用 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXRod29ya3MuY24v\">MATLAB</span> 科学计算语言快速入门的示例介绍</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNSU4NSVBNSVFOSU5NyVBOA==\"></span>入门</h2>\n<h3 id=\"-2\"><a class=\"anchor\" href=\"#-2\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNCVCQiU4QiVFNyVCQiU4RA==\"></span>介绍</h3>\n<p>MATLAB 是  <code>matrix laboratory</code>  的缩写形式</p>\n<hr />\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWF0aHdvcmtzLmNvbS8=\">MATLAB 官网</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuLw==\">MATLAB 官网 (中文)</span></li>\n</ul>\n<h3 id=\"矩阵和数组\"><a class=\"anchor\" href=\"#矩阵和数组\">#</a> 矩阵和数组</h3>\n<p>要创建每行包含四个元素的数组，请使用逗号 ( <code>,</code> ) 或空格分隔各元素</p>\n<figure class=\"highlight matlab\"><figcaption data-lang=\"MATLAB\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token number\">3</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>MATLAB 将执行上述语句，并返回以下结果：</p>\n<pre><code>a = 1×4\n     1     2     3     4\n</code></pre>\n<h4 id=\"-3\"><a class=\"anchor\" href=\"#-3\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNSU4OCU5QiVFNSVCQiVCQSVFNSU4QyU4NSVFNSU5MCVBQiVFNSVBNCU5QSVFOCVBMSU4QyVFNyU5QSU4NCVFNyU5RiVBOSVFOSU5OCVCNQ==\"></span>创建包含多行的矩阵</h4>\n<figure class=\"highlight matlab\"><figcaption data-lang=\"MATLAB\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span> <span class=\"token number\">3</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> <span class=\"token number\">2</span> <span class=\"token number\">4</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span> <span class=\"token number\">7</span> <span class=\"token number\">8</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><hr />\n<pre><code>a = 3×3\n     1     3     5\n     2     4     6\n     7     8    10\n</code></pre>\n<h4 id=\"-4\"><a class=\"anchor\" href=\"#-4\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNyU5NCVCMSVFOSU5QiVCNiVFNyVCQiU4NCVFNiU4OCU5MCVFNyU5QSU4NC01MS0lRTUlODglOTclRTUlOTAlOTElRTklODclOEY=\"></span>由零组成的 5×1 列向量</h4>\n<figure class=\"highlight matlab\"><figcaption data-lang=\"MATLAB\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>z <span class=\"token operator\">=</span> <span class=\"token function\">zeros</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><hr />\n<pre><code>z = 5×1\n     0\n     0\n     0\n     0\n     0\n</code></pre>\n<h3 id=\"-5\"><a class=\"anchor\" href=\"#-5\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNyU5RiVBOSVFOSU5OCVCNSVFNSU5MiU4QyVFNiU5NSVCMCVFNyVCQiU4NCVFOCVCRiU5MCVFNyVBRSU5Nw==\"></span>矩阵和数组运算</h3>\n<p>MATLAB 允许您使用单一的算术运算符或函数来处理矩阵中的所有值</p>\n<figure class=\"highlight matlab\"><figcaption data-lang=\"MATLAB\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a <span class=\"token operator\">+</span> <span class=\"token number\">10</span></pre></td></tr></table></figure><p>MATLAB 将执行上述语句，并返回以下结果：</p>\n<pre><code>ans = 3×3\n    11    13    15\n    12    14    16\n    17    18    20\n</code></pre>\n<hr />\n<figure class=\"highlight matlab\"><figcaption data-lang=\"MATLAB\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>MATLAB 将执行上述语句，并返回以下结果：</p>\n<pre><code>ans = 3×3\n    0.8415    0.1411   -0.9589\n    0.9093   -0.7568   -0.2794\n    0.6570    0.9894   -0.5440\n</code></pre>\n<p>要转置矩阵，请使用单引号 ( <code>'</code> )</p>\n<figure class=\"highlight matlab\"><figcaption data-lang=\"MATLAB\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a<span class=\"token operator\">'</span></pre></td></tr></table></figure><hr />\n<pre><code>ans = 3×3\n     1     2     7\n     3     4     8\n     5     6    10\n</code></pre>\n<p>使用  <code>*</code>  运算符执行标准矩阵乘法，这将计算行与列之间的内积</p>\n<figure class=\"highlight matlab\"><figcaption data-lang=\"MATLAB\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>p <span class=\"token operator\">=</span> a<span class=\"token operator\">*</span><span class=\"token function\">inv</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><hr />\n<pre><code>p = 3×3\n    1.0000         0         0\n         0    1.0000         0\n         0         0    1.0000\n</code></pre>\n<h3 id=\"-6\"><a class=\"anchor\" href=\"#-6\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNCVCOCVCMiVFOCU4MSU5NA==\"></span>串联</h3>\n<p>串联是连接数组以便形成更大数组的过程。实际上，第一个数组是通过将其各个元素串联起来而构成的。成对的方括号  <code>[]</code>  即为串联运算符。</p>\n<figure class=\"highlight matlab\"><figcaption data-lang=\"MATLAB\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>A <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><hr />\n<pre><code>A = 3×6\n\n     1     3     5     1     3     5\n     2     4     6     2     4     6\n     7     8    10     7     8    10\n</code></pre>\n<p>使用逗号将彼此相邻的数组串联起来称为水平串联。每个数组必须具有相同的行数。同样，如果各数组具有相同的列数，则可以使用分号垂直串联。</p>\n<figure class=\"highlight matlab\"><figcaption data-lang=\"MATLAB\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>A <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">;</span> a<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><hr />\n<pre><code>A = 6×3\n\n     1     3     5\n     2     4     6\n     7     8    10\n     1     3     5\n     2     4     6\n     7     8    10\n</code></pre>\n<h3 id=\"-7\"><a class=\"anchor\" href=\"#-7\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNyU5RiVBOSVFOSU5OCVCNSVFNSU5MiU4QyVFNiU5NSVCMCVFNyVCQiU4NA==\"></span>矩阵和数组</h3>\n<p>要创建每行包含四个元素的数组，请使用逗号 ( <code>,</code> ) 或空格分隔各元素</p>\n<figure class=\"highlight matlab\"><figcaption data-lang=\"MATLAB\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token number\">3</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>MATLAB 将执行上述语句，并返回以下结果：</p>\n<pre><code>a = 1×4\n     1     2     3     4\n</code></pre>\n<h4 id=\"-8\"><a class=\"anchor\" href=\"#-8\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNSU4OCU5QiVFNSVCQiVCQSVFNSU4QyU4NSVFNSU5MCVBQiVFNSVBNCU5QSVFOCVBMSU4QyVFNyU5QSU4NCVFNyU5RiVBOSVFOSU5OCVCNQ==\"></span>创建包含多行的矩阵</h4>\n<figure class=\"highlight matlab\"><figcaption data-lang=\"MATLAB\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span> <span class=\"token number\">3</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> <span class=\"token number\">2</span> <span class=\"token number\">4</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span> <span class=\"token number\">7</span> <span class=\"token number\">8</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><hr />\n<pre><code>a = 3×3\n     1     3     5\n     2     4     6\n     7     8    10\n</code></pre>\n<h4 id=\"-9\"><a class=\"anchor\" href=\"#-9\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNyU5NCVCMSVFOSU5QiVCNiVFNyVCQiU4NCVFNiU4OCU5MCVFNyU5QSU4NC01MS0lRTUlODglOTclRTUlOTAlOTElRTklODclOEY=\"></span>由零组成的 5×1 列向量</h4>\n<figure class=\"highlight matlab\"><figcaption data-lang=\"MATLAB\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>z <span class=\"token operator\">=</span> <span class=\"token function\">zeros</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><hr />\n<pre><code>z = 5×1\n     0\n     0\n     0\n     0\n     0\n</code></pre>\n<h3 id=\"-10\"><a class=\"anchor\" href=\"#-10\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNSVBNCU4RCVFNiU5NSVCMA==\"></span>复数</h3>\n<p>复数包含实部和虚部，虚数单位是 -1 的平方根。</p>\n<figure class=\"highlight matlab\"><figcaption data-lang=\"MATLAB\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><hr />\n<pre><code>ans = 0.0000 + 1.0000i\n</code></pre>\n<p>要表示复数的虚部，请使用 i 或 j。</p>\n<figure class=\"highlight matlab\"><figcaption data-lang=\"MATLAB\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token operator\">+</span><span class=\"token number\">4i</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token operator\">+</span><span class=\"token number\">3j</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">-</span><span class=\"token number\">i</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10j</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><hr />\n<pre><code>c = 2×2 complex\n\n   3.0000 + 4.0000i   4.0000 + 3.0000i\n   0.0000 - 1.0000i   0.0000 +10.0000i\n</code></pre>\n<h2 id=\"-11\"><a class=\"anchor\" href=\"#-11\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFOCVBRiVBRCVFOCVBOCU4MCVFNSU5RiVCQSVFNyVBMSU4MCVFNyU5RiVBNSVFOCVBRiU4Ng==\"></span>语言基础知识</h2>\n<h3 id=\"-12\"><a class=\"anchor\" href=\"#-12\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFOCVCRSU5MyVFNSU4NSVBNSVFNSU5MSVCRCVFNCVCQiVBNA==\"></span>输入命令</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9hbnMuaHRtbA==\">ans</span></p>\n<p>最近计算的答案</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9jbGMuaHRtbA==\">clc</span></p>\n<p>清空命令行窗口</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9kaWFyeS5odG1s\">diary</span></p>\n<p>将命令行窗口文本记录到日志文件中</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9mb3JtYXQuaHRtbA==\">format</span></p>\n<p>设置输出显示格式</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9ob21lLmh0bWw=\">home</span></p>\n<p>发送光标复位</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pc2tleXdvcmQuaHRtbA==\">iskeyword</span></p>\n<p>确定输入是否为 MATLAB 关键字</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tb3JlLmh0bWw=\">more</span></p>\n<p>控制命令行窗口中的分页输出</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9jb21tYW5kd2luZG93Lmh0bWw=\">commandwindow</span></p>\n<p>选择命令行窗口</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9jb21tYW5kaGlzdG9yeS5odG1s\">commandhistory</span></p>\n<p>打开命令历史记录窗口</p>\n<h4 id=\"-13\"><a class=\"anchor\" href=\"#-13\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNSVBRiVCOSVFOCVCMSVBMQ==\"></span>对象</h4>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9hbnMuaHRtbA==\">DisplayFormatOptions</span></p>\n<p>命令行窗口中的输出显示格式</p>\n<h3 id=\"-14\"><a class=\"anchor\" href=\"#-14\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNyU5RiVBOSVFOSU5OCVCNSVFNSU5MiU4QyVFNiU5NSVCMCVFNyVCQiU4NC0x\"></span>矩阵和数组</h3>\n<p>创建和合并数组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi96ZXJvcy5odG1s\">zeros</span></p>\n<p>创建全零数组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9vbmVzLmh0bWw=\">ones</span></p>\n<p>创建全部为 1 的数组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9yYW5kLmh0bWw=\">rand</span></p>\n<p>均匀分布的随机数</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi90cnVlLmh0bWw=\">true</span></p>\n<p>逻辑值 1（真）</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9mYWxzZS5odG1s\">false</span></p>\n<p>逻辑 0（假）</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9leWUuaHRtbA==\">eye</span></p>\n<p>单位矩阵</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9kaWFnLmh0bWw=\">diag</span></p>\n<p>创建对角矩阵或获取矩阵的对角元素</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9ibGtkaWFnLmh0bWw=\">blkdiag</span></p>\n<p>分块对角矩阵</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9kb3VibGUuY2F0Lmh0bWw=\">cat</span></p>\n<p>串联数组。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9ob3J6Y2F0Lmh0bWw=\">horzcat</span></p>\n<p>水平串联数组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi92ZXJ0Y2F0Lmh0bWw=\">vertcat</span></p>\n<p>垂直串联数组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9yZXBlbGVtLmh0bWw=\">repelem</span></p>\n<p>重复数组元素副本</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9yZXBtYXQuaHRtbA==\">repmat</span></p>\n<p>重复数组副本</p>\n<p>创建网格</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9saW5zcGFjZS5odG1s\">linspace</span></p>\n<p>生成线性间距向量</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9sb2dzcGFjZS5odG1s\">logspace</span></p>\n<p>生成对数间距向量</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9mcmVxc3BhY2UuaHRtbA==\">freqspace</span></p>\n<p>频率响应的频率间距</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tZXNoZ3JpZC5odG1s\">meshgrid</span></p>\n<p>二维和三维网格</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZGdyaWQuaHRtbA==\">ndgrid</span></p>\n<p>N 维空间中的矩形网格</p>\n<p>确定大小、形状和排序</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9sZW5ndGguaHRtbA==\">length</span></p>\n<p>最大数组维度的长度</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zaXplLmh0bWw=\">size</span></p>\n<p>数组大小</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9kb3VibGUubmRpbXMuaHRtbA==\">ndims</span></p>\n<p>数组维度数目</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9kb3VibGUubnVtZWwuaHRtbA==\">numel</span></p>\n<p>数组元素的数目</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pc3NjYWxhci5odG1s\">isscalar</span></p>\n<p>确定输入是否为标量</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pc3NvcnRlZC5odG1s\">issorted</span></p>\n<p>确定数组是否已排序</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pc3NvcnRlZHJvd3MuaHRtbA==\">issortedrows</span></p>\n<p>确定矩阵或表的行是否已排序</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pc3ZlY3Rvci5odG1s\">isvector</span></p>\n<p>确定输入是否为向量</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pc21hdHJpeC5odG1s\">ismatrix</span></p>\n<p>确定输入是否为矩阵</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pc3Jvdy5odG1s\">isrow</span></p>\n<p>确定输入是否为行向量</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pc2NvbHVtbi5odG1s\">iscolumn</span></p>\n<p>确定输入是否为列向量</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pc2VtcHR5Lmh0bWw=\">isempty</span></p>\n<p>确定数组是否为空</p>\n<p>重构和重新排列</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zb3J0Lmh0bWw=\">sort</span></p>\n<p>对数组元素排序</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9kb3VibGUuc29ydHJvd3MuaHRtbA==\">sortrows</span></p>\n<p>对矩阵行或表行进行排序</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9mbGlwLmh0bWw=\">flip</span></p>\n<p>翻转元素顺序</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9mbGlwbHIuaHRtbA==\">fliplr</span></p>\n<p>将数组从左向右翻转</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9mbGlwdWQuaHRtbA==\">flipud</span></p>\n<p>将数组从上向下翻转</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9yb3Q5MC5odG1s\">rot90</span></p>\n<p>将数组旋转 90 度</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi90cmFuc3Bvc2UuaHRtbA==\">transpose</span></p>\n<p>转置向量或矩阵</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9jdHJhbnNwb3NlLmh0bWw=\">ctranspose</span></p>\n<p>复共轭转置</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9wZXJtdXRlLmh0bWw=\">permute</span></p>\n<p>置换数组维度</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pcGVybXV0ZS5odG1s\">ipermute</span></p>\n<p>逆置换数组维度。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9jaXJjc2hpZnQuaHRtbA==\">circshift</span></p>\n<p>循环平移数组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zaGlmdGRpbS5odG1s\">shiftdim</span></p>\n<p>移动数组维度</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9yZXNoYXBlLmh0bWw=\">reshape</span></p>\n<p>重构数组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zcXVlZXplLmh0bWw=\">squeeze</span></p>\n<p>删除长度为 1 的维度</p>\n<p>索引</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9jb2xvbi5odG1s\">colon</span></p>\n<p>向量创建、数组下标和  <code>for</code>  循环迭代</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9lbmQuaHRtbA==\">end</span></p>\n<p>终止代码块或指示最大数组索引</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pbmQyc3ViLmh0bWw=\">ind2sub</span></p>\n<p>将线性索引转换为下标</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zdWIyaW5kLmh0bWw=\">sub2ind</span></p>\n<p>将下标转换为线性索引</p>\n<h3 id=\"-15\"><a class=\"anchor\" href=\"#-15\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNiU5NSVCMCVFNSU4MCVCQyVFNyVCMSVCQiVFNSU5RSU4Qg==\"></span>数值类型</h3>\n<p>创建数值变量</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9kb3VibGUuaHRtbA==\">double</span></p>\n<p>双精度数组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zaW5nbGUuaHRtbA==\">single</span></p>\n<p>单精度数组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pbnQ4Lmh0bWw=\">int8</span></p>\n<p>8 位有符号整数数组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pbnQxNi5odG1s\">int16</span></p>\n<p>16 位有符号整数数组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pbnQzMi5odG1s\">int32</span></p>\n<p>32 位有符号整数数组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pbnQ2NC5odG1s\">int64</span></p>\n<p>64 位有符号整数数组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi91aW50OC5odG1s\">uint8</span></p>\n<p>8 位无符号整数数组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi91aW50MTYuaHRtbA==\">uint16</span></p>\n<p>16 位无符号整数数组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi91aW50MzIuaHRtbA==\">uint32</span></p>\n<p>32 位无符号整数数组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi91aW50NjQuaHRtbA==\">uint64</span></p>\n<p>64 位无符号整数数组</p>\n<p>在数值类型之间转换</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9jYXN0Lmh0bWw=\">cast</span></p>\n<p>将变量转换为不同的数据类型</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi90eXBlY2FzdC5odG1s\">typecast</span></p>\n<p>在不更改基础数据的情况下转换数据类型</p>\n<p>查询类型和值</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9hbGxmaW5pdGUuaHRtbCUyMg==\">allfinite</span></p>\n<p>Determine if all array elements are finite</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9hbnluYW4uaHRtbCUyMg==\">anynan</span></p>\n<p>Determine if any array element is NaN</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pc2ludGVnZXIuaHRtbA==\">isinteger</span></p>\n<p>确定输入是否为整数数组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pc2Zsb2F0Lmh0bWw=\">isfloat</span></p>\n<p>确定输入是否为浮点数组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pc251bWVyaWMuaHRtbA==\">isnumeric</span></p>\n<p>确定输入是否为数值数组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pc3JlYWwuaHRtbA==\">isreal</span></p>\n<p>确定数组是否使用复数存储</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pc2Zpbml0ZS5odG1s\">isfinite</span></p>\n<p>确定哪些数组元素为有限</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pc2luZi5odG1s\">isinf</span></p>\n<p>确定哪些数组元素为无限值</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pc25hbi5odG1s\">isnan</span></p>\n<p>确定哪些数组元素为 NaN</p>\n<p>数值范围</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9lcHMuaHRtbA==\">eps</span></p>\n<p>浮点相对精度</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9mbGludG1heC5odG1s\">flintmax</span></p>\n<p>浮点格式的最大连续整数</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pbmYuaHRtbA==\">Inf</span></p>\n<p>创建所有值均为  <code>Inf</code>  的数组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pbnRtYXguaHRtbA==\">intmax</span></p>\n<p>特定整数类型的最大值</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pbnRtaW4uaHRtbA==\">intmin</span></p>\n<p>特定整数类型的最小值</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uYW4uaHRtbA==\">NaN</span></p>\n<p>创建所有值均为  <code>NaN</code>  的数组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9yZWFsbWF4Lmh0bWw=\">realmax</span></p>\n<p>最大的正浮点数</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9yZWFsbWluLmh0bWw=\">realmin</span></p>\n<p>最小标准浮点数</p>\n<h3 id=\"-16\"><a class=\"anchor\" href=\"#-16\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNSVCRSVBQSVFNyU4RSVBRiVFNSU4RiU4QSVFNiU5RCVBMSVFNCVCQiVCNiVFOCVBRiVBRCVFNSU4RiVBNQ==\"></span>循环及条件语句</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pZi5odG1s\">if, elseif, else</span></p>\n<p>条件为 true 时执行语句</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zd2l0Y2guaHRtbA==\">switch, case, otherwise</span></p>\n<p>执行多组语句中的一组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9mb3IuaHRtbA==\">for</span></p>\n<p>用来重复指定次数的  <code>for</code>  循环</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi93aGlsZS5odG1s\">while</span></p>\n<p>条件为 true 时重复执行的  <code>while</code>  循环</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi90cnkuaHRtbA==\">try, catch</span></p>\n<p>执行语句并捕获产生的错误</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9icmVhay5odG1s\">break</span></p>\n<p>终止执行 for 或 while 循环</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9yZXR1cm4uaHRtbA==\">return</span></p>\n<p>将控制权交还给调用脚本或函数</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9jb250aW51ZS5odG1s\">continue</span></p>\n<p>将控制传递给  <code>for</code>  或  <code>while</code>  循环的下一迭代</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9wYXVzZS5odG1s\">pause</span></p>\n<p>暂时停止执行  <code>MATLAB</code></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9wYXJmb3IuaHRtbA==\">parfor</span></p>\n<p>并行 for 循环</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9lbmQuaHRtbA==\">end</span></p>\n<p>终止代码块或指示最大数组索引</p>\n<h3 id=\"-17\"><a class=\"anchor\" href=\"#-17\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNSVBRCU5NyVFNyVBQyVBNiVFNCVCOCVCMiVFNiU5NSVCMCVFNyVCQiU4NA==\"></span>字符串数组</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zdHJpbmcuaHRtbA==\">string</span></p>\n<p>字符串数组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zdHJpbmdzLmh0bWw=\">strings</span></p>\n<p>创建不包含字符的字符串数组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9qb2luLmh0bWw=\">join</span></p>\n<p>合并字符串</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9wbHVzLmh0bWw=\">plus</span></p>\n<p>添加数字，追加字符串</p>\n<h3 id=\"-18\"><a class=\"anchor\" href=\"#-18\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNSVBRCU5NyVFNyVBQyVBNiVFNiU5NSVCMCVFNyVCQiU4NA==\"></span>字符数组</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9jaGFyLmh0bWw=\">char</span></p>\n<p>字符数组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9jZWxsc3RyLmh0bWw=\">cellstr</span></p>\n<p>转换为字符向量元胞数组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9ibGFua3MuaHRtbA==\">blanks</span></p>\n<p>创建空白字符数组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXdsaW5lLmh0bWw=\">newline</span></p>\n<p>创建换行符</p>\n<h3 id=\"-19\"><a class=\"anchor\" href=\"#-19\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNSVBRCU5NyVFNyVBQyVBNiVFNiU4OCU5NiVFNSVBRCU5NyVFNyVBQyVBNiVFNCVCOCVCMiVFNiU5NSVCMCVFNyVCQiU4NA==\"></span>字符或字符串数组</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9jb21wb3NlLmh0bWw=\">compose</span></p>\n<p>将数据格式化为多个字符串</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zcHJpbnRmLmh0bWw=\">sprintf</span></p>\n<p>将数据格式化为字符串或字符向量</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zdHJjYXQuaHRtbA==\">strcat</span></p>\n<p>水平串联字符串</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9hcHBlbmQuaHRtbA==\">append</span></p>\n<p>合并字符串</p>\n<h3 id=\"-20\"><a class=\"anchor\" href=\"#-20\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNSVBRCU5NyVFNyVBQyVBNiVFNiU4OCU5NiVFNSVBRCU5NyVFNyVBQyVBNiVFNCVCOCVCMi0tLSVFOCVCRCVBQyVFNiU4RCVBMiVFOCVCRSU5MyVFNSU4NSVBNSVFNSU4RiU4MiVFNiU5NSVCMA==\"></span>字符或字符串 - 转换输入参数</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9jb252ZXJ0Y2hhcnN0b3N0cmluZ3MuaHRtbA==\">convertCharsToStrings</span></p>\n<p>将字符数组转换为字符串数组，其他数组不变</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9jb252ZXJ0c3RyaW5nc3RvY2hhcnMuaHRtbA==\">convertStringsToChars</span></p>\n<p>将字符串数组转换为字符数组，其他数组不变</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9jb252ZXJ0Y29udGFpbmVkc3RyaW5nc3RvY2hhcnMuaHRtbA==\">convertContainedStringsToChars</span></p>\n<p>在元胞数组或结构体的任何级别转换字符串数组</p>\n<h3 id=\"-21\"><a class=\"anchor\" href=\"#-21\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNSVBRCU5NyVFNyVBQyVBNiVFNiU4OCU5NiVFNSVBRCU5NyVFNyVBQyVBNiVFNCVCOCVCMi0tLSVFNSU5QyVBOCVFNiU5NSVCMCVFNSU4MCVCQyVFNSU5MiU4QyVFNSVBRCU5NyVFNyVBQyVBNiVFNCVCOCVCMiVFNCVCOSU4QiVFOSU5NyVCNCVFOCVCRCVBQyVFNiU4RCVBMg==\"></span>字符或字符串 - 在数值和字符串之间转换</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9kb3VibGUuaHRtbA==\">double</span></p>\n<p>双精度数组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zdHJpbmcuaHRtbA==\">string</span></p>\n<p>字符串数组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zdHIyZG91YmxlLmh0bWw=\">str2double</span></p>\n<p>将字符串转换为双精度值</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9udW0yc3RyLmh0bWw=\">num2str</span></p>\n<p>将数字转换为字符数组</p>\n<h3 id=\"-22\"><a class=\"anchor\" href=\"#-22\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNSVBRCU5NyVFNyVBQyVBNiVFNiU4OCU5NiVFNSVBRCU5NyVFNyVBQyVBNiVFNCVCOCVCMi0tLSVFNyVBMSVBRSVFNSVBRSU5QSVFNyVCMSVCQiVFNSU5RSU4QiVFNSU5MiU4QyVFNSVCMSU5RSVFNiU4MCVBNw==\"></span>字符或字符串 - 确定类型和属性</h3>\n<p>数据类型</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pc2NoYXIuaHRtbA==\">ischar</span></p>\n<p>确定输入是否为字符数组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pc2NlbGxzdHIuaHRtbA==\">iscellstr</span></p>\n<p>确定输入是否为字符向量元胞数组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pc3N0cmluZy5odG1s\">isstring</span></p>\n<p>确定输入是否为字符串数组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pc3N0cmluZ3NjYWxhci5odG1s\">isStringScalar</span></p>\n<p>确定输入是否为包含一个元素的字符串数组</p>\n<p>文本属性</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zdHJsZW5ndGguaHRtbA==\">strlength</span></p>\n<p>字符串长度</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pc3N0cnByb3AuaHRtbA==\">isstrprop</span></p>\n<p>确定输入字符串中的哪些字符属于指定类别</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pc2xldHRlci5odG1s\">isletter</span></p>\n<p>确定哪些字符为字母</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pc3NwYWNlLmh0bWw=\">isspace</span></p>\n<p>确定哪些字符是空白字符</p>\n<h3 id=\"-23\"><a class=\"anchor\" href=\"#-23\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNSVBRCU5NyVFNyVBQyVBNiVFNiU4OCU5NiVFNSVBRCU5NyVFNyVBQyVBNiVFNCVCOCVCMi0tLSVFNiU5RiVBNSVFNiU4OSVCRSVFNSU5MiU4QyVFNiU5QiVCRiVFNiU4RCVBMg==\"></span>字符或字符串 - 查找和替换</h3>\n<p>查找</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9jb250YWlucy5odG1s\">contains</span></p>\n<p>确定字符串中是否有模式</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRjaGVzLmh0bWw=\">matches</span></p>\n<p>确定模式是否与字符串匹配</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9jb3VudC5odG1s\">count</span></p>\n<p>计算字符串中模式的出现次数</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9lbmRzd2l0aC5odG1s\">endsWith</span></p>\n<p>确定字符串是否以模式结尾</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zdGFydHN3aXRoLmh0bWw=\">startsWith</span></p>\n<p>确定字符串是否以模式开头</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zdHJmaW5kLmh0bWw=\">strfind</span></p>\n<p>在其他字符串中查找字符串</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zc2NhbmYuaHRtbA==\">sscanf</span></p>\n<p>从字符串读取格式化数据</p>\n<p>替换</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9yZXBsYWNlLmh0bWw=\">replace</span></p>\n<p>查找并替换一个或多个子字符串</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9yZXBsYWNlYmV0d2Vlbi5odG1s\">replaceBetween</span></p>\n<p>替换起点和终点之间的子字符串</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zdHJyZXAuaHRtbA==\">strrep</span></p>\n<p>查找并替换子字符串</p>\n<h3 id=\"-24\"><a class=\"anchor\" href=\"#-24\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNSVBRCU5NyVFNyVBQyVBNiVFNCVCOCVCMiVFNSU4QyVCOSVFOSU4NSU4RCVFNiVBOCVBMSVFNSVCQyU4Ri0tLSVFNiU5RSU4NCVFNSVCQiVCQSVFNiVBOCVBMSVFNSVCQyU4Rg==\"></span>字符串匹配模式 - 构建模式</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9wYXR0ZXJuLmh0bWw=\">pattern</span></p>\n<p>用于搜索和匹配文本的模式</p>\n<h3 id=\"-25\"><a class=\"anchor\" href=\"#-25\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNSVBRCU5NyVFNyVBQyVBNiVFNCVCOCVCMiVFNSU4QyVCOSVFOSU4NSU4RCVFNiVBOCVBMSVFNSVCQyU4Ri0tLSVFNSVBRCU5NyVFNyVBQyVBNiVFNSU4QyVCOSVFOSU4NSU4RCVFNiVBOCVBMSVFNSVCQyU4Rg==\"></span>字符串匹配模式 - 字符匹配模式</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9hbHBoYW51bWVyaWNzcGF0dGVybi5odG1s\">alphanumericsPattern</span></p>\n<p>匹配字母和数字字符</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9jaGFyYWN0ZXJsaXN0cGF0dGVybi5odG1s\">characterListPattern</span></p>\n<p>匹配列表中的字符</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9kaWdpdHNwYXR0ZXJuLmh0bWw=\">digitsPattern</span></p>\n<p>匹配数字字符</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9sZXR0ZXJzcGF0dGVybi5odG1s\">lettersPattern</span></p>\n<p>匹配字母字符</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi93aGl0ZXNwYWNlcGF0dGVybi5odG1s\">whitespacePattern</span></p>\n<p>匹配空白字符</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi93aWxkY2FyZHBhdHRlcm4uaHRtbA==\">wildcardPattern</span></p>\n<p>匹配尽可能少的任意类型的字符</p>\n<h3 id=\"-26\"><a class=\"anchor\" href=\"#-26\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNSVBRCU5NyVFNyVBQyVBNiVFNCVCOCVCMiVFNSU4QyVCOSVFOSU4NSU4RCVFNiVBOCVBMSVFNSVCQyU4Ri0tLSVFNiVBOCVBMSVFNSVCQyU4RiVFNiU5MCU5QyVFNyVCNCVBMiVFOCVBNyU4NCVFNSU4OCU5OQ==\"></span>字符串匹配模式 - 模式搜索规则</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9vcHRpb25hbHBhdHRlcm4uaHRtbA==\">optionalPattern</span></p>\n<p>使模式匹配可选</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9wb3NzZXNzaXZlcGF0dGVybi5odG1s\">possessivePattern</span></p>\n<p>匹配模式而不回溯</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9jYXNlc2Vuc2l0aXZlcGF0dGVybi5odG1s\">caseSensitivePattern</span></p>\n<p>以区分大小写的方式匹配模式</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9jYXNlaW5zZW5zaXRpdmVwYXR0ZXJuLmh0bWw=\">caseInsensitivePattern</span></p>\n<p>以不区分大小写的方式匹配模式</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9hc2Zld29mcGF0dGVybi5odG1s\">asFewOfPattern</span></p>\n<p>模式匹配次数尽可能少</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9hc21hbnlvZnBhdHRlcm4uaHRtbA==\">asManyOfPattern</span></p>\n<p>模式匹配次数尽可能多</p>\n<h3 id=\"-27\"><a class=\"anchor\" href=\"#-27\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNSVBRCU5NyVFNyVBQyVBNiVFNCVCOCVCMiVFNSU4QyVCOSVFOSU4NSU4RCVFNiVBOCVBMSVFNSVCQyU4Ri0tLSVFOCVCRSVCOSVFNyU5NSU4QyVFNiVBOCVBMSVFNSVCQyU4Rg==\"></span>字符串匹配模式 - 边界模式</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9hbHBoYW51bWVyaWNib3VuZGFyeS5odG1s\">alphanumericBoundary</span></p>\n<p>匹配字母数字字符与非字母数字字符之间的边界</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9kaWdpdGJvdW5kYXJ5Lmh0bWw=\">digitBoundary</span></p>\n<p>匹配数字字符和非数字字符之间的边界</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9sZXR0ZXJib3VuZGFyeS5odG1s\">letterBoundary</span></p>\n<p>匹配字母字符和非字母字符之间的边界</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi93aGl0ZXNwYWNlYm91bmRhcnkuaHRtbA==\">whitespaceBoundary</span></p>\n<p>匹配空白字符和非空白字符之间的边界</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9saW5lYm91bmRhcnkuaHRtbA==\">lineBoundary</span></p>\n<p>匹配行首或行尾</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi90ZXh0Ym91bmRhcnkuaHRtbA==\">textBoundary</span></p>\n<p>匹配文本的开头或结尾</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9sb29rYWhlYWRib3VuZGFyeS5odG1s\">lookAheadBoundary</span></p>\n<p>匹配指定模式之前的边界</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9sb29rYmVoaW5kYm91bmRhcnkuaHRtbA==\">lookBehindBoundary</span></p>\n<p>匹配指定模式之后的边界</p>\n<h3 id=\"-28\"><a class=\"anchor\" href=\"#-28\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNSVBRCU5NyVFNyVBQyVBNiVFNCVCOCVCMiVFNSU4QyVCOSVFOSU4NSU4RCVFNiVBOCVBMSVFNSVCQyU4Ri0tLSVFOCU4NyVBQSVFNSVBRSU5QSVFNCVCOSU4OSVFNiVBOCVBMSVFNSVCQyU4RiVFNiU5OCVCRSVFNyVBNCVCQQ==\"></span>字符串匹配模式 - 自定义模式显示</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXNrZWRwYXR0ZXJuLmh0bWw=\">maskedPattern</span></p>\n<p>具有指定显示名称的模式</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uYW1lZHBhdHRlcm4uaHRtbA==\">namedPattern</span></p>\n<p>指定命名模式</p>\n<h3 id=\"-29\"><a class=\"anchor\" href=\"#-29\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNSVBRCU5NyVFNyVBQyVBNiVFNCVCOCVCMiVFNSU4QyVCOSVFOSU4NSU4RCVFNiVBOCVBMSVFNSVCQyU4Ri0tLSVFNiVBRCVBMyVFNSU4OCU5OSVFOCVBMSVBOCVFOCVCRSVCRSVFNSVCQyU4Rg==\"></span>字符串匹配模式 - 正则表达式</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9yZWdleHAuaHRtbA==\">regexp</span></p>\n<p>匹配正则表达式（区分大小写）</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9yZWdleHBpLmh0bWw=\">regexpi</span></p>\n<p>匹配正则表达式（不区分大小写）</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9yZWdleHByZXAuaHRtbA==\">regexprep</span></p>\n<p>使用正则表达式替换文本</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9yZWdleHB0cmFuc2xhdGUuaHRtbA==\">regexptranslate</span></p>\n<p>将文本转换为正则表达式</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9yZWdleHBwYXR0ZXJuLmh0bWw=\">regexpPattern</span></p>\n<p>匹配指定正则表达式的模式</p>\n<h3 id=\"-30\"><a class=\"anchor\" href=\"#-30\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNSVBRCU5NyVFNyVBQyVBNiVFNCVCOCVCMiVFNSU4QyVCOSVFOSU4NSU4RCVFNiVBOCVBMSVFNSVCQyU4Ri0tLSVFOCU4MSU5NCVFNiU4RSVBNSVFNSU5MiU4QyVFNiU4QiU4NiVFNSU4OCU4Ng==\"></span>字符串匹配模式 - 联接和拆分</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9qb2luLmh0bWw=\">join</span></p>\n<p>合并字符串</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9wbHVzLmh0bWw=\">plus</span></p>\n<p>添加数字，追加字符串</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zcGxpdC5odG1s\">split</span></p>\n<p>在分隔符处拆分字符串</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zcGxpdGxpbmVzLmh0bWw=\">splitlines</span></p>\n<p>在换行符处拆分字符串</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zdHJqb2luLmh0bWw=\">strjoin</span></p>\n<p>联接数组中的字符串</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zdHJzcGxpdC5odG1s\">strsplit</span></p>\n<p>在指定分隔符处拆分字符串或字符向量</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zdHJ0b2suaHRtbA==\">strtok</span></p>\n<p>所选的字符串部分</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9leHRyYWN0Lmh0bWw=\">extract</span></p>\n<p>从字符串中提取子字符串</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9leHRyYWN0YWZ0ZXIuaHRtbA==\">extractAfter</span></p>\n<p>提取指定位置后的子字符串</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9leHRyYWN0YmVmb3JlLmh0bWw=\">extractBefore</span></p>\n<p>提取指定位置前的子字符串</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9leHRyYWN0YmV0d2Vlbi5odG1s\">extractBetween</span></p>\n<p>提取起点和终点之间的子字符串</p>\n<h3 id=\"-31\"><a class=\"anchor\" href=\"#-31\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNSVBRCU5NyVFNyVBQyVBNiVFNCVCOCVCMiVFNyVCQyU5NiVFOCVCRSU5MQ==\"></span>字符串编辑</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9lcmFzZS5odG1s\">erase</span></p>\n<p>删除字符串内的子字符串</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9lcmFzZWJldHdlZW4uaHRtbA==\">eraseBetween</span></p>\n<p>删除起点和终点之间的子字符串</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9leHRyYWN0Lmh0bWw=\">extract</span></p>\n<p>从字符串中提取子字符串</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9leHRyYWN0YWZ0ZXIuaHRtbA==\">extractAfter</span></p>\n<p>提取指定位置后的子字符串</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9leHRyYWN0YmVmb3JlLmh0bWw=\">extractBefore</span></p>\n<p>提取指定位置前的子字符串</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9leHRyYWN0YmV0d2Vlbi5odG1s\">extractBetween</span></p>\n<p>提取起点和终点之间的子字符串</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pbnNlcnRhZnRlci5odG1s\">insertAfter</span></p>\n<p>在指定的子字符串后插入字符串</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pbnNlcnRiZWZvcmUuaHRtbA==\">insertBefore</span></p>\n<p>在指定的子字符串前插入字符串</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9wYWQuaHRtbA==\">pad</span></p>\n<p>为字符串添加前导或尾随字符</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zdHJpcC5odG1s\">strip</span></p>\n<p>删除字符串中的前导和尾部字符</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9sb3dlci5odG1s\">lower</span></p>\n<p>将字符串转换为小写</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi91cHBlci5odG1s\">upper</span></p>\n<p>将字符串转换为大写</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9yZXZlcnNlLmh0bWw=\">reverse</span></p>\n<p>反转字符串中的字符顺序</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9kZWJsYW5rLmh0bWw=\">deblank</span></p>\n<p>删除字符串末尾的尾随空白</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zdHJ0cmltLmh0bWw=\">strtrim</span></p>\n<p>从字符串中删除前导和尾随空白</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zdHJqdXN0Lmh0bWw=\">strjust</span></p>\n<p>对齐字符串</p>\n<h3 id=\"-32\"><a class=\"anchor\" href=\"#-32\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNSVBRCU5NyVFNyVBQyVBNiVFNCVCOCVCMiVFNiVBRiU5NCVFOCVCRSU4Mw==\"></span>字符串比较</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRjaGVzLmh0bWw=\">matches</span></p>\n<p>确定模式是否与字符串匹配</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zdHJjbXAuaHRtbA==\">strcmp</span></p>\n<p>比较字符串</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zdHJjbXBpLmh0bWw=\">strcmpi</span></p>\n<p>比较字符串（不区分大小写）</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zdHJuY21wLmh0bWw=\">strncmp</span></p>\n<p>比较字符串的前  <code>n</code>  个字符（区分大小写）</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zdHJuY21waS5odG1s\">strncmpi</span></p>\n<p>比较字符串的前  <code>n</code>  个字符（不区分大小写）</p>\n<h3 id=\"-33\"><a class=\"anchor\" href=\"#-33\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNSU5RiVCQSVFNiU5QyVBQyVFNyVBRSU5NyVFNiU5QyVBRg==\"></span>基本算术</h3>\n<p>加法</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9wbHVzLmh0bWw=\">+</span> 添加数字，追加字符串</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zdW0uaHRtbA==\">sum</span> 数组元素总和</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9jdW1zdW0uaHRtbA==\">cumsum</span> 累积和</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tb3ZzdW0uaHRtbA==\">movsum</span> 移动总和</li>\n</ul>\n<p>减法</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9taW51cy5odG1s\">-</span> 减法</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9kaWZmLmh0bWw=\">diff</span> 差分和近似导数</li>\n</ul>\n<p>乘法</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi90aW1lcy5odG1s\">.*</span></p>\n<p>乘法</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tdGltZXMuaHRtbA==\">*</span></p>\n<p>矩阵乘法</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9wcm9kLmh0bWw=\">prod</span></p>\n<p>数组元素的乘积</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9jdW1wcm9kLmh0bWw=\">cumprod</span></p>\n<p>累积乘积</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9wYWdlbXRpbWVzLmh0bWw=\">pagemtimes</span></p>\n<p>按页矩阵乘法</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi90ZW5zb3Jwcm9kLmh0bWw=\">tensorprod</span></p>\n<p>Tensor products between two tensors</p>\n<p>除法</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9yZGl2aWRlLmh0bWw=\">./</span></p>\n<p>数组右除</p>\n<p>[.](<span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9sZGl2aWRlLmh0bWw=\">https://ww2.mathworks.cn/help/matlab/ref/ldivide.html</span>)</p>\n<p>数组左除</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tcmRpdmlkZS5odG1s\">/</span></p>\n<p>求解关于 x 的线性方程组 xA = B</p>\n<p>[](<span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tbGRpdmlkZS5odG1s\">https://ww2.mathworks.cn/help/matlab/ref/mldivide.html</span>)</p>\n<p>求解关于 x 的线性方程组 Ax = B</p>\n<p>幂</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9wb3dlci5odG1s\">.^</span> 按元素求幂</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tcG93ZXIuaHRtbA==\">^</span> 矩阵幂</li>\n</ul>\n<p>转置</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi90cmFuc3Bvc2UuaHRtbA==\">.'</span></p>\n<p>转置向量或矩阵</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9jdHJhbnNwb3NlLmh0bWw=\">'</span></p>\n<p>复共轭转置</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9wYWdldHJhbnNwb3NlLmh0bWw=\">pagetranspose</span></p>\n<p>按页转置</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9wYWdlY3RyYW5zcG9zZS5odG1s\">pagectranspose</span></p>\n<p>按页复共轭转置</p>\n<p>数组符号</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi91bWludXMuaHRtbA==\">uminus</span> 一元减法</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi91cGx1cy5odG1s\">uplus</span> 一元加法</li>\n</ul>\n<h3 id=\"-34\"><a class=\"anchor\" href=\"#-34\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNiVBOCVBMSVFOSU5OSVBNCVFNiVCMyU5NSVFNSU5MiU4QyVFOCU4OCU4RCVFNSU4NSVBNQ==\"></span>模除法和舍入</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tb2QuaHRtbA==\">mod</span></p>\n<p>除后的余数（取模运算）</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9yZW0uaHRtbA==\">rem</span></p>\n<p>除后的余数</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pZGl2aWRlLmh0bWw=\">idivide</span></p>\n<p>带有舍入选项的整除</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9jZWlsLmh0bWw=\">ceil</span></p>\n<p>向正无穷舍入</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9maXguaHRtbA==\">fix</span></p>\n<p>向零舍入</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9mbG9vci5odG1s\">floor</span></p>\n<p>向负无穷舍入</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9yb3VuZC5odG1s\">round</span></p>\n<p>四舍五入为最近的小数或整数</p>\n<h3 id=\"-35\"><a class=\"anchor\" href=\"#-35\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFOCU4NyVBQSVFNSVBRSU5QSVFNCVCOSU4OSVFNCVCQSU4QyVFNSU4NSU4MyVFNSU4NyVCRCVFNiU5NSVCMA==\"></span>自定义二元函数</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9ic3hmdW4uaHRtbA==\">bsxfun</span></p>\n<p>对两个数组应用按元素运算（启用隐式扩展）</p>\n<h3 id=\"-36\"><a class=\"anchor\" href=\"#-36\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNSU4NSVCMyVFNyVCMyVCQiVFOCVCRiU5MCVFNyVBRSU5Nw==\"></span>关系运算</h3>\n<p>值的比较</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9lcS5odG1s\">==</span></p>\n<p>确定相等性</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9nZS5odG1s\">&gt;=</span></p>\n<p>决定大于或等于</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9ndC5odG1s\">&gt;</span></p>\n<p>确定大于</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9sZS5odG1s\">&lt;=</span></p>\n<p>确定小于等于</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9sdC5odG1s\">&lt;</span></p>\n<p>确定小于</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZS5odG1s\">~=</span></p>\n<p>确定不相等性</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pc2VxdWFsLmh0bWw=\">isequal</span></p>\n<p>确定数组相等性</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pc2VxdWFsbi5odG1s\">isequaln</span></p>\n<p>测试数组相等性，将  <code>NaN</code>  值视为相等</p>\n<h3 id=\"-37\"><a class=\"anchor\" href=\"#-37\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFOSU4MCVCQiVFOCVCRSU5MSVFNSVCOCU4MyVFNSVCMCU5NCVFOCVCRiU5MCVFNyVBRSU5Nw==\"></span>逻辑（布尔）运算</h3>\n<p>true 或 false 条件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9sb2dpY2Fsb3BlcmF0b3Jzc2hvcnRjaXJjdWl0Lmh0bWw=\">Short-circuit &amp;&amp;, ||</span></p>\n<p>具有短路功能的逻辑运算</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9hbmQuaHRtbA==\">&amp;</span></p>\n<p>计算逻辑  <code>AND</code></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9ub3QuaHRtbA==\">~</span></p>\n<p>计算逻辑  <code>NOT</code></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9vci5odG1s\">|</span></p>\n<p>计算逻辑  <code>OR</code></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi94b3IuaHRtbA==\">xor</span></p>\n<p>计算逻辑异  <code>OR</code></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9hbGwuaHRtbA==\">all</span></p>\n<p>确定所有的数组元素是为非零还是  <code>true</code></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9hbnkuaHRtbA==\">any</span></p>\n<p>确定是否有任何数组元素非零</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9mYWxzZS5odG1s\">false</span></p>\n<p>逻辑  <code>0</code> （假）</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9maW5kLmh0bWw=\">find</span></p>\n<p>查找非零元素的索引和值</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pc2xvZ2ljYWwuaHRtbA==\">islogical</span></p>\n<p>确定输入是否为逻辑数组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9sb2dpY2FsLmh0bWw=\">logical</span></p>\n<p>将数值转换为逻辑值</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi90cnVlLmh0bWw=\">true</span></p>\n<p>逻辑值  <code>1</code> （真）</p>\n<h3 id=\"-38\"><a class=\"anchor\" href=\"#-38\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFOSU5QiU4NiVFNSU5MCU4OCVFOCVCRiU5MCVFNyVBRSU5Nw==\"></span>集合运算</h3>\n<p>并集、交集、集合关系</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9kb3VibGUuaW50ZXJzZWN0Lmh0bWw=\">intersect</span></p>\n<p>设置两个数组的交集</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9kb3VibGUuaXNtZW1iZXIuaHRtbA==\">ismember</span></p>\n<p>判断数组元素是否为集数组成员</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9kb3VibGUuc2V0ZGlmZi5odG1s\">setdiff</span></p>\n<p>设置两个数组的差集</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9kb3VibGUuc2V0eG9yLmh0bWw=\">setxor</span></p>\n<p>设置两个数组的异或</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9kb3VibGUudW5pb24uaHRtbA==\">union</span></p>\n<p>设置两个数组的并集</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9kb3VibGUudW5pcXVlLmh0bWw=\">unique</span></p>\n<p>数组中的唯一值</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pc21lbWJlcnRvbC5odG1s\">ismembertol</span></p>\n<p>容差范围内的集合成员</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi91bmlxdWV0b2wuaHRtbA==\">uniquetol</span></p>\n<p>容差内的唯一值</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi90YWJsZS5qb2luLmh0bWw=\">join</span></p>\n<p>使用键变量按行合并两个表或时间表</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pbm5lcmpvaW4uaHRtbA==\">innerjoin</span></p>\n<p>两个表或时间表之间的内联</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9vdXRlcmpvaW4uaHRtbA==\">outerjoin</span></p>\n<p>两个表或时间表之间的外联</p>\n<h3 id=\"-39\"><a class=\"anchor\" href=\"#-39\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNiU4QyU4OSVFNCVCRCU4RCVFOCVCRiU5MCVFNyVBRSU5Nw==\"></span>按位运算</h3>\n<p>设置、偏移或比较特定位域</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9iaXRhbmQuaHRtbA==\">bitand</span></p>\n<p>按位  <code>AND</code></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9iaXRvci5odG1s\">bitor</span></p>\n<p>按位  <code>OR</code></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9iaXR4b3IuaHRtbA==\">bitxor</span></p>\n<p>按位  <code>XOR</code></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9iaXRjbXAuaHRtbA==\">bitcmp</span></p>\n<p>按位补码</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9iaXRnZXQuaHRtbA==\">bitget</span></p>\n<p>获取指定位置的位</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9iaXRzZXQuaHRtbA==\">bitset</span></p>\n<p>设置指定位置的位</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9iaXRzaGlmdC5odG1s\">bitshift</span></p>\n<p>将位移动指定位数</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zd2FwYnl0ZXMuaHRtbA==\">swapbytes</span></p>\n<p>交换字节顺序</p>\n<h2 id=\"-40\"><a class=\"anchor\" href=\"#-40\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNiU5NSVCMCVFNiU4RCVBRSVFNSVBRiVCQyVFNSU4NSVBNSVFNSU5MiU4QyVFNSVBRiVCQyVFNSU4NyVCQQ==\"></span>数据导入和导出</h2>\n<h3 id=\"-41\"><a class=\"anchor\" href=\"#-41\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNiU5NiU4NyVFNiU5QyVBQyVFNiU5NiU4NyVFNCVCQiVCNi0tLSVFOCVBRiVCQiVFNSU4RiU5NiVFNSU5MiU4QyVFNSU4NiU5OSVFNSU4NSVBNSVFOCVBMSVBOCVFNiU4OCU5NiVFNiU5NyVCNiVFOSU5NyVCNCVFOCVBMSVBOA==\"></span>文本文件 - 读取和写入表或时间表</h3>\n<h4 id=\"-42\"><a class=\"anchor\" href=\"#-42\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNSU5RiVCQSVFNiU5QyVBQyVFNSVBRiVCQyVFNSU4NSVBNSVFNSU5MiU4QyVFNSVBRiVCQyVFNSU4NyVCQQ==\"></span>基本导入和导出</h4>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9yZWFkdGFibGUuaHRtbA==\">readtable</span></p>\n<p>基于文件创建表</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi93cml0ZXRhYmxlLmh0bWw=\">writetable</span></p>\n<p>将表写入文件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9yZWFkdGltZXRhYmxlLmh0bWw=\">readtimetable</span></p>\n<p>基于文件创建时间表</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi93cml0ZXRpbWV0YWJsZS5odG1s\">writetimetable</span></p>\n<p>将时间表写入文件</p>\n<h4 id=\"-43\"><a class=\"anchor\" href=\"#-43\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNSVBRSU5QSVFNCVCOSU4OSVFNSVBRiVCQyVFNSU4NSVBNSVFOCVBNyU4NCVFNSU4OCU5OQ==\"></span>定义导入规则</h4>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9kZXRlY3RpbXBvcnRvcHRpb25zLmh0bWw=\">detectImportOptions</span></p>\n<p>基于文件内容生成导入选项</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8udGV4dC5kZWxpbWl0ZWR0ZXh0aW1wb3J0b3B0aW9ucy5odG1s\">delimitedTextImportOptions</span></p>\n<p>为带分隔符的文本导入选项对象</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8udGV4dC5maXhlZHdpZHRoaW1wb3J0b3B0aW9ucy5odG1s\">fixedWidthImportOptions</span></p>\n<p>等宽文本文件的导入选项对象</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLnhtbGltcG9ydG9wdGlvbnMuaHRtbA==\">xmlImportOptions</span></p>\n<p>为 XML 文件导入选项对象</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uaHRtbC5odG1saW1wb3J0b3B0aW9ucy5odG1s\">htmlImportOptions</span></p>\n<p>Import options object for HTML files</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ud29yZC53b3JkZG9jdW1lbnRpbXBvcnRvcHRpb25zLmh0bWw=\">wordDocumentImportOptions</span></p>\n<p><code>Microsoft Word</code>  文档文件的导入选项对象</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8udGV4dC5kZWxpbWl0ZWR0ZXh0aW1wb3J0b3B0aW9ucy5nZXR2YXJvcHRzLmh0bWw=\">getvaropts</span></p>\n<p>获取变量导入选项</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8udGV4dC5kZWxpbWl0ZWR0ZXh0aW1wb3J0b3B0aW9ucy5zZXR2YXJvcHRzLmh0bWw=\">setvaropts</span></p>\n<p>设置变量导入选项</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8udGV4dC5kZWxpbWl0ZWR0ZXh0aW1wb3J0b3B0aW9ucy5zZXR2YXJ0eXBlLmh0bWw=\">setvartype</span></p>\n<p>设置变量数据类型</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8udGV4dC5kZWxpbWl0ZWR0ZXh0aW1wb3J0b3B0aW9ucy5wcmV2aWV3Lmh0bWw=\">preview</span></p>\n<p>使用导入选项预览文件中的八行数据</p>\n<h3 id=\"-44\"><a class=\"anchor\" href=\"#-44\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNiU5NiU4NyVFNiU5QyVBQyVFNiU5NiU4NyVFNCVCQiVCNi0tLSVFOCVBRiVCQiVFNSU4RiU5NiVFNSU5MiU4QyVFNSU4NiU5OSVFNSU4NSVBNSVFNyU5RiVBOSVFOSU5OCVCNSVFNSU5MiU4QyVFNiU5NSVCMCVFNyVCQiU4NA==\"></span>文本文件 - 读取和写入矩阵和数组</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9yZWFkbWF0cml4Lmh0bWw=\">readmatrix</span></p>\n<p>从文件中读取矩阵</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi93cml0ZW1hdHJpeC5odG1s\">writematrix</span></p>\n<p>将矩阵写入文件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9yZWFkY2VsbC5odG1s\">readcell</span></p>\n<p>从文件中读取元胞数组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi93cml0ZWNlbGwuaHRtbA==\">writecell</span></p>\n<p>将元胞数组写入文件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9yZWFkdmFycy5odG1s\">readvars</span></p>\n<p>从文件中读取变量</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi90ZXh0c2Nhbi5odG1s\">textscan</span></p>\n<p>从文本文件或字符串读取格式化数据</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi90eXBlLmh0bWw=\">type</span></p>\n<p>显示文件内容</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9maWxlcmVhZC5odG1s\">fileread</span></p>\n<p>以文本格式读取文件内容</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9yZWFkbGluZXMuaHRtbA==\">readlines</span></p>\n<p>以字符串数组形式读取文件行</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi93cml0ZWxpbmVzLmh0bWw=\">writelines</span></p>\n<p>Write text to file</p>\n<h3 id=\"-45\"><a class=\"anchor\" href=\"#-45\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNyU5NCVCNSVFNSVBRCU5MCVFOCVBMSVBOCVFNiVBMCVCQy0tLSVFOCVBRiVCQiVFNSU4RiU5NiVFNSU5MiU4QyVFNSU4NiU5OSVFNSU4NSVBNSVFOCVBMSVBOCVFNiU4OCU5NiVFNiU5NyVCNiVFOSU5NyVCNCVFOCVBMSVBOA==\"></span>电子表格 - 读取和写入表或时间表</h3>\n<p>基本导入和导出</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9yZWFkdGFibGUuaHRtbA==\">readtable</span></p>\n<p>基于文件创建表</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi93cml0ZXRhYmxlLmh0bWw=\">writetable</span></p>\n<p>将表写入文件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9yZWFkdGltZXRhYmxlLmh0bWw=\">readtimetable</span></p>\n<p>基于文件创建时间表</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi93cml0ZXRpbWV0YWJsZS5odG1s\">writetimetable</span></p>\n<p>将时间表写入文件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zaGVldG5hbWVzLmh0bWw=\">sheetnames</span></p>\n<p>从电子表格文件中获取工作表名称</p>\n<p>定义导入规则</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9kZXRlY3RpbXBvcnRvcHRpb25zLmh0bWw=\">detectImportOptions</span></p>\n<p>基于文件内容生成导入选项</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uc3ByZWFkc2hlZXQuc3ByZWFkc2hlZXRpbXBvcnRvcHRpb25zLmh0bWw=\">spreadsheetImportOptions</span></p>\n<p>电子表格的导入选项对象</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8udGV4dC5kZWxpbWl0ZWR0ZXh0aW1wb3J0b3B0aW9ucy5nZXR2YXJvcHRzLmh0bWw=\">getvaropts</span></p>\n<p>获取变量导入选项</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8udGV4dC5kZWxpbWl0ZWR0ZXh0aW1wb3J0b3B0aW9ucy5zZXR2YXJvcHRzLmh0bWw=\">setvaropts</span></p>\n<p>设置变量导入选项</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8udGV4dC5kZWxpbWl0ZWR0ZXh0aW1wb3J0b3B0aW9ucy5zZXR2YXJ0eXBlLmh0bWw=\">setvartype</span></p>\n<p>设置变量数据类型</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8udGV4dC5kZWxpbWl0ZWR0ZXh0aW1wb3J0b3B0aW9ucy5wcmV2aWV3Lmh0bWw=\">preview</span></p>\n<p>使用导入选项预览文件中的八行数据</p>\n<h3 id=\"-46\"><a class=\"anchor\" href=\"#-46\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNyU5NCVCNSVFNSVBRCU5MCVFOCVBMSVBOCVFNiVBMCVCQy0tLSVFOCVBRiVCQiVFNSU4RiU5NiVFNSU5MiU4QyVFNSU4NiU5OSVFNSU4NSVBNSVFNyU5RiVBOSVFOSU5OCVCNSVFNSU5MiU4QyVFNiU5NSVCMCVFNyVCQiU4NA==\"></span>电子表格 - 读取和写入矩阵和数组</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9yZWFkbWF0cml4Lmh0bWw=\">readmatrix</span></p>\n<p>从文件中读取矩阵</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi93cml0ZW1hdHJpeC5odG1s\">writematrix</span></p>\n<p>将矩阵写入文件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9yZWFkY2VsbC5odG1s\">readcell</span></p>\n<p>从文件中读取元胞数组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi93cml0ZWNlbGwuaHRtbA==\">writecell</span></p>\n<p>将元胞数组写入文件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9yZWFkdmFycy5odG1s\">readvars</span></p>\n<p>从文件中读取变量</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pbXBvcnRkYXRhLmh0bWw=\">importdata</span></p>\n<p>从文件加载数据</p>\n<h3 id=\"-47\"><a class=\"anchor\" href=\"#-47\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNSU5QiVCRSVFNSU4MyU4Rg==\"></span>图像</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pbWZpbmZvLmh0bWw=\">imfinfo</span></p>\n<p>有关图形文件的信息</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pbXJlYWQuaHRtbA==\">imread</span></p>\n<p>从图形文件读取图像</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pbXdyaXRlLmh0bWw=\">imwrite</span></p>\n<p>将图像写入图形文件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi90aWZmLmh0bWw=\">Tiff</span></p>\n<p>LibTIFF 库例程的 MATLAB 入口</p>\n<h3 id=\"-48\"><a class=\"anchor\" href=\"#-48\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFOCVBRiVCQiVFNSU4RiU5NiVFNiU4OCU5NiVFNSU4NiU5OSVFNSU4NSVBNS1uZXRjZGYtJUU2JTk2JTg3JUU0JUJCJUI2\"></span>读取或写入 NetCDF 文件</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uY2NyZWF0ZS5odG1s\">nccreate</span></p>\n<p>在 NetCDF 文件中创建变量</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uY2Rpc3AuaHRtbA==\">ncdisp</span></p>\n<p>在命令行窗口中显示 NetCDF 数据源内容</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uY2luZm8uaHRtbA==\">ncinfo</span></p>\n<p>返回有关 NetCDF 数据源的信息</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uY3JlYWQuaHRtbA==\">ncread</span></p>\n<p>读取 NetCDF 数据源中的变量数据</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uY3JlYWRhdHQuaHRtbA==\">ncreadatt</span></p>\n<p>读取 NetCDF 数据源中的属性值</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uY3dyaXRlLmh0bWw=\">ncwrite</span></p>\n<p>将数据写入 NetCDF 文件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uY3dyaXRlYXR0Lmh0bWw=\">ncwriteatt</span></p>\n<p>将属性写入 NetCDF 文件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uY3dyaXRlc2NoZW1hLmh0bWw=\">ncwriteschema</span></p>\n<p>将 NetCDF 架构定义添加到 NetCDF 文件中</p>\n<h3 id=\"-49\"><a class=\"anchor\" href=\"#-49\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sI25ldGNkZi0lRTUlQkElOTMlRTclQTglOEIlRTUlQkElOEYlRTUlOEMlODUtLS0lRTUlQkElOTMlRTUlODclQkQlRTYlOTUlQjA=\"></span>NetCDF 库程序包 - 库函数</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuZ2V0Y2h1bmtjYWNoZS5odG1s\">netcdf.getChunkCache</span></p>\n<p>检索 NetCDF 库的区块缓存设置</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuaW5xbGlidmVycy5odG1s\">netcdf.inqLibVers</span></p>\n<p>返回 NetCDF 库版本信息</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuc2V0Y2h1bmtjYWNoZS5odG1s\">netcdf.setChunkCache</span></p>\n<p>设置 NetCDF 库的默认分块缓存设置</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuc2V0ZGVmYXVsdGZvcm1hdC5odG1s\">netcdf.setDefaultFormat</span></p>\n<p>更改默认 netCDF 文件的格式</p>\n<h3 id=\"-50\"><a class=\"anchor\" href=\"#-50\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sI25ldGNkZi0lRTUlQkElOTMlRTclQTglOEIlRTUlQkElOEYlRTUlOEMlODUtLS0lRTYlOTYlODclRTQlQkIlQjYlRTYlOTMlOEQlRTQlQkQlOUM=\"></span>NetCDF 库程序包 - 文件操作</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuYWJvcnQuaHRtbA==\">netcdf.abort</span></p>\n<p>还原最近的 netCDF 文件定义</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuY2xvc2UuaHRtbA==\">netcdf.close</span></p>\n<p>关闭 netCDF 文件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuY3JlYXRlLmh0bWw=\">netcdf.create</span></p>\n<p>创建新的 NetCDF 数据集</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuZW5kZGVmLmh0bWw=\">netcdf.endDef</span></p>\n<p>结束 netCDF 文件定义模式</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuaW5xLmh0bWw=\">netcdf.inq</span></p>\n<p>返回有关 netCDF 文件的信息</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuaW5xZm9ybWF0Lmh0bWw=\">netcdf.inqFormat</span></p>\n<p>确定 NetCDF 文件的格式</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuaW5xZ3Jwcy5odG1s\">netcdf.inqGrps</span></p>\n<p>检索子组 ID 数组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuaW5xdW5saW1kaW1zLmh0bWw=\">netcdf.inqUnlimDims</span></p>\n<p>检索组中无限维度列表</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYub3Blbi5odG1s\">netcdf.open</span></p>\n<p>打开 NetCDF 数据源</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYucmVkZWYuaHRtbA==\">netcdf.reDef</span></p>\n<p>让打开的 netCDF 文件进入定义模式</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuc2V0ZmlsbC5odG1s\">netcdf.setFill</span></p>\n<p>设置 netCDF 填充模式</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuc3luYy5odG1s\">netcdf.sync</span></p>\n<p>将 netCDF 文件同步到磁盘</p>\n<h3 id=\"-51\"><a class=\"anchor\" href=\"#-51\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sI25ldGNkZi0lRTUlQkElOTMlRTclQTglOEIlRTUlQkElOEYlRTUlOEMlODUtLS0lRTclQkIlQjQlRTUlQkElQTY=\"></span>NetCDF 库程序包 - 维度</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuZGVmZGltLmh0bWw=\">netcdf.defDim</span></p>\n<p>创建 netCDF 维度</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuaW5xZGltLmh0bWw=\">netcdf.inqDim</span></p>\n<p>返回 netCDF 维度名称和长度</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuaW5xZGltaWQuaHRtbA==\">netcdf.inqDimID</span></p>\n<p>返回维度 ID</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYucmVuYW1lZGltLmh0bWw=\">netcdf.renameDim</span></p>\n<p>更改 netCDF 维度名</p>\n<h3 id=\"-52\"><a class=\"anchor\" href=\"#-52\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sI25ldGNkZi0lRTUlQkElOTMlRTclQTglOEIlRTUlQkElOEYlRTUlOEMlODUtLS0lRTclQkIlODQ=\"></span>NetCDF 库程序包 - 组</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuZGVmZ3JwLmh0bWw=\">netcdf.defGrp</span></p>\n<p>在 NetCDF 文件中创建组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuaW5xZGltaWRzLmh0bWw=\">netcdf.inqDimIDs</span></p>\n<p>检索组中维度标识符列表</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuaW5xZ3JwbmFtZS5odG1s\">netcdf.inqGrpName</span></p>\n<p>检索组名</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuaW5xZ3JwbmFtZWZ1bGwuaHRtbA==\">netcdf.inqGrpNameFull</span></p>\n<p>组的完整路径名</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuaW5xZ3JwcGFyZW50Lmh0bWw=\">netcdf.inqGrpParent</span></p>\n<p>检索父组的 ID。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuaW5xbmNpZC5odG1s\">netcdf.inqNcid</span></p>\n<p>返回已命名组的 ID</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuaW5xdmFyaWRzLmh0bWw=\">netcdf.inqVarIDs</span></p>\n<p>组中所有变量的 ID</p>\n<h3 id=\"-53\"><a class=\"anchor\" href=\"#-53\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sI25ldGNkZi0lRTUlQkElOTMlRTclQTglOEIlRTUlQkElOEYlRTUlOEMlODUtLS0lRTUlOEYlOTglRTklODclOEY=\"></span>NetCDF 库程序包 - 变量</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuZGVmdmFyZmlsbC5odG1s\">netcdf.defVarFill</span></p>\n<p>定义 NetCDF 变量的填充参数</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuZGVmdmFyLmh0bWw=\">netcdf.defVar</span></p>\n<p>创建 NetCDF 变量</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuZGVmdmFyY2h1bmtpbmcuaHRtbA==\">netcdf.defVarChunking</span></p>\n<p>定义 NetCDF 变量的分块行为</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuZGVmdmFyZGVmbGF0ZS5odG1s\">netcdf.defVarDeflate</span></p>\n<p>定义 NetCDF 变量的压缩参数</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuZGVmdmFyZmxldGNoZXIzMi5odG1s\">netcdf.defVarFletcher32</span></p>\n<p>定义 NetCDF 变量的校验参数</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuZ2V0dmFyLmh0bWw=\">netcdf.getVar</span></p>\n<p>读取 NetCDF 变量中的数据</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuaW5xdmFyLmh0bWw=\">netcdf.inqVar</span></p>\n<p>有关变量的信息</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuaW5xdmFyY2h1bmtpbmcuaHRtbA==\">netcdf.inqVarChunking</span></p>\n<p>确定 NetCDF 变量的分块设置</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuaW5xdmFyZGVmbGF0ZS5odG1s\">netcdf.inqVarDeflate</span></p>\n<p>确定 NetCDF 变量的压缩设置</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuaW5xdmFyZmlsbC5odG1s\">netcdf.inqVarFill</span></p>\n<p>确定 NetCDF 变量的填充参数值</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuaW5xdmFyZmxldGNoZXIzMi5odG1s\">netcdf.inqVarFletcher32</span></p>\n<p>关于 NetCDF 变量的 Fletcher32 校验和设置</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuaW5xdmFyaWQuaHRtbA==\">netcdf.inqVarID</span></p>\n<p>返回与变量名相关联的 ID</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYucHV0dmFyLmh0bWw=\">netcdf.putVar</span></p>\n<p>将数据写入 netCDF 变量</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYucmVuYW1ldmFyLmh0bWw=\">netcdf.renameVar</span></p>\n<p>更改 netCDF 变量名</p>\n<h3 id=\"-54\"><a class=\"anchor\" href=\"#-54\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sI25ldGNkZi0lRTUlQkElOTMlRTclQTglOEIlRTUlQkElOEYlRTUlOEMlODUtLS0lRTUlQjElOUUlRTYlODAlQTc=\"></span>NetCDF 库程序包 - 属性</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuY29weWF0dC5odG1s\">netcdf.copyAtt</span></p>\n<p>将属性复制到新位置</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuZGVsYXR0Lmh0bWw=\">netcdf.delAtt</span></p>\n<p>删除 netCDF 属性</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuZ2V0YXR0Lmh0bWw=\">netcdf.getAtt</span></p>\n<p>返回 NetCDF 属性</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuaW5xYXR0Lmh0bWw=\">netcdf.inqAtt</span></p>\n<p>返回有关 netCDF 属性的信息</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuaW5xYXR0aWQuaHRtbA==\">netcdf.inqAttID</span></p>\n<p>返回 netCDF 属性的 ID</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuaW5xYXR0bmFtZS5odG1s\">netcdf.inqAttName</span></p>\n<p>返回 netCDF 属性名称</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYucHV0YXR0Lmh0bWw=\">netcdf.putAtt</span></p>\n<p>写入 netCDF 属性</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYucmVuYW1lYXR0Lmh0bWw=\">netcdf.renameAtt</span></p>\n<p>更改属性名称</p>\n<h3 id=\"-55\"><a class=\"anchor\" href=\"#-55\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sI25ldGNkZi0lRTUlQkElOTMlRTclQTglOEIlRTUlQkElOEYlRTUlOEMlODUtLS0lRTclOTQlQTglRTYlODglQjclRTUlQUUlOUElRTQlQjklODklRTclOUElODQlRTclQjElQkIlRTUlOUUlOEI=\"></span>NetCDF 库程序包 - 用户定义的类型</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuZGVmdmxlbi5odG1s\">netcdf.defVlen</span></p>\n<p>Define user-defined variable length array type (NC_VLEN)</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuaW5xdXNlcnR5cGUuaHRtbA==\">netcdf.inqUserType</span></p>\n<p>Return information about user-defined type</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuaW5xdmxlbi5odG1s\">netcdf.inqVlen</span></p>\n<p>Return information about user-defined  <code>NC_VLEN</code>  type</p>\n<h3 id=\"-56\"><a class=\"anchor\" href=\"#-56\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sI25ldGNkZi0lRTUlQkElOTMlRTclQTglOEIlRTUlQkElOEYlRTUlOEMlODUtLS0lRTUlQUUlOUUlRTclOTQlQTglRTUlQjclQTUlRTUlODUlQjc=\"></span>NetCDF 库程序包 - 实用工具</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuZ2V0Y29uc3RhbnQuaHRtbA==\">netcdf.getConstant</span></p>\n<p>返回命名常量的数值</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9uZXRjZGYuZ2V0Y29uc3RhbnRuYW1lcy5odG1s\">netcdf.getConstantNames</span></p>\n<p>返回 netCDF 库已知的常量列表</p>\n<h3 id=\"-57\"><a class=\"anchor\" href=\"#-57\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFOCVBRiVCQiVFNSU4RiU5NiVFNiU4OCU5NiVFNSU4NiU5OSVFNSU4NSVBNS1oZGY1LSVFNiU5NiU4NyVFNCVCQiVCNg==\"></span>读取或写入 HDF5 文件</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9oNWNyZWF0ZS5odG1s\">h5create</span></p>\n<p>创建 HDF5 数据集</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9oNWRpc3AuaHRtbA==\">h5disp</span></p>\n<p>显示 HDF5 文件的内容</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9oNWluZm8uaHRtbA==\">h5info</span></p>\n<p>有关 HDF5 文件的信息</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9oNXJlYWQuaHRtbA==\">h5read</span></p>\n<p>从 HDF5 数据集读取数据</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9oNXJlYWRhdHQuaHRtbA==\">h5readatt</span></p>\n<p>从 HDF5 文件中读取属性</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9oNXdyaXRlLmh0bWw=\">h5write</span></p>\n<p>写入 HDF5 数据集</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9oNXdyaXRlYXR0Lmh0bWw=\">h5writeatt</span></p>\n<p>写入 HDF5 属性</p>\n<h3 id=\"-58\"><a class=\"anchor\" href=\"#-58\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sI2hkZjUtJUU1JUJBJTkzJUU3JUE4JThCJUU1JUJBJThGJUU1JThDJTg1\"></span>HDF5 库程序包</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9saWJyYXJ5aDUuaHRtbA==\">Library (H5)</span></p>\n<p>General-purpose functions for use with entire HDF5 library</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9hdHRyaWJ1dGVoNWEuaHRtbA==\">Attribute (H5A)</span></p>\n<p>Metadata associated with datasets or groups</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9kYXRhc2V0aDVkLmh0bWw=\">Dataset (H5D)</span></p>\n<p>Multidimensional arrays of data elements and supporting metadata</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9kaW1lbnNpb25zY2FsZWg1ZHMuaHRtbA==\">Dimension Scale (H5DS)</span></p>\n<p>Dimension scale associated with dataset dimensions</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9lcnJvcmg1ZS5odG1s\">Error (H5E)</span></p>\n<p>Error handling</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9maWxlaDVmLmh0bWw=\">File (H5F)</span></p>\n<p>HDF5 file access</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9ncm91cGg1Zy5odG1s\">Group (H5G)</span></p>\n<p>Organization of objects in file</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pZGVudGlmaWVyaDVpLmh0bWw=\">Identifier (H5I)</span></p>\n<p>HDF5 object identifiers</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9saW5raDVsLmh0bWw=\">Link (H5L)</span></p>\n<p>Links in HDF5 file</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWJoNW1sLmh0bWw=\">MATLAB (H5ML)</span></p>\n<p>不属于 HDF5 C 库的  <code>MATLAB</code>  工具函数</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9vYmplY3RoNW8uaHRtbA==\">Object (H5O)</span></p>\n<p>Objects in file</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9wcm9wZXJ0eWg1cC5odG1s\">Property (H5P)</span></p>\n<p>Object property lists</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9yZWZlcmVuY2VoNXIuaHRtbA==\">Reference (H5R)</span></p>\n<p>HDF5 references</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9kYXRhc3BhY2VoNXMuaHRtbA==\">Dataspace (H5S)</span></p>\n<p>Dimensionality of dataset</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9kYXRhdHlwZWg1dC5odG1s\">Datatype (H5T)</span></p>\n<p>Datatype of elements in a dataset</p>\n<h3 id=\"-59\"><a class=\"anchor\" href=\"#-59\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sI2hkZjQtJUU2JTk2JTg3JUU0JUJCJUI2LS0tJUU5JUFCJTk4JUU3JUJBJUE3JUU1JTg3JUJEJUU2JTk1JUIw\"></span>HDF4 文件 - 高级函数</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9oZGZpbmZvLmh0bWw=\">hdfinfo</span></p>\n<p>有关 HDF4 或 HDF-EOS 文件的信息</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9oZGZyZWFkLmh0bWw=\">hdfread</span></p>\n<p>从 HDF4 或 HDF-EOS 文件读取数据</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pbXJlYWQuaHRtbA==\">imread</span></p>\n<p>从图形文件读取图像</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9pbXdyaXRlLmh0bWw=\">imwrite</span></p>\n<p>将图像写入图形文件</p>\n<h3 id=\"-60\"><a class=\"anchor\" href=\"#-60\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNCVCRCU4RSVFNyVCQSVBNyVFNSU4NyVCRCVFNiU5NSVCMC0tLSVFNSU4QyU4NQ==\"></span>低级函数 - 包</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uaGRmNC5zZC5odG1s\">matlab.io.hdf4.sd</span></p>\n<p>直接与 HDF4 多文件科学数据集 (SD) 接口交互</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uaGRmZW9zLmdkLmh0bWw=\">matlab.io.hdfeos.gd</span></p>\n<p>低级别访问 HDF-EOS 网格数据</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uaGRmZW9zLnN3Lmh0bWw=\">matlab.io.hdfeos.sw</span></p>\n<p>对 HDF-EOS 分段文件的低级别访问</p>\n<h4 id=\"-61\"><a class=\"anchor\" href=\"#-61\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNCVCRCU4RSVFNyVCQSVBNyVFNSU4NyVCRCVFNiU5NSVCMC0tLSVFNSU4NyVCRCVFNiU5NSVCMA==\"></span>低级函数 - 函数</h4>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9oZGZhbi5odG1s\">hdfan</span></p>\n<p>HDF 多文件注释 (AN) 接口的入口</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9oZGZoeC5odG1s\">hdfhx</span></p>\n<p>HDF 外部数据 (HX) 接口的入口</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9oZGZoLmh0bWw=\">hdfh</span></p>\n<p>HDF H 接口的入口</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9oZGZoZC5odG1s\">hdfhd</span></p>\n<p>HDF HD 接口的入口</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9oZGZoZS5odG1s\">hdfhe</span></p>\n<p>HDF HE 接口的入口</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9oZGZtbC5odG1s\">hdfml</span></p>\n<p>与  <code>MATLAB</code>  HDF 入口函数配合使用的实用工具</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9oZGZwdC5odG1s\">hdfpt</span></p>\n<p>HDF-EOS 点对象的接口</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9oZGZ2Lmh0bWw=\">hdfv</span></p>\n<p>HDF Vgroup (V) 接口的入口</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9oZGZ2Zi5odG1s\">hdfvf</span></p>\n<p>HDF Vdata 接口中 VF 函数的入口</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9oZGZ2aC5odG1s\">hdfvh</span></p>\n<p>HDF Vdata 接口中 VH 函数的入口</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9oZGZ2cy5odG1s\">hdfvs</span></p>\n<p>HDF Vdata 接口中 VS 函数的入口</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9oZGZkZjI0Lmh0bWw=\">hdfdf24</span></p>\n<p>HDF 24 位光栅图像 (DF24) 接口的入口</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9oZGZkZnI4Lmh0bWw=\">hdfdfr8</span></p>\n<p>HDF 8 位光栅图像 (DFR8) 接口的入口</p>\n<h3 id=\"-62\"><a class=\"anchor\" href=\"#-62\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sI2ZpdHMtJUU2JTk2JTg3JUU0JUJCJUI2LS0tJUU1JTg3JUJEJUU2JTk1JUIw\"></span>FITS 文件 - 函数</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9maXRzZGlzcC5odG1s\">fitsdisp</span></p>\n<p>显示 FITS 元数据</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9maXRzaW5mby5odG1s\">fitsinfo</span></p>\n<p>有关 FITS 文件的信息</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9maXRzcmVhZC5odG1s\">fitsread</span></p>\n<p>读取 FITS 文件中的数据</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9maXRzd3JpdGUuaHRtbA==\">fitswrite</span></p>\n<p>将图像写入 FITS 文件</p>\n<h3 id=\"-63\"><a class=\"anchor\" href=\"#-63\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sI2ZpdHMtJUU2JTk2JTg3JUU0JUJCJUI2LS0tJUU2JTk2JTg3JUU0JUJCJUI2JUU4JUFFJUJGJUU5JTk3JUFF\"></span>FITS 文件 - 文件访问</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5jcmVhdGVmaWxlLmh0bWw=\">createFile</span></p>\n<p>创建 FITS 文件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5vcGVuZmlsZS5odG1s\">openFile</span></p>\n<p>打开 FITS 文件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5vcGVuZGlza2ZpbGUuaHRtbA==\">openDiskFile</span></p>\n<p>打开 FITS 文件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5jbG9zZWZpbGUuaHRtbA==\">closeFile</span></p>\n<p>关闭 FITS 文件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5kZWxldGVmaWxlLmh0bWw=\">deleteFile</span></p>\n<p>删除 FITS 文件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5maWxlbmFtZS5odG1s\">fileName</span></p>\n<p>FITS 文件的名称</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5maWxlbW9kZS5odG1s\">fileMode</span></p>\n<p>FITS 文件的 I/O 模式</p>\n<h3 id=\"-64\"><a class=\"anchor\" href=\"#-64\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sI2ZpdHMtJUU2JTk2JTg3JUU0JUJCJUI2LS0tJUU1JTlCJUJFJUU1JTgzJThGJUU1JUE0JTg0JUU3JTkwJTg2\"></span>FITS 文件 - 图像处理</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5jcmVhdGVpbWcuaHRtbA==\">createImg</span></p>\n<p>创建 FITS 图像</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5nZXRpbWdzaXplLmh0bWw=\">getImgSize</span></p>\n<p>图像大小</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5nZXRpbWd0eXBlLmh0bWw=\">getImgType</span></p>\n<p>图像的数据类型</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5pbnNlcnRpbWcuaHRtbA==\">insertImg</span></p>\n<p>在当前图像后面插入 FITS 图像</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5yZWFkaW1nLmh0bWw=\">readImg</span></p>\n<p>读取图像数据</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5zZXRic2NhbGUuaHRtbA==\">setBscale</span></p>\n<p>重置图像缩放</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy53cml0ZWltZy5odG1s\">writeImg</span></p>\n<p>写入 FITS 图像</p>\n<h3 id=\"-65\"><a class=\"anchor\" href=\"#-65\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sI2ZpdHMtJUU2JTk2JTg3JUU0JUJCJUI2LS0tJUU1JTg1JUIzJUU5JTk0JUFFJUU1JUFEJTk3\"></span>FITS 文件 - 关键字</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5yZWFkY2FyZC5odG1s\">readCard</span></p>\n<p>关键字的标头记录</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5yZWFka2V5Lmh0bWw=\">readKey</span></p>\n<p>关键字</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5yZWFka2V5Y21wbHguaHRtbA==\">readKeyCmplx</span></p>\n<p>复数标量值形式的关键字</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5yZWFka2V5ZGJsLmh0bWw=\">readKeyDbl</span></p>\n<p>双精度值形式的关键字</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5yZWFka2V5bG9uZ2xvbmcuaHRtbA==\">readKeyLongLong</span></p>\n<p><code>int64</code>  形式的关键字</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5yZWFka2V5bG9uZ3N0ci5odG1s\">readKeyLongStr</span></p>\n<p>长字符串值</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5yZWFka2V5dW5pdC5odG1s\">readKeyUnit</span></p>\n<p>关键字中的物理单位字符串</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5yZWFkcmVjb3JkLmh0bWw=\">readRecord</span></p>\n<p>编号指定的标头记录</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy53cml0ZWNvbW1lbnQuaHRtbA==\">writeComment</span></p>\n<p>向 CHU 写入或追加 COMMENT 关键字</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy53cml0ZWRhdGUuaHRtbA==\">writeDate</span></p>\n<p>向 CHU 写入 DATE 关键字</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy53cml0ZWtleS5odG1s\">writeKey</span></p>\n<p>将新关键字更新或添加到当前 HDU 中</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy53cml0ZWtleXVuaXQuaHRtbA==\">writeKeyUnit</span></p>\n<p>写入物理单位字符串</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy53cml0ZWhpc3RvcnkuaHRtbA==\">writeHistory</span></p>\n<p>向 CHU 写入或追加 HISTORY 关键字</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5kZWxldGVrZXkuaHRtbA==\">deleteKey</span></p>\n<p>按名称删除关键字</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5kZWxldGVyZWNvcmQuaHRtbA==\">deleteRecord</span></p>\n<p>按记录号删除关键字</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5nZXRoZHJzcGFjZS5odG1s\">getHdrSpace</span></p>\n<p>标头中的关键字数量</p>\n<h3 id=\"-66\"><a class=\"anchor\" href=\"#-66\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sI2ZpdHMtJUU2JTk2JTg3JUU0JUJCJUI2LS0tJUU2JUEwJTg3JUU1JUE0JUI0JUU2JTk1JUIwJUU2JThEJUFFJUU1JThEJTk1JUU1JTg1JTgzLWhkdS0lRTglQUUlQkYlRTklOTclQUU=\"></span>FITS 文件 - 标头数据单元 (HDU) 访问</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5jb3B5aGR1Lmh0bWw=\">copyHDU</span></p>\n<p>将当前 HDU 从一个文件复制到另一个文件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5nZXRoZHVudW0uaHRtbA==\">getHDUnum</span></p>\n<p>FITS 文件中当前 HDU 的编号</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5nZXRoZHV0eXBlLmh0bWw=\">getHDUtype</span></p>\n<p>当前 HDU 的类型</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5nZXRudW1oZHVzLmh0bWw=\">getNumHDUs</span></p>\n<p>FITS 文件中的 HDU 总数</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5tb3ZhYnNoZHUuaHRtbA==\">movAbsHDU</span></p>\n<p>移至绝对 HDU 编号</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5tb3ZuYW1oZHUuaHRtbA==\">movNamHDU</span></p>\n<p>移至第一个包含特定类型和关键字值的 HDU</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5tb3ZyZWxoZHUuaHRtbA==\">movRelHDU</span></p>\n<p>从当前 HDU 移动相对数量的 HDU</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy53cml0ZWNoZWNrc3VtLmh0bWw=\">writeChecksum</span></p>\n<p>计算并写入当前 HDU 的校验和</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5kZWxldGVoZHUuaHRtbA==\">deleteHDU</span></p>\n<p>删除 FITS 文件中当前的 HDU</p>\n<h3 id=\"-67\"><a class=\"anchor\" href=\"#-67\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sI2ZpdHMtJUU2JTk2JTg3JUU0JUJCJUI2LS0tJUU1JTlCJUJFJUU1JTgzJThGJUU1JThFJThCJUU3JUJDJUE5\"></span>FITS 文件 - 图像压缩</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5pbWdjb21wcmVzcy5odG1s\">imgCompress</span></p>\n<p>将 HDU 从一个文件压缩到另一个文件中</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5pc2NvbXByZXNzZWRpbWcuaHRtbA==\">isCompressedImg</span></p>\n<p>确定当前图像是否已压缩</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5zZXRjb21wcmVzc2lvbnR5cGUuaHRtbA==\">setCompressionType</span></p>\n<p>设置图像压缩类型</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5zZXRoY29tcHNjYWxlLmh0bWw=\">setHCompScale</span></p>\n<p>设置 HCOMPRESS 算法的缩放参数</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5zZXRoY29tcHNtb290aC5odG1s\">setHCompSmooth</span></p>\n<p>为使用 HCOMPRESS 压缩的图像设置平滑化</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5zZXR0aWxlZGltLmh0bWw=\">setTileDim</span></p>\n<p>设置图块维度</p>\n<h3 id=\"-68\"><a class=\"anchor\" href=\"#-68\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sI2ZpdHMtJUU2JTk2JTg3JUU0JUJCJUI2LS0tYXNjaWktJUU4JUExJUE4JUU1JTkyJThDJUU0JUJBJThDJUU4JUJGJTlCJUU1JTg4JUI2JUU4JUExJUE4\"></span>FITS 文件 - ASCII 表和二进制表</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5jcmVhdGV0YmwuaHRtbA==\">createTbl</span></p>\n<p>创建新的 ASCII 或二进制表扩展</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5pbnNlcnRjb2wuaHRtbA==\">insertCol</span></p>\n<p>向表插入列</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5pbnNlcnRyb3dzLmh0bWw=\">insertRows</span></p>\n<p>向表插入行</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5pbnNlcnRhdGJsLmh0bWw=\">insertATbl</span></p>\n<p>在当前 HDU 后面插入 ASCII 表</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5pbnNlcnRidGJsLmh0bWw=\">insertBTbl</span></p>\n<p>在当前 HDU 后面插入二进制表</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5kZWxldGVjb2wuaHRtbA==\">deleteCol</span></p>\n<p>从表中删除列</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5kZWxldGVyb3dzLmh0bWw=\">deleteRows</span></p>\n<p>从表中删除行</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5nZXRhY29scGFybXMuaHRtbA==\">getAColParms</span></p>\n<p>ASCII 表信息</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5nZXRiY29scGFybXMuaHRtbA==\">getBColParms</span></p>\n<p>二进制表信息</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5nZXRjb2xuYW1lLmh0bWw=\">getColName</span></p>\n<p>表列名称</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5nZXRjb2x0eXBlLmh0bWw=\">getColType</span></p>\n<p>经缩放的列的数据类型、重复值、宽度</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5nZXRlcWNvbHR5cGUuaHRtbA==\">getEqColType</span></p>\n<p>列的数据类型、重复值、宽度</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5nZXRudW1jb2xzLmh0bWw=\">getNumCols</span></p>\n<p>表中的列数</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5nZXRudW1yb3dzLmh0bWw=\">getNumRows</span></p>\n<p>表中的行数</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5yZWFkYXRibGhkci5odG1s\">readATblHdr</span></p>\n<p>从当前 ASCII 表中读取标头信息</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5yZWFkYnRibGhkci5odG1s\">readBTblHdr</span></p>\n<p>从当前二进制表中读取标头信息</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5yZWFkY29sLmh0bWw=\">readCol</span></p>\n<p>读取 ASCII 或二进制表列的行</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5zZXR0c2NhbGUuaHRtbA==\">setTscale</span></p>\n<p>重置图像缩放</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy53cml0ZWNvbC5odG1s\">writeCol</span></p>\n<p>向 ASCII 或二进制表列写入元素</p>\n<h3 id=\"-69\"><a class=\"anchor\" href=\"#-69\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sI2ZpdHMtJUU2JTk2JTg3JUU0JUJCJUI2LS0tJUU1JUFFJTlFJUU3JTk0JUE4JUU1JUI3JUE1JUU1JTg1JUI3\"></span>FITS 文件 - 实用工具</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5nZXRjb25zdGFudHZhbHVlLmh0bWw=\">getConstantValue</span></p>\n<p>指定常量的数值</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5nZXR2ZXJzaW9uLmh0bWw=\">getVersion</span></p>\n<p>CFITSIO 库的修订号</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8uZml0cy5nZXRvcGVuZmlsZXMuaHRtbA==\">getOpenFiles</span></p>\n<p>已打开的 FITS 文件列表</p>\n<h3 id=\"-70\"><a class=\"anchor\" href=\"#-70\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNiU5RCVBMSVFNSVCOCVBNiVFNCVCQSVBNCVFOSU5NCU5OSVFNiU5NiU4NyVFNCVCQiVCNg==\"></span>条带交错文件</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tdWx0aWJhbmRyZWFkLmh0bWw=\">multibandread</span></p>\n<p>从二进制文件读取条带交错文件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tdWx0aWJhbmR3cml0ZS5odG1s\">multibandwrite</span></p>\n<p>将条带交错数据写入文件</p>\n<h3 id=\"-71\"><a class=\"anchor\" href=\"#-71\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNSVCOCVCOCVFNyU5NCVBOCVFNiU5NSVCMCVFNiU4RCVBRSVFNiVBMCVCQyVFNSVCQyU4Ri1jZGY=\"></span>常用数据格式 (CDF)</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9jZGZpbmZvLmh0bWw=\">cdfinfo</span></p>\n<p>有关常用数据格式 (CDF) 文件的信息</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9jZGZyZWFkLmh0bWw=\">cdfread</span></p>\n<p>读取常用数据格式 (CDF) 文件中的数据</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9jZGZlcG9jaC5odG1s\">cdfepoch</span></p>\n<p>将日期文本或日期序列值转换为 CDF 格式的日期</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi90b2RhdGVudW0uaHRtbA==\">todatenum</span></p>\n<p>将 CDF 历元对象转换为  <code>MATLAB</code>  日期序列值</p>\n<h4 id=\"-72\"><a class=\"anchor\" href=\"#-72\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNSU4QyU4NQ==\"></span>包</h4>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9jZGZsaWIuaHRtbA==\">cdflib</span></p>\n<p>与 CDF 库直接交互</p>\n<h3 id=\"-73\"><a class=\"anchor\" href=\"#-73\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFOCVBRiVCQiVFNSU4RiU5NiVFOCVBNyU4NiVFOSVBMiU5MSVFNiU5NSVCMCVFNiU4RCVBRQ==\"></span>读取视频数据</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi92aWRlb3JlYWRlci5odG1s\">VideoReader</span></p>\n<p>创建对象以读取视频文件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi92aWRlb3JlYWRlci5yZWFkLmh0bWw=\">read</span></p>\n<p>读取一个或多个视频帧</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi92aWRlb3JlYWRlci5yZWFkZnJhbWUuaHRtbA==\">readFrame</span></p>\n<p>读取下一个视频帧</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi92aWRlb3JlYWRlci5oYXNmcmFtZS5odG1s\">hasFrame</span></p>\n<p>确定是否有视频帧可供读取</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi92aWRlb3JlYWRlci5nZXRmaWxlZm9ybWF0cy5odG1s\">getFileFormats</span></p>\n<p><code>VideoReader</code>  支持的文件格式</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tbWZpbGVpbmZvLmh0bWw=\">mmfileinfo</span></p>\n<p>有关多媒体文件的信息</p>\n<h3 id=\"-74\"><a class=\"anchor\" href=\"#-74\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNSU4NiU5OSVFNSU4NSVBNSVFOCVBNyU4NiVFOSVBMiU5MSVFNiU5NSVCMCVFNiU4RCVBRQ==\"></span>写入视频数据</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi92aWRlb3dyaXRlci5odG1s\">VideoWriter</span></p>\n<p>创建对象以写入视频文件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi92aWRlb3dyaXRlci5vcGVuLmh0bWw=\">open</span></p>\n<p>打开文件以写入视频数据</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi92aWRlb3dyaXRlci53cml0ZXZpZGVvLmh0bWw=\">writeVideo</span></p>\n<p>将视频数据写入到文件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi92aWRlb3dyaXRlci5jbG9zZS5odG1s\">close</span></p>\n<p>写入视频数据之后关闭文件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi92aWRlb3dyaXRlci5nZXRwcm9maWxlcy5odG1s\">getProfiles</span></p>\n<p><code>VideoWriter</code>  支持的描述文件和文件格式</p>\n<h3 id=\"-75\"><a class=\"anchor\" href=\"#-75\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFOCVBRiVCQiVFNSU4RiU5NiVFNiU4OCU5NiVFNSU4NiU5OSVFNSU4NSVBNSVFOSU5RiVCMyVFOSVBMiU5MQ==\"></span>读取或写入音频</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9hdWRpb3JlYWQuaHRtbA==\">audioread</span></p>\n<p>读取音频文件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9hdWRpb3dyaXRlLmh0bWw=\">audiowrite</span></p>\n<p>写音频文件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9saW4ybXUuaHRtbA==\">lin2mu</span></p>\n<p>将线性音频信号转换为 mu-law</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tdTJsaW4uaHRtbA==\">mu2lin</span></p>\n<p>将 mu-law 音频信号转换为线性格式</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9hdWRpb2luZm8uaHRtbA==\">audioinfo</span></p>\n<p>有关音频文件的信息</p>\n<h3 id=\"-76\"><a class=\"anchor\" href=\"#-76\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNiU5MiVBRCVFNiU5NCVCRSVFOSU5RiVCMyVFOSVBMiU5MQ==\"></span>播放音频</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9hdWRpb3BsYXllci5odG1s\">audioplayer</span></p>\n<p>用于播放音频的对象</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9hdWRpb3BsYXllci5pc3BsYXlpbmcuaHRtbA==\">isplaying</span></p>\n<p>确定播放是否正在进行</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9hdWRpb3BsYXllci5wYXVzZS5odG1s\">pause</span></p>\n<p>暂停播放或录制</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9hdWRpb3BsYXllci5wbGF5Lmh0bWw=\">play</span></p>\n<p>从  <code>audioplayer</code>  对象播放音频</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9hdWRpb3BsYXllci5wbGF5YmxvY2tpbmcuaHRtbA==\">playblocking</span></p>\n<p>播放  <code>audioplayer</code>  对象中的音频，保持控制权直到播放完成</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9hdWRpb3BsYXllci5yZXN1bWUuaHRtbA==\">resume</span></p>\n<p>从暂停状态继续播放或录制</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9hdWRpb3BsYXllci5zdG9wLmh0bWw=\">stop</span></p>\n<p>停止播放或录制</p>\n<h3 id=\"-77\"><a class=\"anchor\" href=\"#-77\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNSVCRCU5NSVFNSU4OCVCNiVFOSU5RiVCMyVFOSVBMiU5MQ==\"></span>录制音频</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9hdWRpb3JlY29yZGVyLmh0bWw=\">audiorecorder</span></p>\n<p>用于录制音频的对象</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9hdWRpb3JlY29yZGVyLmdldGF1ZGlvZGF0YS5odG1s\">getaudiodata</span></p>\n<p>将录制的音频信号存储在数值数组中</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9hdWRpb3JlY29yZGVyLmdldHBsYXllci5odG1s\">getplayer</span></p>\n<p>创建关联的  <code>audioplayer</code>  对象</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9hdWRpb3JlY29yZGVyLmlzcmVjb3JkaW5nLmh0bWw=\">isrecording</span></p>\n<p>确定录制是否正在进行</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9hdWRpb3JlY29yZGVyLnJlY29yZC5odG1s\">record</span></p>\n<p>将音频录制到  <code>audiorecorder</code>  对象中</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9hdWRpb3JlY29yZGVyLnJlY29yZGJsb2NraW5nLmh0bWw=\">recordblocking</span></p>\n<p>将音频录制到  <code>audiorecorder</code>  对象中，在录制完成前保持控制权</p>\n<h3 id=\"-78\"><a class=\"anchor\" href=\"#-78\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNiU5MiVBRCVFNiU5NCVCRSVFNSVBMyVCMCVFOSU5RiVCMw==\"></span>播放声音</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9hdWRpb2RldmluZm8uaHRtbA==\">audiodevinfo</span></p>\n<p>有关音频设备的信息</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9hdWRpb2RldnJlc2V0Lmh0bWw=\">audiodevreset</span></p>\n<p>刷新可用音频设备列表</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zb3VuZC5odG1s\">sound</span></p>\n<p>将信号数据矩阵转换为声音</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zb3VuZHNjLmh0bWw=\">soundsc</span></p>\n<p>缩放数据和作为声音播放</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9iZWVwLmh0bWw=\">beep</span></p>\n<p>产生操作系统蜂鸣声</p>\n<h3 id=\"-79\"><a class=\"anchor\" href=\"#-79\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sI3htbC0lRTYlOTYlODclRTYlQTElQTMlRTclOUElODQlRTglQUYlQkIlRTUlOEYlOTYlRTUlOTIlOEMlRTUlODYlOTklRTUlODUlQTU=\"></span>XML 文档的读取和写入</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLmRvbS5kb213cml0ZXItY2xhc3MuaHRtbA==\">matlab.io.xml.dom.DOMWriter</span></p>\n<p>串行化 XML 文档的写入器</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLmRvbS5lbnRpdHlyZXNvbHZlci1jbGFzcy5odG1s\">matlab.io.xml.dom.EntityResolver</span></p>\n<p>实体解析器的抽象基类</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLmRvbS5maWxld3JpdGVyLWNsYXNzLmh0bWw=\">matlab.io.xml.dom.FileWriter</span></p>\n<p>创建文本文件的写入器</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLmRvbS5sb2NhdG9yLWNsYXNzLmh0bWw=\">matlab.io.xml.dom.Locator</span></p>\n<p>元素在 XML 文件中的位置</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLmRvbS5wYXJzZXItY2xhc3MuaHRtbA==\">matlab.io.xml.dom.Parser</span></p>\n<p>XML 标记解析器</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLmRvbS5wYXJzZXJjb25maWd1cmF0aW9uLWNsYXNzLmh0bWw=\">matlab.io.xml.dom.ParserConfiguration</span></p>\n<p>XML 解析器选项</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLmRvbS5wYXJzZWVycm9yLWNsYXNzLmh0bWw=\">matlab.io.xml.dom.ParseError</span></p>\n<p>指定 XML 标记解析错误</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLmRvbS5wYXJzZWVycm9yaGFuZGxlci1jbGFzcy5odG1s\">matlab.io.xml.dom.ParseErrorHandler</span></p>\n<p>Abstract base class for parse error handlers</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLmRvbS5wYXJzZWVycm9ybG9jYXRvci1jbGFzcy5odG1s\">matlab.io.xml.dom.ParseErrorLocator</span></p>\n<p>Specifies location of parse error</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLmRvbS5wYXJzZWVycm9yc2V2ZXJpdHktY2xhc3MuaHRtbA==\">matlab.io.xml.dom.ParseErrorSeverity</span></p>\n<p>表示 XML 标记解析错误严重性的枚举类</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLmRvbS5yZXNvdXJjZWlkZW50aWZpZXItY2xhc3MuaHRtbA==\">matlab.io.xml.dom.ResourceIdentifier</span></p>\n<p>XML 资源标识符</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLmRvbS5yZXNvdXJjZWlkZW50aWZpZXJ0eXBlLWNsYXNzLmh0bWw=\">matlab.io.xml.dom.ResourceIdentifierType</span></p>\n<p>XML 资源标识符类型</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLmRvbS53cml0ZXJjb25maWd1cmF0aW9uLWNsYXNzLmh0bWw=\">matlab.io.xml.dom.WriterConfiguration</span></p>\n<p>XML DOM 写入器选项</p>\n<h3 id=\"-80\"><a class=\"anchor\" href=\"#-80\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sI3czYy1kb20=\"></span>W3C DOM</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLmRvbS5hdHRyLWNsYXNzLmh0bWw=\">matlab.io.xml.dom.Attr</span></p>\n<p>XML 元素的属性</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLmRvbS5jZGF0YXNlY3Rpb24tY2xhc3MuaHRtbA==\">matlab.io.xml.dom.CDATASection</span></p>\n<p>CDATA 节</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLmRvbS5jb21tZW50LWNsYXNzLmh0bWw=\">matlab.io.xml.dom.Comment</span></p>\n<p>XML 文档中的注释</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLmRvbS5kb2N1bWVudC1jbGFzcy5odG1s\">matlab.io.xml.dom.Document</span></p>\n<p>XML 文档</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLmRvbS5kb2N1bWVudGZyYWdtZW50LWNsYXNzLmh0bWw=\">matlab.io.xml.dom.DocumentFragment</span></p>\n<p>文档节点组</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLmRvbS5kb2N1bWVudHR5cGUtY2xhc3MuaHRtbA==\">matlab.io.xml.dom.DocumentType</span></p>\n<p>文档类型</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLmRvbS5lbGVtZW50LWNsYXNzLmh0bWw=\">matlab.io.xml.dom.Element</span></p>\n<p>XML 文档的元素</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLmRvbS5lbnRpdHktY2xhc3MuaHRtbA==\">matlab.io.xml.dom.Entity</span></p>\n<p>由文档类型定义的实体</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLmRvbS5uYW1lZG5vZGVtYXAtY2xhc3MuaHRtbA==\">matlab.io.xml.dom.NamedNodeMap</span></p>\n<p>一组具有名称的文档节点</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLmRvbS5ub2RlbGlzdC1jbGFzcy5odG1s\">matlab.io.xml.dom.NodeList</span></p>\n<p>文档节点列表</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLmRvbS5ub3RhdGlvbi1jbGFzcy5odG1s\">matlab.io.xml.dom.Notation</span></p>\n<p>文档类型定义中的表示法</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLmRvbS5wcm9jZXNzaW5naW5zdHJ1Y3Rpb24tY2xhc3MuaHRtbA==\">matlab.io.xml.dom.ProcessingInstruction</span></p>\n<p>XML 处理指令</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLmRvbS50ZXh0LWNsYXNzLmh0bWw=\">matlab.io.xml.dom.Text</span></p>\n<p>XML 文档中的文本</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLmRvbS50eXBlaW5mby1jbGFzcy5odG1s\">matlab.io.xml.dom.TypeInfo</span></p>\n<p>架构类型信息</p>\n<h3 id=\"-81\"><a class=\"anchor\" href=\"#-81\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sI3htbC0lRTUlOEYlOTglRTYlOEQlQTI=\"></span>XML 变换</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLnRyYW5zZm9ybS5jb21waWxlZHN0eWxlc2hlZXQtY2xhc3MuaHRtbA==\">matlab.io.xml.transform.CompiledStylesheet</span></p>\n<p>编译的样式表</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLnRyYW5zZm9ybS5yZXN1bHRkb2N1bWVudC1jbGFzcy5odG1s\">matlab.io.xml.transform.ResultDocument</span></p>\n<p>将转换结果存储为文档</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLnRyYW5zZm9ybS5yZXN1bHRzdHJpbmctY2xhc3MuaHRtbA==\">matlab.io.xml.transform.ResultString</span></p>\n<p>将转换结果存储为字符串</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLnRyYW5zZm9ybS5yZXN1bHRmaWxlLWNsYXNzLmh0bWw=\">matlab.io.xml.transform.ResultFile</span></p>\n<p>将转换结果存储为文件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLnRyYW5zZm9ybS5zb3VyY2Vkb2N1bWVudC1jbGFzcy5odG1s\">matlab.io.xml.transform.SourceDocument</span></p>\n<p>用于转换的 XML 源文档</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLnRyYW5zZm9ybS5zb3VyY2VmaWxlLWNsYXNzLmh0bWw=\">matlab.io.xml.transform.SourceFile</span></p>\n<p>用于转换的 XML 源文件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLnRyYW5zZm9ybS5zb3VyY2VzdHJpbmctY2xhc3MuaHRtbA==\">matlab.io.xml.transform.SourceString</span></p>\n<p>用于转换的 XML 源字符串</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLnRyYW5zZm9ybS5zdHlsZXNoZWV0c291cmNlZG9jdW1lbnQtY2xhc3MuaHRtbA==\">matlab.io.xml.transform.StylesheetSourceDocument</span></p>\n<p>用于转换的样式表源文档</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLnRyYW5zZm9ybS5zdHlsZXNoZWV0c291cmNlZmlsZS1jbGFzcy5odG1s\">matlab.io.xml.transform.StylesheetSourceFile</span></p>\n<p>用于转换的样式表源文件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLnRyYW5zZm9ybS5zdHlsZXNoZWV0c291cmNlc3RyaW5nLWNsYXNzLmh0bWw=\">matlab.io.xml.transform.StylesheetSourceString</span></p>\n<p>用于转换的 XSL 源字符串</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLnRyYW5zZm9ybS50cmFjZXItY2xhc3MuaHRtbA==\">matlab.io.xml.transform.Tracer</span></p>\n<p>Trace execution of stylesheet</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLnRyYW5zZm9ybS50cmFuc2Zvcm1lci1jbGFzcy5odG1s\">matlab.io.xml.transform.Transformer</span></p>\n<p>XML 文档转换器</p>\n<h3 id=\"-82\"><a class=\"anchor\" href=\"#-82\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sI3hwYXRoLSVFNiU5RiVBNSVFOCVBRiVBMg==\"></span>XPath 查询</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLnhwYXRoLmNvbXBpbGVkZXhwcmVzc2lvbi1jbGFzcy5odG1s\">matlab.io.xml.xpath.CompiledExpression</span></p>\n<p>编译的 XPath 表达式</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLnhwYXRoLmV2YWxyZXN1bHR0eXBlLWNsYXNzLmh0bWw=\">matlab.io.xml.xpath.EvalResultType</span></p>\n<p>XPath 表达式计算的结果类型</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLnhwYXRoLmV2YWx1YXRvci1jbGFzcy5odG1s\">matlab.io.xml.xpath.Evaluator</span></p>\n<p>XPath 表达式计算器</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ueG1sLnhwYXRoLnByZWZpeHJlc29sdmVyLWNsYXNzLmh0bWw=\">matlab.io.xml.xpath.PrefixResolver</span></p>\n<p>用于命名空间前缀解析器的抽象基类</p>\n<h3 id=\"-83\"><a class=\"anchor\" href=\"#-83\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sI2pzb24tJUU2JUEwJUJDJUU1JUJDJThG\"></span>JSON 格式</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9qc29uZGVjb2RlLmh0bWw=\">jsondecode</span></p>\n<p>解码 JSON 格式的文本</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9qc29uZW5jb2RlLmh0bWw=\">jsonencode</span></p>\n<p>基于结构化  <code>MATLAB</code>  数据创建 JSON 格式的文本</p>\n<h3 id=\"-84\"><a class=\"anchor\" href=\"#-84\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNSVCNyVBNSVFNCVCRCU5QyVFNSU4QyVCQSVFNSU4RiU5OCVFOSU4NyU4RiVFNSU5MiU4Qy1tYXQtJUU2JTk2JTg3JUU0JUJCJUI2\"></span>工作区变量和 MAT 文件</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9sb2FkLmh0bWw=\">load</span></p>\n<p>将文件变量加载到工作区中</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zYXZlLmh0bWw=\">save</span></p>\n<p>将工作区变量保存到文件中</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWIuaW8ubWF0ZmlsZS5odG1s\">matfile</span></p>\n<p>访问和更改 MAT 文件中的变量，而不必将文件加载到内存中</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9kaXNwLmh0bWw=\">disp</span></p>\n<p>显示变量的值</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9mb3JtYXR0ZWRkaXNwbGF5dGV4dC5odG1s\">formattedDisplayText</span></p>\n<p>以字符串形式捕获显示输出</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi93aG8uaHRtbA==\">who</span></p>\n<p>列出工作区中的变量</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi93aG9zLmh0bWw=\">whos</span></p>\n<p>列出工作区中的变量及大小和类型</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9jbGVhci5odG1s\">clear</span></p>\n<p>从工作区中删除项目、释放系统内存</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9jbGVhcnZhcnMuaHRtbA==\">clearvars</span></p>\n<p>清除内存中的变量</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9vcGVudmFyLmh0bWw=\">openvar</span></p>\n<p>在变量编辑器或其他图形编辑工具中打开工作区变量</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi93b3Jrc3BhY2UuaHRtbA==\">工作区浏览器</span></p>\n<p>打开工作区浏览器以管理工作区</p>\n<h3 id=\"-85\"><a class=\"anchor\" href=\"#-85\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNCVCRCU4RSVFNyVCQSVBNyVFNiU5NiU4NyVFNCVCQiVCNi1pbw==\"></span>低级文件 I/O</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9mY2xvc2UuaHRtbA==\">fclose</span></p>\n<p>关闭一个或所有打开的文件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9mZW9mLmh0bWw=\">feof</span></p>\n<p>检测文件末尾</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9mZXJyb3IuaHRtbA==\">ferror</span></p>\n<p>文件 I/O 错误信息</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9mZ2V0bC5odG1s\">fgetl</span></p>\n<p>读取文件中的行，并删除换行符</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9mZ2V0cy5odG1s\">fgets</span></p>\n<p>读取文件中的行，并保留换行符</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9maWxlcmVhZC5odG1s\">fileread</span></p>\n<p>以文本格式读取文件内容</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9mb3Blbi5odG1s\">fopen</span></p>\n<p>打开文件或获得有关打开文件的信息</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9mcHJpbnRmLmh0bWw=\">fprintf</span></p>\n<p>将数据写入文本文件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9mcmVhZC5odG1s\">fread</span></p>\n<p>读取二进制文件中的数据</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9mcmV3aW5kLmh0bWw=\">frewind</span></p>\n<p>将文件位置指示符移至所打开文件的开头</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9mc2NhbmYuaHRtbA==\">fscanf</span></p>\n<p>读取文本文件中的数据</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9mc2Vlay5odG1s\">fseek</span></p>\n<p>移至文件中的指定位置</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9mdGVsbC5odG1s\">ftell</span></p>\n<p>当前位置</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9md3JpdGUuaHRtbA==\">fwrite</span></p>\n<p>将数据写入二进制文件</p>\n<h3 id=\"-86\"><a class=\"anchor\" href=\"#-86\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNCVCOCVCMiVFOCVBMSU4QyVFNSU5MiU4Qy11c2ItJUU5JTgwJTlBJUU0JUJGJUExLS0tJUU4JUJGJTlFJUU2JThFJUE1JUU1JTkyJThDJUU5JTg1JThEJUU3JUJEJUFF\"></span>串行和 USB 通信 - 连接和配置</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zZXJpYWxwb3J0bGlzdC5odG1s\">serialportlist</span></p>\n<p>连接到您的系统的串行端口列表</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zZXJpYWxwb3J0Lmh0bWw=\">serialport</span></p>\n<p>连接到串行端口</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zZXJpYWxwb3J0LmNvbmZpZ3VyZXRlcm1pbmF0b3IuaHRtbA==\">configureTerminator</span></p>\n<p>为与串行端口的 ASCII 字符串通信设置终止符</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zZXJpYWxwb3J0LmNvbmZpZ3VyZWNhbGxiYWNrLmh0bWw=\">configureCallback</span></p>\n<p>为与串行端口设备的通信设置回调函数和触发条件</p>\n<h3 id=\"-87\"><a class=\"anchor\" href=\"#-87\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNCVCOCVCMiVFOCVBMSU4QyVFNSU5MiU4Qy11c2ItJUU5JTgwJTlBJUU0JUJGJUExLS0tJUU4JUFGJUJCJUU1JThGJTk2JUU1JTkyJThDJUU1JTg2JTk5JUU1JTg1JUE1\"></span>串行和 USB 通信 - 读取和写入</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zZXJpYWxwb3J0LnJlYWQuaHRtbA==\">read</span></p>\n<p>从串行端口读取数据</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zZXJpYWxwb3J0LnJlYWRsaW5lLmh0bWw=\">readline</span></p>\n<p>从串行端口读取 ASCII 字符串数据行</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zZXJpYWxwb3J0LndyaXRlLmh0bWw=\">write</span></p>\n<p>将数据写入串行端口</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zZXJpYWxwb3J0LndyaXRlbGluZS5odG1s\">writeline</span></p>\n<p>将 ASCII 数据行写入串行端口</p>\n<h3 id=\"-88\"><a class=\"anchor\" href=\"#-88\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNCVCOCVCMiVFOCVBMSU4QyVFNSU5MiU4Qy11c2ItJUU5JTgwJTlBJUU0JUJGJUExLS0tJUU2JThFJUE3JUU1JTg4JUI2JUU1JUJDJTk1JUU4JTg0JTlBJUU1JTkyJThDJUU1JTg2JTg1JUU1JUFEJTk4\"></span>串行和 USB 通信 - 控制引脚和内存</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zZXJpYWxwb3J0LmZsdXNoLmh0bWw=\">flush</span></p>\n<p>清空串行端口设备缓冲区</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zZXJpYWxwb3J0LmdldHBpbnN0YXR1cy5odG1s\">getpinstatus</span></p>\n<p>获取串行引脚状态</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zZXJpYWxwb3J0LnNldHJ0cy5odG1s\">setRTS</span></p>\n<p>设置串行 RTS 引脚</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zZXJpYWxwb3J0LnNldGR0ci5odG1s\">setDTR</span></p>\n<p>设置串行 DTR 引脚</p>\n<h3 id=\"-89\"><a class=\"anchor\" href=\"#-89\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sI3RjcGlwLSVFOSU4MCU5QSVFNCVCRiVBMS0tLSVFOCVCRiU5RSVFNiU4RSVBNSVFNSU5MiU4QyVFOSU4NSU4RCVFNyVCRCVBRQ==\"></span>TCP/IP 通信 - 连接和配置</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi90Y3BjbGllbnQuaHRtbA==\">tcpclient</span></p>\n<p>创建与 TCP/IP 服务器的 TCP/IP 客户端连接</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9lY2hvdGNwaXAuaHRtbA==\">echotcpip</span></p>\n<p>启动或停止 TCP/IP 回显服务器</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi90Y3BjbGllbnQuY29uZmlndXJldGVybWluYXRvci5odG1s\">configureTerminator</span></p>\n<p>为通过 TCP/IP 与远程主机进行的 ASCII 字符串通信设置终止符</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi90Y3BjbGllbnQuY29uZmlndXJlY2FsbGJhY2suaHRtbA==\">configureCallback</span></p>\n<p>为通过 TCP/IP 与远程主机的通信设置回调函数和触发条件</p>\n<h3 id=\"-90\"><a class=\"anchor\" href=\"#-90\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sI3RjcGlwLSVFOSU4MCU5QSVFNCVCRiVBMS0tLSVFOCVBRiVCQiVFNSU4RiU5NiVFNSU5MiU4QyVFNSU4NiU5OSVFNSU4NSVBNQ==\"></span>TCP/IP 通信 - 读取和写入</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi90Y3BjbGllbnQucmVhZC5odG1s\">read</span></p>\n<p>通过 TCP/IP 读取远程主机上的数据</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi90Y3BjbGllbnQucmVhZGxpbmUuaHRtbA==\">readline</span></p>\n<p>通过 TCP/IP 从远程主机读取 ASCII 字符串数据行</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi90Y3BjbGllbnQud3JpdGUuaHRtbA==\">write</span></p>\n<p>通过 TCP/IP 向远程主机写入数据</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi90Y3BjbGllbnQud3JpdGVsaW5lLmh0bWw=\">writeline</span></p>\n<p>通过 TCP/IP 向远程主机写入 ASCII 数据行</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi90Y3BjbGllbnQuZmx1c2guaHRtbA==\">flush</span></p>\n<p>为通过 TCP/IP 与远程主机的通信清空缓冲区</p>\n<h3 id=\"-91\"><a class=\"anchor\" href=\"#-91\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sI2JsdWV0b290aC0lRTklODAlOUElRTQlQkYlQTEtLS0lRTglQkYlOUUlRTYlOEUlQTUlRTUlOTIlOEMlRTklODUlOEQlRTclQkQlQUU=\"></span>Bluetooth 通信 - 连接和配置</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9ibHVldG9vdGhsaXN0Lmh0bWw=\">bluetoothlist</span></p>\n<p>扫描附近的  <code>Bluetooth</code>  经典设备</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9ibHVldG9vdGguaHRtbA==\">bluetooth</span></p>\n<p>连接到  <code>Bluetooth</code>  经典设备</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9ibHVldG9vdGguY29uZmlndXJldGVybWluYXRvci5odG1s\">configureTerminator</span></p>\n<p>为与  <code>Bluetooth</code>  设备的 ASCII 字符串通信设置终止符</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9ibHVldG9vdGguY29uZmlndXJlY2FsbGJhY2suaHRtbA==\">configureCallback</span></p>\n<p>为与  <code>Bluetooth</code>  设备的通信设置回调函数和触发条件</p>\n<h3 id=\"-92\"><a class=\"anchor\" href=\"#-92\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sI2JsdWV0b290aC0lRTklODAlOUElRTQlQkYlQTEtLS0lRTglQUYlQkIlRTUlOEYlOTYlRTUlOTIlOEMlRTUlODYlOTklRTUlODUlQTU=\"></span>Bluetooth 通信 - 读取和写入</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9ibHVldG9vdGgucmVhZC5odG1s\">read</span></p>\n<p>从  <code>Bluetooth</code>  设备读取数据</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9ibHVldG9vdGgucmVhZGxpbmUuaHRtbA==\">readline</span></p>\n<p>从  <code>Bluetooth</code>  设备读取 ASCII 字符串数据行</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9ibHVldG9vdGgud3JpdGUuaHRtbA==\">write</span></p>\n<p>将数据写入  <code>Bluetooth</code>  设备</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9ibHVldG9vdGgud3JpdGVsaW5lLmh0bWw=\">writeline</span></p>\n<p>将 ASCII 数据行写入  <code>Bluetooth</code>  设备</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9ibHVldG9vdGguZmx1c2guaHRtbA==\">flush</span></p>\n<p>清空  <code>Bluetooth</code>  设备缓冲区</p>\n<h3 id=\"-93\"><a class=\"anchor\" href=\"#-93\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sI2JsdWV0b290aC0lRTQlQkQlOEUlRTUlOEElOUYlRTglODAlOTclRTklODAlOUElRTQlQkYlQTE=\"></span>Bluetooth 低功耗通信</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9ibGVsaXN0Lmh0bWw=\">blelist</span></p>\n<p>扫描附近的低功耗  <code>Bluetooth</code>  外围设备</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9ibGUuaHRtbA==\">ble</span></p>\n<p>连接到低功耗  <code>Bluetooth</code>  外围设备</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWJzaGFyZWQuYmxlbGliLmNoYXJhY3RlcmlzdGljLmh0bWw=\">characteristic</span></p>\n<p>访问低功耗  <code>Bluetooth</code>  外围设备的特征</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWJzaGFyZWQuYmxlbGliLmRlc2NyaXB0b3IuaHRtbA==\">descriptor</span></p>\n<p>访问低功耗  <code>Bluetooth</code>  外围设备上的描述符</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWJzaGFyZWQuYmxlbGliLmNoYXJhY3RlcmlzdGljLnJlYWQuaHRtbA==\">read</span></p>\n<p>读取低功耗  <code>Bluetooth</code>  外围设备上的特征或描述符数据</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWJzaGFyZWQuYmxlbGliLmNoYXJhY3RlcmlzdGljLndyaXRlLmh0bWw=\">write</span></p>\n<p>将数据写入低功耗  <code>Bluetooth</code>  外围设备的特征或描述符</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWJzaGFyZWQuYmxlbGliLmNoYXJhY3RlcmlzdGljLnN1YnNjcmliZS5odG1s\">subscribe</span></p>\n<p>订阅特征通知或指示</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9tYXRsYWJzaGFyZWQuYmxlbGliLmNoYXJhY3RlcmlzdGljLnVuc3Vic2NyaWJlLmh0bWw=\">unsubscribe</span></p>\n<p>取消订阅特征通知和指示</p>\n<h3 id=\"-94\"><a class=\"anchor\" href=\"#-94\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sI3dlYi0lRTYlOUMlOEQlRTUlOEElQTE=\"></span>Web 服务</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi93ZWJyZWFkLmh0bWw=\">webread</span></p>\n<p>从 RESTful Web 服务读取内容</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi93ZWJ3cml0ZS5odG1s\">webwrite</span></p>\n<p>将数据写入 RESTful Web 服务</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi93ZWJzYXZlLmh0bWw=\">websave</span></p>\n<p>将 RESTful Web 服务中的内容保存到文件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi93ZWJvcHRpb25zLmh0bWw=\">weboptions</span></p>\n<p>指定 RESTful Web 服务的参数</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi93ZWIuaHRtbA==\">web</span></p>\n<p>在浏览器中打开网页或文件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zZW5kbWFpbC5odG1s\">sendmail</span></p>\n<p>向地址列表发送电子邮件</p>\n<h3 id=\"-95\"><a class=\"anchor\" href=\"#-95\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sI2Z0cC0lRTYlOTYlODclRTQlQkIlQjYlRTYlOTMlOEQlRTQlQkQlOUM=\"></span>FTP 文件操作</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9mdHAuaHRtbA==\">ftp</span></p>\n<p>连接到 FTP 服务器以访问其文件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9zZnRwLmh0bWw=\">sftp</span></p>\n<p>Connection to SFTP server to access its files</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9mdHAuYXNjaWkuaHRtbA==\">ascii</span></p>\n<p>将 FTP 传输模式设置为 ASCII</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9mdHAuYmluYXJ5Lmh0bWw=\">binary</span></p>\n<p>将 FTP 传输模式设置为二进制</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9mdHAuY2QuaHRtbA==\">cd</span></p>\n<p>更改或查看 SFTP 或 FTP 服务器上的当前文件夹</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9mdHAuY2xvc2UuaHRtbA==\">close</span></p>\n<p>关闭与 SFTP 或 FTP 服务器的连接</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9mdHAuZGVsZXRlLmh0bWw=\">delete</span></p>\n<p>删除 SFTP 或 FTP 服务器上的文件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9mdHAuZGlyLmh0bWw=\">dir</span></p>\n<p>列出 SFTP 或 FTP 服务器上的文件夹内容</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9mdHAubWdldC5odG1s\">mget</span></p>\n<p>从 SFTP 或 FTP 服务器下载文件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9mdHAubWtkaXIuaHRtbA==\">mkdir</span></p>\n<p>在 SFTP 或 FTP 服务器上创建新文件夹</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9mdHAubXB1dC5odG1s\">mput</span></p>\n<p>将文件或文件夹上传到 SFTP 或 FTP 服务器</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9mdHAucmVuYW1lLmh0bWw=\">rename</span></p>\n<p>重命名 SFTP 或 FTP 服务器上的文件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi9mdHAucm1kaXIuaHRtbA==\">rmdir</span></p>\n<p>删除 SFTP 或 FTP 服务器上的文件夹</p>\n<h3 id=\"-96\"><a class=\"anchor\" href=\"#-96\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNyU4OSVBOSVFOCU4MSU5NCVFNyVCRCU5MS1pb3QtJUU2JTk1JUIwJUU2JThEJUFF\"></span>物联网 (IoT) 数据</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi90aGluZ3NwZWFrcmVhZC5odG1s\">thingSpeakRead</span></p>\n<p>读取存储在  <code>ThingSpeak</code>  通道中的数据</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL3JlZi90aGluZ3NwZWFrd3JpdGUuaHRtbA==\">thingSpeakWrite</span></p>\n<p>将数据写入  <code>ThingSpeak</code>  通道</p>\n<h2 id=\"-97\"><a class=\"anchor\" href=\"#-97\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL21hdGxhYi5odG1sIyVFNSU4RiVBNiVFOCVBNyU4MQ==\"></span>另见</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWF0aHdvcmtzLmNvbS8=\">MATLAB 官网</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXRod29ya3MuY24v\">MATLAB 官网 (中文)</span></li>\n</ul>\n<p>© 2022 Kenny Wang.</p>\n",
            "tags": [
                "编程语言"
            ]
        },
        {
            "id": "http://红叶.top/2023/05/23/memo-list/quick-reference/C%20%E5%A4%87%E5%BF%98%E6%B8%85%E5%8D%95/",
            "url": "http://红叶.top/2023/05/23/memo-list/quick-reference/C%20%E5%A4%87%E5%BF%98%E6%B8%85%E5%8D%95/",
            "title": "C 备忘清单",
            "date_published": "2023-05-23T07:49:38.082Z",
            "content_html": "<p>提供基本语法和方法的 C 快速参考备忘单。</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTUlODUlQTUlRTklOTclQTg=\"></span>入门</h2>\n<h3 id=\"-2\"><a class=\"anchor\" href=\"#-2\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCNoZWxsb2M=\"></span>hello.c</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>使用  <code>gcc</code>  编译  <code>hello.c</code>  文件</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ gcc <span class=\"token parameter variable\">-o</span> hello hello.c</pre></td></tr></table></figure><p>运行编译后的二进制文件 ( <code>hello</code> )</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ ./hello</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 输出 => Hello World</span></pre></td></tr></table></figure><h3 id=\"-3\"><a class=\"anchor\" href=\"#-3\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTUlOEYlOTglRTklODclOEY=\"></span>变量</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> myNum <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> myNum2<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 不赋值，然后再赋值</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>myNum2 <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">int</span> myNum3 <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//myNum3 值为 15</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>myNum3 <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 现在 myNum3 值为 10</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">float</span> myFloatNum <span class=\"token operator\">=</span> <span class=\"token number\">5.99</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 浮点数</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">char</span> myLetter <span class=\"token operator\">=</span> <span class=\"token char\">'D'</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 字符</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">int</span> y <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">int</span> sum <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 添加变量相加</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">// 声明多个变量</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> z <span class=\"token operator\">=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"-4\"><a class=\"anchor\" href=\"#-4\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTUlQjglQjglRTklODclOEYtY29uc3RhbnRz\"></span>常量 Constants</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> minutesPerHour <span class=\"token operator\">=</span> <span class=\"token number\">60</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> PI <span class=\"token operator\">=</span> <span class=\"token number\">3.14</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>最佳实践</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> BIRTHYEAR <span class=\"token operator\">=</span> <span class=\"token number\">1980</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"-5\"><a class=\"anchor\" href=\"#-5\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTYlQjMlQTglRTklODclOEE=\"></span>注释</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 这是一个注释</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 这是一个注释</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/* 多行注释，上面的代码将打印出 Hello World!</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>到屏幕上，真是太棒了 */</span></pre></td></tr></table></figure><h3 id=\"-6\"><a class=\"anchor\" href=\"#-6\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTYlODklOTMlRTUlOEQlQjAlRTYlOTYlODclRTYlOUMlQUM=\"></span>打印文本</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I am learning C.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> testInteger <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Number = %d\"</span><span class=\"token punctuation\">,</span> testInteger<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">float</span> f <span class=\"token operator\">=</span> <span class=\"token number\">5.99</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 浮点数</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Value = %f\"</span><span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">short</span> a <span class=\"token operator\">=</span> <span class=\"token number\">0</span>b1010110<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 2 进制数字</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> <span class=\"token number\">02713</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 8 进制数字</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">long</span> c <span class=\"token operator\">=</span> <span class=\"token number\">0X1DAB83</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 16 进制数字</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// 以 8 进制形似输出</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a=%ho, b=%o, c=%lo\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">// 输出 => a=126, b=2713, c=7325603</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">// 以 10 进制形式输出</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a=%hd, b=%d, c=%ld\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">// 输出 => a=86, b=1483, c=1944451</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">// 以 16 进制形式输出（字母小写）</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a=%hx, b=%x, c=%lx\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">// 输出 => a=56, b=5cb, c=1dab83</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">// 以 16 进制形式输出（字母大写）</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a=%hX, b=%X, c=%lX\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\">// 输出 => a=56, b=5CB, c=1DAB83</span></pre></td></tr></table></figure><h3 id=\"-7\"><a class=\"anchor\" href=\"#-7\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTYlOEUlQTclRTUlODglQjYlRTclQTklQkElRTYlQTAlQkMlRTYlOTUlQjA=\"></span>控制空格数</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> a1<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> a2<span class=\"token operator\">=</span><span class=\"token number\">345</span><span class=\"token punctuation\">,</span> a3<span class=\"token operator\">=</span><span class=\"token number\">700</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> b1<span class=\"token operator\">=</span><span class=\"token number\">56720</span><span class=\"token punctuation\">,</span> b2<span class=\"token operator\">=</span><span class=\"token number\">9999</span><span class=\"token punctuation\">,</span> b3<span class=\"token operator\">=</span><span class=\"token number\">20098</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> c1<span class=\"token operator\">=</span><span class=\"token number\">233</span><span class=\"token punctuation\">,</span> c2<span class=\"token operator\">=</span><span class=\"token number\">205</span><span class=\"token punctuation\">,</span> c3<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> d1<span class=\"token operator\">=</span><span class=\"token number\">34</span><span class=\"token punctuation\">,</span> d2<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> d3<span class=\"token operator\">=</span><span class=\"token number\">23</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%-9d %-9d %-9d\\n\"</span><span class=\"token punctuation\">,</span> a1<span class=\"token punctuation\">,</span> a2<span class=\"token punctuation\">,</span> a3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%-9d %-9d %-9d\\n\"</span><span class=\"token punctuation\">,</span> b1<span class=\"token punctuation\">,</span> b2<span class=\"token punctuation\">,</span> b3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%-9d %-9d %-9d\\n\"</span><span class=\"token punctuation\">,</span> c1<span class=\"token punctuation\">,</span> c2<span class=\"token punctuation\">,</span> c3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%-9d %-9d %-9d\\n\"</span><span class=\"token punctuation\">,</span> d1<span class=\"token punctuation\">,</span> d2<span class=\"token punctuation\">,</span> d3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>输出结果</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">20</span>        <span class=\"token number\">345</span>       <span class=\"token number\">700</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">56720</span>     <span class=\"token number\">9999</span>      <span class=\"token number\">20098</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">233</span>       <span class=\"token number\">205</span>       <span class=\"token number\">1</span>    </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">34</span>        <span class=\"token number\">0</span>         <span class=\"token number\">23</span></pre></td></tr></table></figure><p><code>%-9d</code>  中， <code>d</code>  表示以  <code>10</code>  进制输出， <code>9</code>  表示最少占  <code>9</code>  个字符的宽度，宽度不足以空格补齐， <code>-</code>  表示左对齐</p>\n<h3 id=\"-8\"><a class=\"anchor\" href=\"#-8\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTUlQUQlOTclRTclQUMlQTYlRTQlQjglQjItc3RyaW5ncw==\"></span>字符串 Strings</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">char</span> greetings<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span> greetings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>访问字符串</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">char</span> greetings<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c\"</span><span class=\"token punctuation\">,</span> greetings<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>修改字符串</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">char</span> greetings<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>greetings<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token char\">'J'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span> greetings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 输出 \"Jello World!\"</span></pre></td></tr></table></figure><p>另一种创建字符串的方法</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">char</span> greetings<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token char\">'H'</span><span class=\"token punctuation\">,</span><span class=\"token char\">'e'</span><span class=\"token punctuation\">,</span><span class=\"token char\">'l'</span><span class=\"token punctuation\">,</span><span class=\"token char\">'l'</span><span class=\"token punctuation\">,</span><span class=\"token char\">'\\0'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span> greetings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 输出 \"Hell!\"</span></pre></td></tr></table></figure><p><code>C</code>  <strong>没有</strong> String 类型，使用  <code>char</code>  类型并创建一个字符  <code>array</code></p>\n<h3 id=\"-9\"><a class=\"anchor\" href=\"#-9\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTYlOUQlQTElRTQlQkIlQjYlRTUlODglQTQlRTYlOTYlQUQ=\"></span>条件判断</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> time <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>time <span class=\"token operator\">&lt;</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"再会！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"晚上好！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 输出 -> \"晚上好！\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">int</span> time <span class=\"token operator\">=</span> <span class=\"token number\">22</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>time <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"早上好！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>time <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"再会！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"晚上好！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">// 输出 -> \"晚上好！\"</span></pre></td></tr></table></figure><h3 id=\"-10\"><a class=\"anchor\" href=\"#-10\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTQlQjglODklRTUlODUlODMlRTglQkYlOTAlRTclQUUlOTclRTclQUMlQTY=\"></span>三元运算符</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> time <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span>time <span class=\"token operator\">&lt;</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"再会！\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"晚上好！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"-11\"><a class=\"anchor\" href=\"#-11\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCNzd2l0Y2g=\"></span>Switch</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> day <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>day<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span> <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"周三\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span> <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"周四\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"期待周末\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 输出 -> \"周四\" (day 4)</span></pre></td></tr></table></figure><h3 id=\"-12\"><a class=\"anchor\" href=\"#-12\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCN3aGlsZS0lRTUlQkUlQUElRTclOEUlQUY=\"></span>While 循环</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>注意</strong>：不要忘记增加条件中使用的变量，否则循环永远不会结束，成为 “死循环”！</p>\n<h3 id=\"-13\"><a class=\"anchor\" href=\"#-13\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCNkb3doaWxlLSVFNSVCRSVBQSVFNyU4RSVBRg==\"></span>Do/While 循环</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">do</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"-14\"><a class=\"anchor\" href=\"#-14\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCNmb3ItJUU1JUJFJUFBJUU3JThFJUFG\"></span>For 循环</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"-15\"><a class=\"anchor\" href=\"#-15\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTglQjclQjMlRTUlODclQkElRTUlQkUlQUElRTclOEUlQUYtYnJlYWtjb250aW51ZQ==\"></span>跳出循环 Break/Continue</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在  <code>i</code>  等于  <code>4</code>  时跳出循环</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>示例跳过  <code>4</code>  的值</p>\n<h3 id=\"-16\"><a class=\"anchor\" href=\"#-16\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCN3aGlsZS1icmVhay0lRTclQTQlQkElRTQlQkUlOEI=\"></span>While Break 示例</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"-17\"><a class=\"anchor\" href=\"#-17\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCN3aGlsZS1jb250aW51ZS0lRTclQTQlQkElRTQlQkUlOEI=\"></span>While continue 示例</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"-18\"><a class=\"anchor\" href=\"#-18\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTYlOTUlQjAlRTclQkIlODQtYXJyYXlz\"></span>数组 Arrays</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> myNumbers<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> myNumbers<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 输出 25</span></pre></td></tr></table></figure><p>更改数组元素</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> myNumbers<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>myNumbers<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">33</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> myNumbers<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>循环遍历数组</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> myNumbers<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span> myNumbers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>设置数组大小</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 声明一个由四个整数组成的数组：</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> myNumbers<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 添加元素</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>myNumbers<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">25</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>myNumbers<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>myNumbers<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">75</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>myNumbers<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"-19\"><a class=\"anchor\" href=\"#-19\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTYlOUUlOUElRTQlQjglQkUtZW51bQ==\"></span>枚举 Enum</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">enum</span> <span class=\"token class-name\">week</span> <span class=\"token punctuation\">&#123;</span> Mon <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> Tues<span class=\"token punctuation\">,</span> Wed<span class=\"token punctuation\">,</span> Thurs<span class=\"token punctuation\">,</span> Fri<span class=\"token punctuation\">,</span> Sat<span class=\"token punctuation\">,</span> Sun <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>定义枚举变量</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">enum</span> <span class=\"token class-name\">week</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">enum</span> <span class=\"token class-name\">week</span> <span class=\"token punctuation\">&#123;</span> Mon <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> Tues<span class=\"token punctuation\">,</span> Wed<span class=\"token punctuation\">,</span> Thurs<span class=\"token punctuation\">,</span> Fri<span class=\"token punctuation\">,</span> Sat<span class=\"token punctuation\">,</span> Sun <span class=\"token punctuation\">&#125;</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>有了枚举变量，就可以把列表中的值赋给它</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">enum</span> <span class=\"token class-name\">week</span> <span class=\"token punctuation\">&#123;</span> Mon <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> Tues<span class=\"token punctuation\">,</span> Wed<span class=\"token punctuation\">,</span> Thurs<span class=\"token punctuation\">,</span> Fri<span class=\"token punctuation\">,</span> Sat<span class=\"token punctuation\">,</span> Sun <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">enum</span> <span class=\"token class-name\">week</span> a <span class=\"token operator\">=</span> Mon<span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> Wed<span class=\"token punctuation\">,</span> c <span class=\"token operator\">=</span> Sat<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 或者</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">enum</span> <span class=\"token class-name\">week</span><span class=\"token punctuation\">&#123;</span> Mon <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> Tues<span class=\"token punctuation\">,</span> Wed<span class=\"token punctuation\">,</span> Thurs<span class=\"token punctuation\">,</span> Fri<span class=\"token punctuation\">,</span> Sat<span class=\"token punctuation\">,</span> Sun <span class=\"token punctuation\">&#125;</span> a <span class=\"token operator\">=</span> Mon<span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> Wed<span class=\"token punctuation\">,</span> c <span class=\"token operator\">=</span> Sat<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"-20\"><a class=\"anchor\" href=\"#-20\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTYlOUUlOUElRTQlQjglQkUlRTclQTQlQkElRTQlQkUlOEIlRTUlQkElOTQlRTclOTQlQTg=\"></span>枚举示例应用</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">enum</span> <span class=\"token class-name\">week</span> <span class=\"token punctuation\">&#123;</span>Mon <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> Tues<span class=\"token punctuation\">,</span> Wed<span class=\"token punctuation\">,</span> Thurs<span class=\"token punctuation\">&#125;</span> day<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>day<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>day<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">case</span> Mon<span class=\"token operator\">:</span>   <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Monday\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">case</span> Tues<span class=\"token operator\">:</span>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Tuesday\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">case</span> Wed<span class=\"token operator\">:</span>   <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Wednesday\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">case</span> Thurs<span class=\"token operator\">:</span> <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Thursday\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"-21\"><a class=\"anchor\" href=\"#-21\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTclOTQlQTglRTYlODglQjclRTglQkUlOTMlRTUlODUlQTU=\"></span>用户输入</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 创建一个整数变量来存储我们从用户那里得到的数字</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> myNum<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 要求用户输入一个数字</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入一个数字: \\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 获取并保存用户输入的号码</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>myNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 输出用户输入的数字</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"您输入的数字: %d\"</span><span class=\"token punctuation\">,</span> myNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"-22\"><a class=\"anchor\" href=\"#-22\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTclOTQlQTglRTYlODglQjclRTglQkUlOTMlRTUlODUlQTUlRTUlQUQlOTclRTclQUMlQTYlRTQlQjglQjI=\"></span>用户输入字符串</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 创建一个字符串</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">char</span> firstName<span class=\"token punctuation\">[</span><span class=\"token number\">30</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 要求用户输入一些文本</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"输入您的名字: \\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 获取并保存文本</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span> firstName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 输出文本</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello %s.\"</span><span class=\"token punctuation\">,</span> firstName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"-23\"><a class=\"anchor\" href=\"#-23\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTUlODYlODUlRTUlQUQlOTglRTUlOUMlQjAlRTUlOUQlODA=\"></span>内存地址</h3>\n<p>创建变量时，会为该变量分配一个内存地址</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> myAge <span class=\"token operator\">=</span> <span class=\"token number\">43</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%p\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>myAge<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 输出：0x7ffe5367e044</span></pre></td></tr></table></figure><p>要访问它，请使用引用运算符 ( <code>&amp;</code> )</p>\n<h3 id=\"-24\"><a class=\"anchor\" href=\"#-24\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTUlODglOUIlRTUlQkIlQkElRTYlOEMlODclRTklOTIlODg=\"></span>创建指针</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> myAge <span class=\"token operator\">=</span> <span class=\"token number\">43</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 一个 int 变量</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> myAge<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 输出 myAge (43) 的值</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 输出 myAge 的内存地址（0x7ffe5367e044）</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%p\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>myAge<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"-25\"><a class=\"anchor\" href=\"#-25\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTYlOEMlODclRTklOTIlODglRTUlOEYlOTglRTklODclOEY=\"></span>指针变量</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> myAge <span class=\"token operator\">=</span> <span class=\"token number\">43</span><span class=\"token punctuation\">;</span>            <span class=\"token comment\">// 一个 int 变量</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span><span class=\"token operator\">*</span> ptr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>myAge<span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 名为 ptr 的指针变量，用于存储 myAge 的地址</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span> myAge<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 输出 myAge (43) 的值</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%p\\n\"</span><span class=\"token punctuation\">,</span> \\<span class=\"token operator\">&amp;</span>myAge<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 输出 myAge 的内存地址（0x7ffe5367e044）</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%p\\n\"</span><span class=\"token punctuation\">,</span> ptr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 用指针（0x7ffe5367e044）输出 myAge 的内存地址</span></pre></td></tr></table></figure><h3 id=\"-26\"><a class=\"anchor\" href=\"#-26\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTUlOEYlOTYlRTYlQjYlODglRTUlQkMlOTUlRTclOTQlQTg=\"></span>取消引用</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> myAge <span class=\"token operator\">=</span> <span class=\"token number\">43</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 变量声明</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span><span class=\"token operator\">*</span> ptr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>myAge<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 指针声明</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 参考：用指针输出 myAge 的</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 内存地址（0x7ffe5367e044）</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%p\\n\"</span><span class=\"token punctuation\">,</span> ptr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 取消引用：用指针输出 myAge 的值 (43)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>ptr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"-27\"><a class=\"anchor\" href=\"#-27\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTglQkYlOTAlRTclQUUlOTclRTclQUMlQTY=\"></span>运算符</h2>\n<h3 id=\"-28\"><a class=\"anchor\" href=\"#-28\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTclQUUlOTclRTYlOUMlQUYlRTglQkYlOTAlRTclQUUlOTclRTclQUMlQTY=\"></span>算术运算符</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> myNum <span class=\"token operator\">=</span> <span class=\"token number\">100</span> <span class=\"token operator\">+</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> sum1 <span class=\"token operator\">=</span> <span class=\"token number\">100</span> <span class=\"token operator\">+</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 150 (100 + 50)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> sum2 <span class=\"token operator\">=</span> sum1 <span class=\"token operator\">+</span> <span class=\"token number\">250</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 400 (150 + 250)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> sum3 <span class=\"token operator\">=</span> sum2 <span class=\"token operator\">+</span> sum2<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 800 (400 + 400)</span></pre></td></tr></table></figure><hr />\n<p><code>+</code></p>\n<p>加</p>\n<p>将两个值相加</p>\n<p><code>x + y</code></p>\n<p><code>-</code></p>\n<p>减</p>\n<p>从另一个值中减去一个值</p>\n<p><code>x - y</code></p>\n<p><code>*</code></p>\n<p>乘</p>\n<p>将两个值相乘</p>\n<p><code>x * y</code></p>\n<p><code>/</code></p>\n<p>除</p>\n<p>将一个值除以另一个</p>\n<p><code>x / y</code></p>\n<p><code>%</code></p>\n<p>取模</p>\n<p>返回除法余数</p>\n<p><code>x % y</code></p>\n<p><code>++</code></p>\n<p>增量</p>\n<p>将变量的值增加 1</p>\n<p><code>++</code></p>\n<p><code>--</code></p>\n<p>乘量</p>\n<p>将变量的值减 1</p>\n<p><code>--x</code></p>\n<h3 id=\"-29\"><a class=\"anchor\" href=\"#-29\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTglQjUlOEIlRTUlODAlQkMlRTglQkYlOTAlRTclQUUlOTclRTclQUMlQTY=\"></span>赋值运算符</h3>\n<p><code>=</code></p>\n<p>x  <code>=</code>  5</p>\n<p>x  <code>=</code>  5</p>\n<p><code>+=</code></p>\n<p>x  <code>+=</code>  3</p>\n<p>x  <code>=</code>  x  <code>+</code>  3</p>\n<p><code>-=</code></p>\n<p>x  <code>-=</code>  3</p>\n<p>x  <code>=</code>  x  <code>-</code>  3</p>\n<p><code>*=</code></p>\n<p>x  <code>*=</code>  3</p>\n<p>x  <code>=</code>  x  <code>*</code>  3</p>\n<p><code>/=</code></p>\n<p>x  <code>/=</code>  3</p>\n<p>x  <code>=</code>  x  <code>/</code>  3</p>\n<p><code>%=</code></p>\n<p>x  <code>%=</code>  3</p>\n<p>x  <code>=</code>  x  <code>%</code>  3</p>\n<p><code>&amp;=</code></p>\n<p>x  <code>&amp;=</code>  3</p>\n<p>x  <code>=</code>  x  <code>&amp;</code>  3</p>\n<p><code>|=</code></p>\n<p>x  <code>|=</code>  3</p>\n<p>x  <code>=</code>  x  <code>|</code>  3</p>\n<p><code>^=</code></p>\n<p>x  <code>^=</code>  3</p>\n<p>x  <code>=</code>  x  <code>^</code>  3</p>\n<p><code>&gt;&gt;=</code></p>\n<p>x  <code>&gt;&gt;=</code>  3</p>\n<p>x  <code>=</code>  x  <code>&gt;&gt;</code>  3</p>\n<p><code>&lt;&lt;=</code></p>\n<p>x  <code>&lt;&lt;=</code>  3</p>\n<p>x  <code>=</code>  x  <code>&lt;&lt;</code>  3</p>\n<h3 id=\"-30\"><a class=\"anchor\" href=\"#-30\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTYlQUYlOTQlRTglQkUlODMlRTglQkYlOTAlRTclQUUlOTclRTclQUMlQTY=\"></span>比较运算符</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> y <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> x <span class=\"token operator\">></span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 返回 1（真），因为 5 大于 3</span></pre></td></tr></table></figure><hr />\n<p><code>==</code></p>\n<p>等于</p>\n<p>x  <code>==</code>  y</p>\n<p><code>!=</code></p>\n<p>不等于</p>\n<p>x  <code>!=</code>  y</p>\n<p><code>&gt;</code></p>\n<p>大于</p>\n<p>x  <code>&gt;</code>  y</p>\n<p><code>&lt;</code></p>\n<p>小于</p>\n<p>x  <code>&lt;</code>  y</p>\n<p><code>&gt;=</code></p>\n<p>大于或等于</p>\n<p>x  <code>&gt;=</code>  y</p>\n<p><code>&lt;=</code></p>\n<p>小于或等于</p>\n<p>x  <code>&lt;=</code>  y</p>\n<p>比较运算符用于比较两个值</p>\n<h3 id=\"-31\"><a class=\"anchor\" href=\"#-31\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTklODAlQkIlRTglQkUlOTElRTglQkYlOTAlRTclQUUlOTclRTclQUMlQTY=\"></span>逻辑运算符</h3>\n<p><code>&amp;&amp;</code></p>\n<p><code>与</code> 逻辑</p>\n<p>如果两个语句都为真，则返回真</p>\n<p><code>x &lt; 5 &amp;&amp; x &lt; 10</code></p>\n<p><code>||</code></p>\n<p><code>或</code> 逻辑</p>\n<p>如果其中一个语句为真，则返回真</p>\n<p><code>x &lt; 5 || x &lt; 4</code></p>\n<p><code>!</code></p>\n<p><code>非</code> 逻辑</p>\n<p>反转结果，如果结果为真则返回假</p>\n<p><code>!(x &lt; 5 &amp;&amp; x &lt; 10)</code></p>\n<h3 id=\"-32\"><a class=\"anchor\" href=\"#-32\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTglQkYlOTAlRTclQUUlOTclRTclQUMlQTYlRTclQTQlQkElRTQlQkUlOEI=\"></span>运算符示例</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">60</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 60 = 0011 1100 */</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> <span class=\"token number\">13</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 13 = 0000 1101 */</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>           </pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>c <span class=\"token operator\">=</span> a <span class=\"token operator\">&amp;</span> b<span class=\"token punctuation\">;</span>      <span class=\"token comment\">/* 12 = 0000 1100 */</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Line 1 - c 的值是 %d\\n\"</span><span class=\"token punctuation\">,</span> c <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>c <span class=\"token operator\">=</span> a <span class=\"token operator\">|</span> b<span class=\"token punctuation\">;</span>      <span class=\"token comment\">/* 61 = 0011 1101 */</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Line 2 - c 的值是 %d\\n\"</span><span class=\"token punctuation\">,</span> c <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>c <span class=\"token operator\">=</span> a <span class=\"token operator\">^</span> b<span class=\"token punctuation\">;</span>      <span class=\"token comment\">/* 49 = 0011 0001 */</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Line 3 - c 的值是 %d\\n\"</span><span class=\"token punctuation\">,</span> c <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token operator\">~</span>a<span class=\"token punctuation\">;</span>         <span class=\"token comment\">/*-61 = 1100 0011 */</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Line 4 - c 的值是 %d\\n\"</span><span class=\"token punctuation\">,</span> c <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>c <span class=\"token operator\">=</span> a <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">/* 240 = 1111 0000 */</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Line 5 - c 的值是 %d\\n\"</span><span class=\"token punctuation\">,</span> c <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>c <span class=\"token operator\">=</span> a <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">/* 15 = 0000 1111 */</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Line 6 - c 的值是 %d\\n\"</span><span class=\"token punctuation\">,</span> c <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"-33\"><a class=\"anchor\" href=\"#-33\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTQlQkQlOEQlRTglQkYlOTAlRTclQUUlOTclRTclQUMlQTY=\"></span>位运算符</h3>\n<p><code>&amp;</code></p>\n<p>按位与操作，按二进制位进行 &quot;与&quot; 运算</p>\n<p><code>(A &amp; B)</code>  将得到  <code>12</code>  即为 0000 1100</p>\n<p><code>|</code></p>\n<p>按位或运算符，按二进制位进行 &quot;或&quot; 运算</p>\n<p><code>(A | B)</code>  将得到  <code>61</code>  即为 0011 1101</p>\n<p><code>^</code></p>\n<p>异或运算符，按二进制位进行 &quot;异或&quot; 运算</p>\n<p><code>(A ^ B)</code>  将得到  <code>49</code>  即为 0011 0001</p>\n<p><code>~</code></p>\n<p>取反运算符，按二进制位进行 &quot;取反&quot; 运算</p>\n<p><code>(~A)</code>  将得到  <code>-61</code>  即为 1100 0011</p>\n<p><code>&lt;&lt;</code></p>\n<p>二进制左移运算符</p>\n<p><code>A &lt;&lt; 2</code>  将得到  <code>240</code>  即为 1111 0000</p>\n<p><code>&gt;&gt;</code></p>\n<p>二进制右移运算符</p>\n<p><code>A &gt;&gt; 2</code>  将得到  <code>15</code>  即为 0000 1111</p>\n<h2 id=\"-34\"><a class=\"anchor\" href=\"#-34\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTYlOTUlQjAlRTYlOEQlQUUlRTclQjElQkIlRTUlOUUlOEItZGF0YS10eXBlcw==\"></span>数据类型 Data Types</h2>\n<h3 id=\"-35\"><a class=\"anchor\" href=\"#-35\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTUlOUYlQkElRTYlOUMlQUMlRTYlOTUlQjAlRTYlOEQlQUUlRTclQjElQkIlRTUlOUUlOEI=\"></span>基本数据类型</h3>\n<p><code>char</code></p>\n<p>1 字节</p>\n<p><code>−128</code>  ~  <code>127</code></p>\n<p>单个字符 / 字母 / 数字 / ASCII</p>\n<p><code>signed char</code></p>\n<p>1 字节</p>\n<p><code>−128</code>  ~  <code>127</code></p>\n<ul>\n<li></li>\n</ul>\n<p><code>unsigned char</code></p>\n<p>1 字节</p>\n<p><code>0</code>  ~  <code>255</code></p>\n<ul>\n<li></li>\n</ul>\n<p><code>int</code></p>\n<p><code>2</code>  到  <code>4</code>  字节</p>\n<p><code>−32,768</code>  ~  <code>32,767</code></p>\n<p>存储整数</p>\n<p><code>signed int</code></p>\n<p>2 字节</p>\n<p><code>−32,768</code>  ~  <code>32,767</code></p>\n<p><code>unsigned int</code></p>\n<p>2 字节</p>\n<p><code>0</code>  ~  <code>65,535</code></p>\n<p><code>short int</code></p>\n<p>2 字节</p>\n<p><code>−32,768</code>  ~  <code>32,767</code></p>\n<p><code>signed short int</code></p>\n<p>2 字节</p>\n<p><code>−32,768</code>  ~  <code>32,767</code></p>\n<p><code>unsigned short int</code></p>\n<p>2 字节</p>\n<p><code>0</code>  ~  <code>65,535</code></p>\n<p><code>long int</code></p>\n<p>4 字节</p>\n<p><code>-2,147,483,648</code>  ~  <code>2,147,483,647</code></p>\n<p><code>signed long int</code></p>\n<p>4 字节</p>\n<p><code>-2,147,483,648</code>  ~  <code>2,147,483,647</code></p>\n<p><code>unsigned long int</code></p>\n<p>4 字节</p>\n<p><code>0</code>  ~  <code>4,294,967,295</code></p>\n<p><code>float</code></p>\n<p>4 字节</p>\n<p><code>double</code></p>\n<p>8 字节</p>\n<p><code>long double</code></p>\n<p>10 字节</p>\n<h3 id=\"-36\"><a class=\"anchor\" href=\"#-36\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTYlOTUlQjAlRTYlOEQlQUUlRTclQjElQkIlRTUlOUUlOEI=\"></span>数据类型</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 创建变量</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> myNum <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>             <span class=\"token comment\">// 整数</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">float</span> myFloatNum <span class=\"token operator\">=</span> <span class=\"token number\">5.99</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 浮点数</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">char</span> myLetter <span class=\"token operator\">=</span> <span class=\"token char\">'D'</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 字符串</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 高精度浮点数据或数字</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">double</span> myDouble <span class=\"token operator\">=</span> <span class=\"token number\">3.2325467</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 打印输出变量</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span> myNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%f\\n\"</span><span class=\"token punctuation\">,</span> myFloatNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c\\n\"</span><span class=\"token punctuation\">,</span> myLetter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%lf\\n\"</span><span class=\"token punctuation\">,</span> myDouble<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><hr />\n<p><code>char</code></p>\n<p>字符型</p>\n<p><code>short</code></p>\n<p>短整型</p>\n<p><code>int</code></p>\n<p>整型</p>\n<p><code>long</code></p>\n<p>长整型</p>\n<p><code>float</code></p>\n<p>单精度浮点型</p>\n<p><code>double</code></p>\n<p>双精度浮点型</p>\n<p><code>void</code></p>\n<p>无类型</p>\n<h3 id=\"-37\"><a class=\"anchor\" href=\"#-37\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTUlOUYlQkElRTYlOUMlQUMlRTYlQTAlQkMlRTUlQkMlOEYlRTglQUYlQjQlRTYlOTglOEUlRTclQUMlQTY=\"></span>基本格式说明符</h3>\n<p><code>%d</code>  或  <code>%i</code></p>\n<p><code>int</code>  整数</p>\n<p><code>%f</code></p>\n<p><code>float</code>  单精度的十进制类型</p>\n<p><code>%lf</code></p>\n<p><code>double</code>  高精度浮点数据或数字</p>\n<p><code>%c</code></p>\n<p><code>char</code>  字符</p>\n<p><code>%s</code></p>\n<p>用于  <code>strings</code>  字符串</p>\n<h3 id=\"-38\"><a class=\"anchor\" href=\"#-38\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTUlOUYlQkElRTYlOUMlQUMlRTYlQTAlQkMlRTUlQkMlOEYlRTglQUYlQjQlRTYlOTglOEUlRTclQUMlQTYtMQ==\"></span>基本格式说明符</h3>\n<p>8 进制</p>\n<p><code>%ho</code></p>\n<p><code>%o</code></p>\n<p><code>%lo</code></p>\n<p>10 进制</p>\n<p><code>%hd</code></p>\n<p><code>%d</code></p>\n<p><code>%ld</code></p>\n<p>16 进制</p>\n<p><code>%hx</code>  /  <code>%hX</code></p>\n<p><code>%x</code>  /  <code>%X</code></p>\n<p><code>%lx</code>  /  <code>%lX</code></p>\n<h3 id=\"-39\"><a class=\"anchor\" href=\"#-39\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTYlOTUlQjAlRTYlOEQlQUUlRTYlQTAlQkMlRTUlQkMlOEYlRTclQTQlQkElRTQlQkUlOEI=\"></span>数据格式示例</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> myNum <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">float</span> myFloatNum <span class=\"token operator\">=</span> <span class=\"token number\">5.99</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 浮点数</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">char</span> myLetter <span class=\"token operator\">=</span> <span class=\"token char\">'D'</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 字符串</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 打印输出变量</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span> myNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%f\\n\"</span><span class=\"token punctuation\">,</span> myFloatNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c\\n\"</span><span class=\"token punctuation\">,</span> myLetter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"-40\"><a class=\"anchor\" href=\"#-40\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTklQTIlODQlRTUlQTQlODQlRTclOTAlODYlRTUlOTklQTg=\"></span>预处理器</h2>\n<h3 id=\"-41\"><a class=\"anchor\" href=\"#-41\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTklQTIlODQlRTUlQTQlODQlRTclOTAlODYlRTUlOTklQTglRTYlOEMlODclRTQlQkIlQTQ=\"></span>预处理器指令</h3>\n<p><code>#define</code></p>\n<p>定义宏</p>\n<p><code>#include</code></p>\n<p>包含一个源代码文件</p>\n<p><code>#undef</code></p>\n<p>取消已定义的宏</p>\n<p><code>#ifdef</code></p>\n<p>如果宏已经定义，则返回真</p>\n<p><code>#ifndef</code></p>\n<p>如果宏没有定义，则返回真</p>\n<p><code>#if</code></p>\n<p>如果给定条件为真，则编译下面代码</p>\n<p><code>#else</code></p>\n<p><code>#if</code>  的替代方案</p>\n<p><code>#elif</code></p>\n<p>如果  <code>#if</code>  条件为假，当前条件为 <code>真</code></p>\n<p><code>#endif</code></p>\n<p>结束一个  <code>#if……#else</code>  条件编译块</p>\n<p><code>#error</code></p>\n<p>当遇到标准错误时，输出错误消息</p>\n<p><code>#pragma</code></p>\n<p>使用标准化方法，向编译器发布特殊的命令到编译器中</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 所有的 MAX_ARRAY_LENGTH 替换为 20</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">MAX_ARRAY_LENGTH</span> <span class=\"token expression\"><span class=\"token number\">20</span></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 系统库中获取 stdio.h</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 本地目录中获取 myheader.h</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"myheader.h\"</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">undef</span>  <span class=\"token expression\">FILE_SIZE</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">FILE_SIZE</span> <span class=\"token expression\"><span class=\"token number\">42</span> </span><span class=\"token comment\">// 取消已定义并定义为 42</span></span></pre></td></tr></table></figure><h3 id=\"-42\"><a class=\"anchor\" href=\"#-42\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTklQTIlODQlRTUlQUUlOUElRTQlQjklODklRTUlQUUlOEY=\"></span>预定义宏</h3>\n<p><code>__DATE__</code></p>\n<p>当前日期，一个以 &quot;MMM DD YYYY&quot; 格式表示的字符常量</p>\n<p><code>__TIME__</code></p>\n<p>当前时间，一个以 &quot;HH:MM:SS&quot; 格式表示的字符常量</p>\n<p><code>__FILE__</code></p>\n<p>这会包含当前文件名，一个字符串常量</p>\n<p><code>__LINE__</code></p>\n<p>这会包含当前行号，一个十进制常量</p>\n<p><code>__STDC__</code></p>\n<p>当编译器以  <code>ANSI</code>  标准编译时，则定义为  <code>1</code></p>\n<p><code>ANSI C</code>  定义了许多宏，您可以使用这些宏，但是不能直接修改这些预定义的宏</p>\n<h4 id=\"-43\"><a class=\"anchor\" href=\"#-43\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTklQTIlODQlRTUlQUUlOUElRTQlQjklODklRTUlQUUlOEYlRTclQTQlQkElRTQlQkUlOEI=\"></span>预定义宏示例</h4>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"File :%s\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Date :%s\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">__DATE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Time :%s\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">__TIME__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Line :%d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">__LINE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ANSI :%d\\n\"</span><span class=\"token punctuation\">,</span> __STDC__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"-44\"><a class=\"anchor\" href=\"#-44\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTUlQUUlOEYlRTUlQkIlQjYlRTclQkIlQUQlRTglQkYlOTAlRTclQUUlOTclRTclQUMlQTY=\"></span>宏延续运算符（\\）</h3>\n<p>一个宏通常写在一个单行上。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span>  <span class=\"token macro-name function\">message_for</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span>  </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token expression\"><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span>#a </span><span class=\"token string\">\" 和 \"</span> <span class=\"token expression\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">b</span> </span></span><span class=\"token string\">\": 我们爱你！\\n\"</span><span class=\"token expression\"><span class=\"token punctuation\">)</span></span></span></pre></td></tr></table></figure><p>如果宏太长，一个单行容纳不下，则使用宏延续运算符  <code>\\</code></p>\n<h3 id=\"-45\"><a class=\"anchor\" href=\"#-45\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTUlQUQlOTclRTclQUMlQTYlRTQlQjglQjIlRTUlQjglQjglRTklODclOEYlRTUlOEMlOTYlRTglQkYlOTAlRTclQUUlOTclRTclQUMlQTY=\"></span>字符串常量化运算符（#）</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span>  <span class=\"token macro-name function\">message_for</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span>  </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token expression\"><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span>#a </span><span class=\"token string\">\" 和 \"</span> <span class=\"token expression\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">b</span> </span></span><span class=\"token string\">\": 我们爱你！\\n\"</span><span class=\"token expression\"><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token function\">message_for</span><span class=\"token punctuation\">(</span>Carole<span class=\"token punctuation\">,</span> Debra<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p>\n<pre><code>Carole 和 Debra: 我们爱你！\n</code></pre>\n<p>需要把一个宏的参数转换为字符串常量时，使用字符串常量化运算符  <code>#</code></p>\n<h3 id=\"-46\"><a class=\"anchor\" href=\"#-46\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTYlQTAlODclRTglQUUlQjAlRTclQjIlOTglRTglQjQlQjQlRTglQkYlOTAlRTclQUUlOTclRTclQUMlQTY=\"></span>标记粘贴运算符（##）</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">tokenpaster</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token function\">printf</span> <span class=\"token punctuation\">(</span></span><span class=\"token string\">\"token\"</span> <span class=\"token expression\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">n</span> </span></span><span class=\"token string\">\" = %d\"</span><span class=\"token expression\"><span class=\"token punctuation\">,</span> token</span><span class=\"token punctuation\">##</span><span class=\"token expression\">n<span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">int</span> token34 <span class=\"token operator\">=</span> <span class=\"token number\">40</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token function\">tokenpaster</span><span class=\"token punctuation\">(</span><span class=\"token number\">34</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"-47\"><a class=\"anchor\" href=\"#-47\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCNkZWZpbmVkLSVFOCVCRiU5MCVFNyVBRSU5NyVFNyVBQyVBNg==\"></span>defined () 运算符</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">if</span> <span class=\"token expression\"><span class=\"token operator\">!</span><span class=\"token function\">defined</span> <span class=\"token punctuation\">(</span>MESSAGE<span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">MESSAGE</span> <span class=\"token string\">\"You wish!\"</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Here is the message: %s\\n\"</span><span class=\"token punctuation\">,</span> MESSAGE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"-48\"><a class=\"anchor\" href=\"#-48\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTUlOEYlODIlRTYlOTUlQjAlRTUlOEMlOTYlRTclOUElODQlRTUlQUUlOEY=\"></span>参数化的宏</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">square</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token keyword\">return</span> x <span class=\"token operator\">*</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>宏重写上面的代码，如下：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">square</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr></table></figure><p>宏名称和左圆括号之间不允许有空格</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">MAX</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Max between 20 and 10 is %d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">MAX</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"-49\"><a class=\"anchor\" href=\"#-49\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTUlODclQkQlRTYlOTUlQjA=\"></span>函数</h2>\n<h3 id=\"-50\"><a class=\"anchor\" href=\"#-50\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTUlODclQkQlRTYlOTUlQjAlRTUlQTMlQjAlRTYlOTglOEUlRTUlOTIlOEMlRTUlQUUlOUElRTQlQjklODk=\"></span>函数声明和定义</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>函数由两部分组成</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 声明 declaration</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token comment\">// 函数体（要执行的代码）(definition)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><hr />\n<ul>\n<li><code>Declaration</code>  声明函数名称、返回类型和参数 <em>(如果有)</em></li>\n<li><code>Definition</code>  函数体 <em>(要执行的代码)</em></li>\n</ul>\n<hr />\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 函数声明</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 主要方法</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//--> 调用函数</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 函数定义</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"晚上好！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"-51\"><a class=\"anchor\" href=\"#-51\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTglQjAlODMlRTclOTQlQTglRTUlODclQkQlRTYlOTUlQjA=\"></span>调用函数</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 创建函数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"晚上好！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 调用函数</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 可以被多次调用</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 输出 -> \"晚上好！\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// 输出 -> \"晚上好！\"</span></pre></td></tr></table></figure><h3 id=\"-52\"><a class=\"anchor\" href=\"#-52\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTUlODclQkQlRTYlOTUlQjAlRTUlOEYlODIlRTYlOTUlQjA=\"></span>函数参数</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> name<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello %s\\n\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Liam\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Jenny\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// Hello Liam</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// Hello Jenny</span></pre></td></tr></table></figure><h3 id=\"-53\"><a class=\"anchor\" href=\"#-53\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTUlQTQlOUElRTQlQjglQUElRTUlOEYlODIlRTYlOTUlQjA=\"></span>多个参数</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> name<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你好 %s 你 %d 岁了。\\n\"</span><span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">,</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Liam\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Jenny\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 你好 Liam 你 3 岁了。</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 你好 Jenny 你 14 岁了。</span></pre></td></tr></table></figure><h3 id=\"-54\"><a class=\"anchor\" href=\"#-54\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTglQkYlOTQlRTUlOUIlOUUlRTUlODAlQkM=\"></span>返回值</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">5</span> <span class=\"token operator\">+</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"结果: %d\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 输出 8 (5 + 3)</span></pre></td></tr></table></figure><p>两个参数</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"结果: %d\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token comment\">// 将结果存储在变量中</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"结果 = %d\"</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// 结果: 8 (5 + 3)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">// 结果 = 8 (5 + 3)</span></pre></td></tr></table></figure><h3 id=\"-55\"><a class=\"anchor\" href=\"#-55\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTklODAlOTIlRTUlQkQlOTIlRTclQTQlQkElRTQlQkUlOEI=\"></span>递归示例</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> k <span class=\"token operator\">+</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"-56\"><a class=\"anchor\" href=\"#-56\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTYlOTUlQjAlRTUlQUQlQTYlRTUlODclQkQlRTYlOTUlQjA=\"></span>数学函数</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;math.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%f\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 平方根</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%f\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ceil</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 四舍五入 (入)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%f\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 四舍五入 (舍)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%f\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//x (4) 的 y (3) 次方</span></pre></td></tr></table></figure><hr />\n<ul>\n<li><code>abs(x)</code>  绝对值</li>\n<li><code>acos(x)</code>  反余弦值</li>\n<li><code>asin(x)</code>  反正弦值</li>\n<li><code>atan(x)</code>  反正切</li>\n<li><code>cbrt(x)</code>  立方根</li>\n<li><code>cos(x)</code>  余弦</li>\n<li><code>exp(x)</code>  Ex 的值</li>\n<li><code>sin(x)</code>  x 的正弦值</li>\n<li><code>tan(x)</code>  角度的正切</li>\n</ul>\n<h2 id=\"-57\"><a class=\"anchor\" href=\"#-57\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCNzdHJ1Y3R1cmVzLSVFNyVCQiU5MyVFNiU5RSU4NA==\"></span>Structures 结构</h2>\n<h3 id=\"-58\"><a class=\"anchor\" href=\"#-58\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTUlODglOUIlRTUlQkIlQkElRTclQkIlOTMlRTYlOUUlODQ=\"></span>创建结构</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">MyStructure</span> <span class=\"token punctuation\">&#123;</span>  <span class=\"token comment\">// 结构声明</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">int</span> myNum<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 成员（int 变量）</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">char</span> myLetter<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 成员（char 变量）</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 用分号结束结构</span></pre></td></tr></table></figure><p>创建一个名为  <code>s1</code>  的结构变量</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">myStructure</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">int</span> myNum<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">char</span> myLetter<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">struct</span> <span class=\"token class-name\">myStructure</span> s1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"-59\"><a class=\"anchor\" href=\"#-59\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTclQkIlOTMlRTYlOUUlODQlRTQlQjglQUQlRTclOUElODQlRTUlQUQlOTclRTclQUMlQTYlRTQlQjglQjI=\"></span>结构中的字符串</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">myStructure</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">int</span> myNum<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">char</span> myLetter<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">char</span> myString<span class=\"token punctuation\">[</span><span class=\"token number\">30</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// String</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">struct</span> <span class=\"token class-name\">myStructure</span> s1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token function\">strcpy</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">.</span>myString<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Some text\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token comment\">// 打印值</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我字符串: %s\"</span><span class=\"token punctuation\">,</span> s1<span class=\"token punctuation\">.</span>myString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>使用  <code>strcpy</code>  函数为字符串赋值</p>\n<h3 id=\"-60\"><a class=\"anchor\" href=\"#-60\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTglQUUlQkYlRTklOTclQUUlRTclQkIlOTMlRTYlOUUlODQlRTYlODglOTAlRTUlOTElOTg=\"></span>访问结构成员</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 创建一个名为 myStructure 的结构</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">myStructure</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span> myNum<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">char</span> myLetter<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token comment\">// 创建一个名为 s1 的 myStructure 结构变量</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">struct</span> <span class=\"token class-name\">myStructure</span> s1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token comment\">// 为 s1 的成员赋值</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  s1<span class=\"token punctuation\">.</span>myNum <span class=\"token operator\">=</span> <span class=\"token number\">13</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  s1<span class=\"token punctuation\">.</span>myLetter <span class=\"token operator\">=</span> <span class=\"token char\">'B'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token comment\">// 创建一个名为 s2 的 myStructure 结构变量</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token comment\">// 并为其赋值</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token keyword\">struct</span> <span class=\"token class-name\">myStructure</span> s2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token char\">'B'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token comment\">// 打印值</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"My number: %d\\n\"</span><span class=\"token punctuation\">,</span> s1<span class=\"token punctuation\">.</span>myNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"My letter: %c\\n\"</span><span class=\"token punctuation\">,</span> s1<span class=\"token punctuation\">.</span>myLetter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>创建不同的结构变量</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">myStructure</span> s1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">myStructure</span> s2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 为不同的结构变量赋值</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>s1<span class=\"token punctuation\">.</span>myNum <span class=\"token operator\">=</span> <span class=\"token number\">13</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>s1<span class=\"token punctuation\">.</span>myLetter <span class=\"token operator\">=</span> <span class=\"token char\">'B'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>s2<span class=\"token punctuation\">.</span>myNum <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>s2<span class=\"token punctuation\">.</span>myLetter <span class=\"token operator\">=</span> <span class=\"token char\">'C'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"-61\"><a class=\"anchor\" href=\"#-61\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTUlQTQlOEQlRTUlODglQjYlRTclQkIlOTMlRTYlOUUlODQ=\"></span>复制结构</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">myStructure</span> s1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token char\">'B'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Some text\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">myStructure</span> s2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>s2 <span class=\"token operator\">=</span> s1<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>示例中，将  <code>s1</code>  的值复制到  <code>s2</code></p>\n<h3 id=\"-62\"><a class=\"anchor\" href=\"#-62\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTQlQkYlQUUlRTYlOTQlQjklRTUlODAlQkM=\"></span>修改值</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 创建一个结构变量并为其赋值</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">myStructure</span> s1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token char\">'B'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 修改值</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>s1<span class=\"token punctuation\">.</span>myNum <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>s1<span class=\"token punctuation\">.</span>myLetter <span class=\"token operator\">=</span> <span class=\"token char\">'C'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 打印值</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d %c %s\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    s1<span class=\"token punctuation\">.</span>myNum<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    s1<span class=\"token punctuation\">.</span>myLetter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"-63\"><a class=\"anchor\" href=\"#-63\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTYlOTYlODclRTQlQkIlQjYlRTUlQTQlODQlRTclOTAlODY=\"></span>文件处理</h2>\n<h3 id=\"-64\"><a class=\"anchor\" href=\"#-64\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTYlOTYlODclRTQlQkIlQjYlRTUlQTQlODQlRTclOTAlODYlRTUlODclQkQlRTYlOTUlQjA=\"></span>文件处理函数</h3>\n<p><code>fopen()</code></p>\n<p><code>打开</code> 新文件或现有文件</p>\n<p><code>fprintf()</code></p>\n<p>将数据 <code>写入</code> 文件</p>\n<p><code>fscanf()</code></p>\n<p>从文件中 <code>读取</code> 数据</p>\n<p><code>fputc()</code></p>\n<p>将一个字符 <code>写入</code> 文件</p>\n<p><code>fgetc()</code></p>\n<p>从文件中 <code>读取</code> 一个字符</p>\n<p><code>fclose()</code></p>\n<p><code>关闭</code> 文件</p>\n<p><code>fseek()</code></p>\n<p>将文件指针设置到 <code>给定位置</code></p>\n<p><code>fputw()</code></p>\n<p>将整数 <code>写入</code> 文件</p>\n<p><code>fgetw()</code></p>\n<p>从文件中 <code>读取</code> 一个整数</p>\n<p><code>ftell()</code></p>\n<p>返回当前 <code>位置</code></p>\n<p><code>rewind()</code></p>\n<p>将文件指针设置为文件的开头</p>\n<p>C 库中有许多函数可以 <code>打开</code>  / <code>读取</code>  / <code>写入</code>  / <code>搜索</code> 和 <code>关闭</code> 文件</p>\n<h3 id=\"-65\"><a class=\"anchor\" href=\"#-65\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTYlODklOTMlRTUlQkMlODAlRTYlQTglQTElRTUlQkMlOEYlRTUlOEYlODIlRTYlOTUlQjA=\"></span>打开模式参数</h3>\n<p><code>r</code></p>\n<p>以 <code>读取</code> 模式打开一个文本文件，允许读取文件</p>\n<p><code>w</code></p>\n<p>以 <code>写</code> 模式打开一个文本文件，允许写入文件</p>\n<p><code>a</code></p>\n<p>以 <code>追加</code> 模式打开一个文本文件<br />\n如果文件不存在，则会创建一个新文件</p>\n<p><code>r+</code></p>\n<p>以 <code>读写</code> 模式打开一个文本文件，允许读写文件</p>\n<p><code>w+</code></p>\n<p>以 <code>读写</code> 模式打开一个文本文件，允许读写文件</p>\n<p><code>a+</code></p>\n<p>以 <code>读写</code> 模式打开一个文本文件，允许读写文件</p>\n<p><code>rb</code></p>\n<p>以 <code>读取</code> 模式打开二进制文件</p>\n<p><code>wb</code></p>\n<p>以 <code>写入</code> 模式打开二进制文件</p>\n<p><code>ab</code></p>\n<p>以 <code>追加</code> 模式打开二进制文件</p>\n<p><code>rb+</code></p>\n<p>以 <code>读写</code> 模式打开二进制文件</p>\n<p><code>wb+</code></p>\n<p>以 <code>读写</code> 模式打开二进制文件</p>\n<p><code>ab+</code></p>\n<p>以 <code>读写</code> 模式打开二进制文件</p>\n<h3 id=\"-66\"><a class=\"anchor\" href=\"#-66\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTYlODklOTMlRTUlQkMlODAlRTYlOTYlODclRTQlQkIlQjZmb3Blbg==\"></span>打开文件：fopen ()</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  FILE <span class=\"token operator\">*</span>fp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">char</span> ch<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  fp <span class=\"token operator\">=</span> <span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"file_handle.c\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    ch <span class=\"token operator\">=</span> <span class=\"token function\">fgetc</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ch <span class=\"token operator\">==</span> <span class=\"token constant\">EOF</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c\"</span><span class=\"token punctuation\">,</span> ch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>对文件执行所有操作后，必须关闭  <code>fclose()</code>  该文件</p>\n<h3 id=\"-67\"><a class=\"anchor\" href=\"#-67\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTUlODYlOTklRTUlODUlQTUlRTYlOTYlODclRTQlQkIlQjZmcHJpbnRm\"></span>写入文件：fprintf ()</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  FILE <span class=\"token operator\">*</span>fp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  fp <span class=\"token operator\">=</span> <span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"file.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 打开文件</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token comment\">// 将数据写入文件</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">,</span> <span class=\"token string\">\"fprintf 的 Hello 文件..\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 关闭文件  </span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"-68\"><a class=\"anchor\" href=\"#-68\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTglQUYlQkIlRTUlOEYlOTYlRTYlOTYlODclRTQlQkIlQjZmc2NhbmY=\"></span>读取文件：fscanf ()</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span>  </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  FILE <span class=\"token operator\">*</span>fp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">char</span> buff<span class=\"token punctuation\">[</span><span class=\"token number\">255</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 创建 char 数组存储文件数据</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  fp <span class=\"token operator\">=</span> <span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"file.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token function\">fscanf</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">,</span> <span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span> buff<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token constant\">EOF</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s \"</span><span class=\"token punctuation\">,</span> buff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"-69\"><a class=\"anchor\" href=\"#-69\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTUlODYlOTklRTUlODUlQTUlRTYlOTYlODclRTQlQkIlQjZmcHV0Yw==\"></span>写入文件：fputc ()</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  FILE <span class=\"token operator\">*</span>fp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  fp <span class=\"token operator\">=</span> <span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"file1.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 打开文件</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token function\">fputc</span><span class=\"token punctuation\">(</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">,</span>fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 将单个字符写入文件</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 关闭文件</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"-70\"><a class=\"anchor\" href=\"#-70\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTglQUYlQkIlRTUlOEYlOTYlRTYlOTYlODclRTQlQkIlQjZmZ2V0Yw==\"></span>读取文件：fgetc ()</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;conio.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  FILE <span class=\"token operator\">*</span>fp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">char</span> c<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token function\">clrscr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  fp<span class=\"token operator\">=</span><span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myfile.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>c<span class=\"token operator\">=</span><span class=\"token function\">fgetc</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token constant\">EOF</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token function\">getch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"-71\"><a class=\"anchor\" href=\"#-71\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTUlODYlOTklRTUlODUlQTUlRTYlOTYlODclRTQlQkIlQjZmcHV0cw==\"></span>写入文件：fputs ()</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;conio.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  FILE <span class=\"token operator\">*</span>fp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token function\">clrscr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  fp <span class=\"token operator\">=</span> <span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myfile2.txt\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">fputs</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello c programming\"</span><span class=\"token punctuation\">,</span>fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">getch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"-72\"><a class=\"anchor\" href=\"#-72\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTglQUYlQkIlRTUlOEYlOTYlRTYlOTYlODclRTQlQkIlQjZmZ2V0cw==\"></span>读取文件：fgets ()</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;conio.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  FILE <span class=\"token operator\">*</span>fp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">char</span> text<span class=\"token punctuation\">[</span><span class=\"token number\">300</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token function\">clrscr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  fp<span class=\"token operator\">=</span><span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myfile2.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">fgets</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token function\">getch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"-73\"><a class=\"anchor\" href=\"#-73\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCNmc2Vlaw==\"></span>fseek()</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  FILE <span class=\"token operator\">*</span>fp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  fp <span class=\"token operator\">=</span> <span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myfile.txt\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"w+\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function\">fputs</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This is Book\"</span><span class=\"token punctuation\">,</span> fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token comment\">// 将文件指针设置到给定位置</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">fseek</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">SEEK_SET</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token function\">fputs</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Kenny Wong\"</span><span class=\"token punctuation\">,</span> fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>将文件指针设置到给定位置</p>\n<h3 id=\"-74\"><a class=\"anchor\" href=\"#-74\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCNyZXdpbmQ=\"></span>rewind()</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;conio.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  FILE <span class=\"token operator\">*</span>fp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">char</span> c<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token function\">clrscr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  fp<span class=\"token operator\">=</span><span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"file.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>c<span class=\"token operator\">=</span><span class=\"token function\">fgetc</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token constant\">EOF</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token function\">rewind</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 将文件指针移动到文件的开头</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>c<span class=\"token operator\">=</span><span class=\"token function\">fgetc</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token constant\">EOF</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token function\">getch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">// 输出</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">// Hello World!Hello World!</span></pre></td></tr></table></figure><h3 id=\"-75\"><a class=\"anchor\" href=\"#-75\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCNmdGVsbA==\"></span>ftell()</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;conio.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">main</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   FILE <span class=\"token operator\">*</span>fp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token keyword\">int</span> length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token function\">clrscr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   fp <span class=\"token operator\">=</span> <span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"file.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token function\">fseek</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">SEEK_END</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   length <span class=\"token operator\">=</span> <span class=\"token function\">ftell</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 返回当前位置</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"文件大小: %d bytes\"</span><span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token function\">getch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">// 输出</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">// 文件大小: 18 bytes</span></pre></td></tr></table></figure><h2 id=\"-76\"><a class=\"anchor\" href=\"#-76\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTYlOUQlODIlRTklQTElQjk=\"></span>杂项</h2>\n<h3 id=\"-77\"><a class=\"anchor\" href=\"#-77\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCNkb2NrZXItJUU4JUJGJTkwJUU4JUExJThDJUU3JThFJUFGJUU1JUEyJTgz\"></span>Docker 运行环境</h3>\n<ul>\n<li>\n<p>安装 <a href=\"https://quickref.cn/docs/docker.html\"> <code>Docker</code> </a></p>\n</li>\n<li>\n<p>创建 <a href=\"https://quickref.cn/docs/dockerfile.html\"> <code>Dockerfile</code> </a> 文件</p>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">FROM</span> alpine:3.14</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">RUN</span> apk add --no-cache gcc musl-dev</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">RUN</span> apk add --no-cache g++</span></pre></td></tr></table></figure></li>\n<li>\n<p>生成本地 myalpine 镜像</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> build <span class=\"token parameter variable\">-t</span> myalpine <span class=\"token builtin class-name\">.</span></pre></td></tr></table></figure></li>\n<li>\n<p>运行映像，把当前路径  <code>($PWD)</code>  映射至容器的  <code>/test</code>  目录，用  <code>gcc</code>  编译程序， <code>exit</code>  返回</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-it</span> <span class=\"token parameter variable\">-v</span> <span class=\"token environment constant\">$PWD</span>:/test myalpine</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>root@b1a38bd7107a:/<span class=\"token comment\"># cd test</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>root@b1a38bd7107a:/test<span class=\"token comment\"># gcc -o hello hello.c</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Hello World</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>root@b1a38bd7107a:/test<span class=\"token comment\"># exit</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token builtin class-name\">exit</span></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"-78\"><a class=\"anchor\" href=\"#-78\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2MuaHRtbCMlRTUlOEYlQTYlRTglQTclODE=\"></span>另见</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qYXl3Y2psb3ZlLmdpdGh1Yi5pby9jLXR1dG9yaWFs\">C 教程</span> <em>(<span class=\"exturl\" data-url=\"aHR0cDovL2pheXdjamxvdmUuZ2l0aHViLmlv\">jaywcjlove.github.io</span>)</em></li>\n</ul>\n<p>© 2022 Kenny Wang.</p>\n",
            "tags": [
                "编程语言"
            ]
        },
        {
            "id": "http://红叶.top/2023/05/23/memo-list/quick-reference/Git%20%E5%A4%87%E5%BF%98%E6%B8%85%E5%8D%95/",
            "url": "http://红叶.top/2023/05/23/memo-list/quick-reference/Git%20%E5%A4%87%E5%BF%98%E6%B8%85%E5%8D%95/",
            "title": "Git 备忘清单",
            "date_published": "2023-05-23T07:49:38.082Z",
            "content_html": "<p>本备忘单总结了常用的 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXQtc2NtLmNvbS8=\">Git</span> 命令行指令，以供快速参考。</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNSU4NSVBNSVFOSU5NyVBOA==\"></span>入门</h2>\n<h3 id=\"-2\"><a class=\"anchor\" href=\"#-2\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNSU4OCU5QiVFNSVCQiVCQSVFNSVBRCU5OCVFNSU4MiVBOCVFNSVCQSU5Mw==\"></span>创建存储库</h3>\n<p>创建一个新的本地存储库</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> init <span class=\"token punctuation\">[</span>项目名称<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>克隆存储库 (代码仓库)</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> clone <span class=\"token operator\">&lt;</span>git_url<span class=\"token operator\">></span></pre></td></tr></table></figure><p>将存储库克隆到指定目录</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> clone <span class=\"token operator\">&lt;</span>git_url<span class=\"token operator\">></span> 指定目录</pre></td></tr></table></figure><p>将存储库克隆到指定目录，并指定分支</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> clone <span class=\"token operator\">&lt;</span>git_url<span class=\"token operator\">></span> <span class=\"token parameter variable\">-b</span> <span class=\"token operator\">&lt;</span>分支名称<span class=\"token operator\">></span> 指定目录</pre></td></tr></table></figure><h3 id=\"-3\"><a class=\"anchor\" href=\"#-3\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNSU4MSU5QSVFNSU4NyVCQSVFNiU5NCVCOSVFNSU4RiU5OA==\"></span>做出改变</h3>\n<p>在工作目录中<strong>显示</strong>修改后的文件，为您的下一次提交暂存</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> status</pre></td></tr></table></figure><p>暂存文件，准备提交</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token punctuation\">[</span>file<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>暂存<strong>所有</strong>更改的文件，准备提交</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span></pre></td></tr></table></figure><p>将所有暂存文件提交到版本化历史记录</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> commit <span class=\"token parameter variable\">-m</span> <span class=\"token string\">\"commit message\"</span></pre></td></tr></table></figure><p>将所有跟踪的文件提交到版本化历史记录</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> commit <span class=\"token parameter variable\">-am</span> <span class=\"token string\">\"commit message\"</span></pre></td></tr></table></figure><p>取消暂存文件，保留文件更改</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> reset <span class=\"token punctuation\">[</span>file<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>将所有内容恢复到最后一次提交</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> reset <span class=\"token parameter variable\">--hard</span></pre></td></tr></table></figure><p>已更改但未暂存内容的差异</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> <span class=\"token function\">diff</span></pre></td></tr></table></figure><p>已 commited 但尚未提交的内容的差异</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> <span class=\"token function\">diff</span> <span class=\"token parameter variable\">--staged</span></pre></td></tr></table></figure><p>在指定分支之前应用当前分支的任何提交</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> rebase <span class=\"token punctuation\">[</span>branch<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h3 id=\"-4\"><a class=\"anchor\" href=\"#-4\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFOSU4NSU4RCVFNyVCRCVBRQ==\"></span>配置</h3>\n<p>设置将附加到您的提交和标签的名称</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> user.name <span class=\"token string\">\"name\"</span></pre></td></tr></table></figure><p>设置将附加到您的提交和标签 tags 的<strong>电子邮件地址</strong></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> user.email <span class=\"token string\">\"email\"</span></pre></td></tr></table></figure><p>启用 Git 输出的一些着色</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> color.ui auto</pre></td></tr></table></figure><p>在文本编辑器中编辑全局配置文件</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> <span class=\"token parameter variable\">--edit</span></pre></td></tr></table></figure><p>显示本地  <code>repo</code>  配置设置</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> config <span class=\"token parameter variable\">--list</span></pre></td></tr></table></figure><p>删除全局设置</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> <span class=\"token parameter variable\">--unset</span> <span class=\"token operator\">&lt;</span>entry-name<span class=\"token operator\">></span></pre></td></tr></table></figure><h3 id=\"-5\"><a class=\"anchor\" href=\"#-5\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNCVCRCVCRiVFNyU5NCVBOCVFNSU4OCU4NiVFNiU5NCVBRg==\"></span>使用分支</h3>\n<p>列出所有本地分支</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> branch</pre></td></tr></table></figure><p>列出所有分支，本地和远程</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> branch <span class=\"token parameter variable\">-av</span></pre></td></tr></table></figure><p>切换到  <code>my_branch</code> ，并更新工作目录</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> checkout my_branch</pre></td></tr></table></figure><p>创建一个名为  <code>new_branch</code>  的新分支</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> checkout <span class=\"token parameter variable\">-b</span> new_branch</pre></td></tr></table></figure><p>删除名为  <code>my_branch</code>  的分支</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> branch <span class=\"token parameter variable\">-d</span> my_branch</pre></td></tr></table></figure><p>将分支  <code>A</code>  合并到分支  <code>B</code></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> checkout branchB</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ <span class=\"token function\">git</span> merge branchA</pre></td></tr></table></figure><p>标记当前提交</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> tag my_tag</pre></td></tr></table></figure><p>从远程分支中创建并切换到本地分支</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> checkout <span class=\"token parameter variable\">-b</span> <span class=\"token operator\">&lt;</span>branch-name<span class=\"token operator\">></span> origin/<span class=\"token operator\">&lt;</span>branch-name<span class=\"token operator\">></span></pre></td></tr></table></figure><h3 id=\"-6\"><a class=\"anchor\" href=\"#-6\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNCVCOCVCNCVFNiU5NyVCNiVFNiU4RiU5MCVFNCVCQSVBNA==\"></span>临时提交</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 保存已修改和分阶段的更改</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ <span class=\"token function\">git</span> stash</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 列出隐藏文件更改的堆栈顺序</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>$ <span class=\"token function\">git</span> stash list</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 从存储堆栈顶部编写工作</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>$ <span class=\"token function\">git</span> stash pop</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 丢弃存储堆栈顶部的更改</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>$ <span class=\"token function\">git</span> stash drop</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 回到某个 stash 的状态</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>$ <span class=\"token function\">git</span> stash apply <span class=\"token operator\">&lt;</span>stash@<span class=\"token punctuation\">&#123;</span>n<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 删除所有的 stash</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>$ <span class=\"token function\">git</span> stash <span class=\"token function\">clear</span></pre></td></tr></table></figure><h3 id=\"-7\"><a class=\"anchor\" href=\"#-7\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFOCVBNyU4MiVFNSVBRiU5RiVFNCVCRCVBMCVFNyU5QSU4NCVFNSVBRCU5OCVFNSU4MiVBOCVFNSVCQSU5Mw==\"></span>观察你的存储库</h3>\n<p>显示当前活动分支的提交历史</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> log</pre></td></tr></table></figure><p>显示 branchA 上不在 branchB 上的提交</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> log branchB<span class=\"token punctuation\">..</span>branchA</pre></td></tr></table></figure><p>显示更改文件的提交，即使跨重命名</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> log <span class=\"token parameter variable\">--follow</span> <span class=\"token punctuation\">[</span>file<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>显示 branchA 中的内容与 branchB 中的内容的差异</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> <span class=\"token function\">diff</span> branchB<span class=\"token punctuation\">..</span>.branchA</pre></td></tr></table></figure><p>以人类可读的格式显示 Git 中的任何对象</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> show <span class=\"token punctuation\">[</span>SHA<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h3 id=\"-8\"><a class=\"anchor\" href=\"#-8\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNSVCRiVCRCVFNyU5NSVBNSVFNiU5NiU4NyVFNCVCQiVCNi1naXRpZ25vcmU=\"></span>忽略文件 .gitignore</h3>\n<p>文件  <code>.gitignore</code>  指定了  <code>Git</code>  应该忽略的 <strong>未跟踪的</strong> 文件</p>\n<p>行首  <code>#</code></p>\n<p>全行注释，不支持行尾类注释 <em>(转义  <code>\\#</code> )</em></p>\n<p>行首 <strong> <code>!</code> </strong></p>\n<p>否定模式 <em>(转义  <code>\\!</code> )</em></p>\n<p><code>**</code></p>\n<p>匹配任意路径</p>\n<p><code>*</code></p>\n<p>匹配任意多个字符</p>\n<p><code>?</code></p>\n<p>匹配任意一个字符</p>\n<p><code>doc/**</code></p>\n<p>匹配  <code>doc</code>  文件夹下的全部内容</p>\n<p><code>doc/**/a</code></p>\n<p>匹配任意深度路径下的  <code>a</code>  文件或文件夹</p>\n<p><code>/</code></p>\n<p>表示路径分隔符，不区分操作系统</p>\n<p><code>/</code>  结尾</p>\n<p>仅会匹配文件夹，否则会匹配文件和文件夹</p>\n<p>空行</p>\n<p>不匹配任何文件</p>\n<p>行尾空格</p>\n<p>默认被忽略，可使用 <code>\\</code>  进行转义</p>\n<p>行首空格</p>\n<p>被正常处理，不会被忽略</p>\n<p>当前  <code>.gitignore</code>  文件定义规则的优先级高于上级路径  <code>.gitignore</code>  定义规则的优先级；后定义的规则优先级高于前面定义规则的优先级</p>\n<figure class=\"highlight gitignore\"><figcaption data-lang=\"gitignore\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 忽略当前目录 logs 文件夹下的全部内容</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token entry string\"><span class=\"token punctuation\">/</span>logs<span class=\"token punctuation\">/</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token entry string\"><span class=\"token punctuation\">/</span>logs<span class=\"token punctuation\">/</span><span class=\"token operator\">*</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token entry string\"><span class=\"token punctuation\">/</span>logs<span class=\"token punctuation\">/</span><span class=\"token operator\">**</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 上述几条规则等效</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 忽略 Mac 系统文件，包括任意子路径下的同名文件（夹）</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token entry string\">.DS_store</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 忽略 node_modules 文件夹，包括任意子路径下的同名文件夹</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token entry string\">node_modules<span class=\"token punctuation\">/</span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 忽略任意子路径下 build、target 文件夹，</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 但不忽略 src/main、src/test 下的 build、target 文件夹</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token entry string\">build<span class=\"token punctuation\">/</span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token entry string\"><span class=\"token operator\">!</span><span class=\"token operator\">**</span><span class=\"token punctuation\">/</span>src<span class=\"token punctuation\">/</span>main<span class=\"token punctuation\">/</span><span class=\"token operator\">**</span><span class=\"token punctuation\">/</span>build<span class=\"token punctuation\">/</span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token entry string\"><span class=\"token operator\">!</span><span class=\"token operator\">**</span><span class=\"token punctuation\">/</span>src<span class=\"token punctuation\">/</span>test<span class=\"token punctuation\">/</span><span class=\"token operator\">**</span><span class=\"token punctuation\">/</span>build<span class=\"token punctuation\">/</span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token entry string\">target<span class=\"token punctuation\">/</span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token entry string\"><span class=\"token operator\">!</span><span class=\"token operator\">**</span><span class=\"token punctuation\">/</span>src<span class=\"token punctuation\">/</span>main<span class=\"token punctuation\">/</span><span class=\"token operator\">**</span><span class=\"token punctuation\">/</span>target<span class=\"token punctuation\">/</span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token entry string\"><span class=\"token operator\">!</span><span class=\"token operator\">**</span><span class=\"token punctuation\">/</span>src<span class=\"token punctuation\">/</span>test<span class=\"token punctuation\">/</span><span class=\"token operator\">**</span><span class=\"token punctuation\">/</span>target<span class=\"token punctuation\">/</span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># 使用！重新包含指定文件（夹）</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token entry string\"><span class=\"token operator\">!</span>logs<span class=\"token punctuation\">/</span>.gitkeep</span></pre></td></tr></table></figure><h3 id=\"-9\"><a class=\"anchor\" href=\"#-9\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFOSU4NyU4RCVFNiU5RSU4NCVFNiU5NiU4NyVFNCVCQiVCNiVFNSU5MCU4RA==\"></span>重构文件名</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 从工作目录中删除文件并暂存删除</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> <span class=\"token function\">rm</span> <span class=\"token operator\">&lt;</span>filename<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 从版本控制中删除文件但在本地保留文件</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">git</span> <span class=\"token function\">rm</span> <span class=\"token parameter variable\">--cached</span> <span class=\"token operator\">&lt;</span>filename<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 更改文件名并准备提交</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">git</span> <span class=\"token function\">mv</span> <span class=\"token operator\">&lt;</span>filename-orig<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>filename-renamed<span class=\"token operator\">></span></pre></td></tr></table></figure><h3 id=\"-10\"><a class=\"anchor\" href=\"#-10\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNSU5MCU4QyVFNiVBRCVBNQ==\"></span>同步</h3>\n<p>从该 Git 远程获取所有分支</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> fetch <span class=\"token punctuation\">[</span>alias<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>将远程分支合并到当前分支以使其保持最新状态</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> merge <span class=\"token punctuation\">[</span>alias<span class=\"token punctuation\">]</span>/<span class=\"token punctuation\">[</span>branch<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 没有快进</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>$ <span class=\"token function\">git</span> merge --no-ff <span class=\"token punctuation\">[</span>alias<span class=\"token punctuation\">]</span>/<span class=\"token punctuation\">[</span>branch<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 仅快进</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>$ <span class=\"token function\">git</span> merge --ff-only <span class=\"token punctuation\">[</span>alias<span class=\"token punctuation\">]</span>/<span class=\"token punctuation\">[</span>branch<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>将本地分支提交传输到远程存储库分支</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> push <span class=\"token punctuation\">[</span>alias<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>branch<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>从跟踪远程分支获取并合并任何提交</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> pull</pre></td></tr></table></figure><p>将另一个分支的一个特定提交合并到当前分支</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> cherry-pick <span class=\"token punctuation\">[</span>commit_id<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h3 id=\"-11\"><a class=\"anchor\" href=\"#-11\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFOCVCRiU5QyVFNyVBOCU4Qg==\"></span>远程</h3>\n<p>添加一个 git URL 作为别名</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> remote <span class=\"token function\">add</span> <span class=\"token punctuation\">[</span>alias<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>url<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>显示您设置的远程存储库的名称</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> remote</pre></td></tr></table></figure><p>显示远程存储库的名称和 URL</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> remote <span class=\"token parameter variable\">-v</span></pre></td></tr></table></figure><p>删除远程存储库</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> remote <span class=\"token function\">rm</span> <span class=\"token punctuation\">[</span>remote repo name<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>更改 git repo 的 URL</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> remote set-url origin <span class=\"token punctuation\">[</span>git_url<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h3 id=\"-12\"><a class=\"anchor\" href=\"#-12\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFOCVCNyU5RiVFOCVCOCVBQSVFOCVCNyVBRiVFNSVCRSU4NCVFNiU5QiVCNCVFNiU5NCVCOQ==\"></span>跟踪路径更改</h3>\n<p>从项目中删除文件并暂存删除以进行提交</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> <span class=\"token function\">rm</span> <span class=\"token punctuation\">[</span>file<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>更改现有文件路径并暂存移动</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> <span class=\"token function\">mv</span> <span class=\"token punctuation\">[</span>existing-path<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>new-path<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>显示所有提交日志，并指示任何移动的路径</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> log <span class=\"token parameter variable\">--stat</span> <span class=\"token parameter variable\">-M</span></pre></td></tr></table></figure><h3 id=\"-13\"><a class=\"anchor\" href=\"#-13\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sI2dpdC0lRTklODUlOEQlRTclQkQlQUUtc3NoLSVFNCVCQiVBMyVFNyU5MCU4Ng==\"></span>git 配置 ssh 代理</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">cat</span> ~/.ssh/config</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Host gitlab.com</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 直接使用 sh**socks 提供的 socks5 代理端口</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>ProxyCommand <span class=\"token function\">nc</span> <span class=\"token parameter variable\">-X</span> <span class=\"token number\">5</span> <span class=\"token parameter variable\">-x</span> <span class=\"token number\">127.0</span>.0.1:1080 %h %p </pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Host github.com</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>ProxyCommand <span class=\"token function\">nc</span> <span class=\"token parameter variable\">-X</span> <span class=\"token number\">5</span> <span class=\"token parameter variable\">-x</span> <span class=\"token number\">127.0</span>.0.1:1080 %h %p</pre></td></tr></table></figure><h3 id=\"-14\"><a class=\"anchor\" href=\"#-14\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sI2dpdGF0dHJpYnV0ZXM=\"></span>.gitattributes</h3>\n<figure class=\"highlight ini\"><figcaption data-lang=\"ini\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 设置默认行为，以防人们没有设置 core.autocrlf</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">* text</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">auto</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 明确声明您希望始终规范化并在结帐时</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 转换为本机行结尾的文本文件</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>*.c text</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>*.h text</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 声明在结帐时始终以 CRLF 行结尾的文件</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token key attr-name\">*.sln text eol</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">crlf</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 表示所有真正二进制且不应修改的文件</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>*.png binary</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>*.jpg binary</pre></td></tr></table></figure><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dpdGh1Yi9saW5ndWlzdC9ibG9iL21hc3Rlci9kb2NzL292ZXJyaWRlcy5tZCN1c2luZy1naXRhdHRyaWJ1dGVz\">计入存储库语言</span></p>\n<figure class=\"highlight ini\"><figcaption data-lang=\"ini\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 标记或取消标记要根据存储库的语言统计数据而</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 忽略或默认隐藏差异的路径</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key attr-name\">search/index.json linguist-generated</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">true</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 以下属性统计 SQL 文件</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token key attr-name\">*.sql linguist-detectable</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">true</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 从统计信息中排除</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token key attr-name\">docs/formatter.rb linguist-documentation</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">false</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 将它们从统计信息中排除</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>special-vendored-path/* linguist-vendored</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 将所有 .rb 文件检测为 Java 文件</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token key attr-name\">*.rb linguist-language</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">Java</span></pre></td></tr></table></figure><h2 id=\"-15\"><a class=\"anchor\" href=\"#-15\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sI2dpdC0lRTYlOEElODAlRTUlQjclQTc=\"></span>Git 技巧</h2>\n<h3 id=\"-16\"><a class=\"anchor\" href=\"#-16\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFOSU4NyU4RCVFNSU5MSVCRCVFNSU5MCU4RCVFNSU4OCU4NiVFNiU5NCVBRg==\"></span>重命名分支</h3>\n<ul>\n<li>\n<p><strong>重命名</strong>为 <code>new</code></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> branch <span class=\"token parameter variable\">-m</span> <span class=\"token operator\">&lt;</span>new<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ <span class=\"token function\">git</span> branch <span class=\"token parameter variable\">-m</span> <span class=\"token operator\">&lt;</span>old<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>new<span class=\"token operator\">></span> <span class=\"token comment\">#重命名分支</span></pre></td></tr></table></figure></li>\n<li>\n<p><strong>推送</strong>并重置</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> push origin <span class=\"token parameter variable\">-u</span> <span class=\"token operator\">&lt;</span>new<span class=\"token operator\">></span></pre></td></tr></table></figure></li>\n<li>\n<p><strong>删除</strong>远程分支</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> push origin <span class=\"token parameter variable\">--delete</span> <span class=\"token operator\">&lt;</span>old<span class=\"token operator\">></span> <span class=\"token comment\">#方法 1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ <span class=\"token function\">git</span> push origin :oldBranchName <span class=\"token comment\">#方法 2</span></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"-17\"><a class=\"anchor\" href=\"#-17\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sI2xvZw==\"></span>Log</h3>\n<p>按内容搜索更改</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> log -S<span class=\"token string\">'&lt;a term in the source>'</span></pre></td></tr></table></figure><p>显示特定文件随时间的变化</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> log <span class=\"token parameter variable\">-p</span> <span class=\"token operator\">&lt;</span>file_name<span class=\"token operator\">></span></pre></td></tr></table></figure><p>打印出很酷的日志可视化</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> log <span class=\"token parameter variable\">--pretty</span><span class=\"token operator\">=</span>oneline <span class=\"token parameter variable\">--graph</span> <span class=\"token parameter variable\">--decorate</span> <span class=\"token parameter variable\">--all</span></pre></td></tr></table></figure><h3 id=\"-18\"><a class=\"anchor\" href=\"#-18\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNSU4OCU4NiVFNiU5NCVBRg==\"></span>分支</h3>\n<p>列出所有分支及其上游</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> branch <span class=\"token parameter variable\">-vv</span></pre></td></tr></table></figure><p>快速切换到上一个分支</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> checkout -</pre></td></tr></table></figure><p>只获取所有远程分支</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> branch <span class=\"token parameter variable\">-r</span></pre></td></tr></table></figure><p>从另一个分支签出单个文件</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> checkout <span class=\"token operator\">&lt;</span>branch<span class=\"token operator\">></span> -- <span class=\"token operator\">&lt;</span>file<span class=\"token operator\">></span></pre></td></tr></table></figure><p>删除本地存在远程不存在的分支</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> remote prune origin</pre></td></tr></table></figure><h3 id=\"-19\"><a class=\"anchor\" href=\"#-19\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sI2NvbW1pdA==\"></span>Commit</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> commit <span class=\"token parameter variable\">-v</span> <span class=\"token parameter variable\">--amend</span></pre></td></tr></table></figure><p>重写最后的提交信息</p>\n<h3 id=\"-20\"><a class=\"anchor\" href=\"#-20\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNSVCRiVCRCVFNyU5NSVBNSVFNiU5NiU4NyVFNCVCQiVCNiVFNyU5QSU4NCVFNiU5RCU4MyVFOSU5OSU5MCVFNSU4RiU5OCVFNSU4QyU5Ng==\"></span>忽略文件的权限变化</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> config core.fileMode <span class=\"token boolean\">false</span></pre></td></tr></table></figure><p>不再将文件的权限变化视作改动</p>\n<h3 id=\"-21\"><a class=\"anchor\" href=\"#-21\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sI2dpdC0lRTUlODglQUIlRTUlOTAlOEQ=\"></span>Git 别名</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> alias.co checkout</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ <span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> alias.br branch</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>$ <span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> alias.ci commit</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>$ <span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> alias.st status</pre></td></tr></table></figure><p>也可以看看：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vam9obnBvbGFjZWsvNjk2MDRhMWY2ODYxMTI5ZWYwODg=\">更多别名</span></p>\n<h3 id=\"-22\"><a class=\"anchor\" href=\"#-22\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFOCVBRSVCRSVFNyVCRCVBRSVFNSVBNCVBNyVFNSVCMCU4RiVFNSU4NiU5OSVFNiU5NSU4RiVFNiU4NCU5Rg==\"></span>设置大小写敏感</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 查看 git 的设置</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ <span class=\"token function\">git</span> config <span class=\"token parameter variable\">--get</span> core.ignorecase</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 设置大小写敏感</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>$ <span class=\"token function\">git</span> config core.ignorecase <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 远程有俩相同目录，通过这种方式清除掉，然后提交记录</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>$ <span class=\"token function\">git</span> <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-r</span> <span class=\"token parameter variable\">--cached</span> <span class=\"token operator\">&lt;</span>目录/文件<span class=\"token operator\">></span></pre></td></tr></table></figure><h3 id=\"-23\"><a class=\"anchor\" href=\"#-23\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNCVCRiVBRSVFNiU5NCVCOSVFOCVCRiU5QyVFNyVBOCU4Qi1jb21taXQtJUU4JUFFJUIwJUU1JUJEJTk1\"></span>修改远程 Commit 记录</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> rebase <span class=\"token parameter variable\">-i</span> HEAD~3</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 表示要修改当前版本的倒数第三次状态</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 将要更改的记录行首单词 pick 改为 edit</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>pick 96dc3f9 提交 commit 描述内容 <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>pick f1cce8a 提交 commit 描述内容 <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>pick <span class=\"token number\">6293516</span> 提交 commit 描述内容 <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># Rebase eeb03a4..6293516 onto eeb03a4 </span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#                     (3 commands)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># Commands:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># p, pick = 使用提交</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># r, reword = 使用提交，但编辑提交消息</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># e, edit = 使用提交，但停止修改</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># s, squash = 使用提交，但融合到先前的提交中</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># f, fixup = 像 squash，但丢弃此提交的日志消息</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># x, exec = 使用 shell 运行命令 (该行的其余部分)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># d, drop = 删除提交</span></pre></td></tr></table></figure><p>保存并退出，会弹出下面提示</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 您现在可以修改提交，使用</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#   git commit --amend</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 对更改感到满意后，运行</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># </span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#   git rebase --continue</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 1. 通过这条命令进入编辑更改 commit，保存退出</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>$ <span class=\"token function\">git</span> commit <span class=\"token parameter variable\">--amend</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 2. 保存退出确认修改，继续执行下面命令，</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>$ <span class=\"token function\">git</span> rebase <span class=\"token parameter variable\">--continue</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 如果修改多条记录反复执行上面两条命令直到完成所有修改</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 最后，确保没有人提交进行推送，最好不要加 -f 强制推送</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>$ <span class=\"token function\">git</span> push <span class=\"token parameter variable\">-f</span> origin master</pre></td></tr></table></figure><h3 id=\"-24\"><a class=\"anchor\" href=\"#-24\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNiU5MiVBNCVFOSU5NCU4MCVFOCVCRiU5QyVFNyVBOCU4QiVFOCVBRSVCMCVFNSVCRCU5NQ==\"></span>撤销远程记录</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 撤销一条记录   </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ <span class=\"token function\">git</span> reset <span class=\"token parameter variable\">--hard</span> HEAD~1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 强制同步到远程仓库  </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>$ <span class=\"token function\">git</span> push <span class=\"token parameter variable\">-f</span> origin HEAD:master</pre></td></tr></table></figure><h3 id=\"-25\"><a class=\"anchor\" href=\"#-25\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNiU5NCVCRSVFNSVCQyU4MyVFNiU5QyVBQyVFNSU5QyVCMCVFNCVCRiVBRSVFNiU5NCVCOSVFNSU4NiU4NSVFNSVBRSVCOQ==\"></span>放弃本地修改内容</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 如果有的修改以及加入暂存区的话</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ <span class=\"token function\">git</span> reset <span class=\"token parameter variable\">--hard</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 还原所有修改，不会删除新增的文件</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>$ <span class=\"token function\">git</span> checkout <span class=\"token builtin class-name\">.</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 下面命令会删除新增的文件</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>$ <span class=\"token function\">git</span> clean <span class=\"token parameter variable\">-xdf</span></pre></td></tr></table></figure><h3 id=\"-26\"><a class=\"anchor\" href=\"#-26\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFOCU4RSVCNyVFNSU4RiU5NiVFNiU5QyU4MCVFOCVCRiU5MSVFNCVCOCU4MCVFNiVBQyVBMSVFNiU4RiU5MCVFNCVCQSVBNCVFNyU5QSU4NC1oYXNo\"></span>获取最近一次提交的 Hash</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> rev-parse HEAD <span class=\"token comment\"># e10721cb8859b2c</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 获取短 hash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>$ <span class=\"token function\">git</span> rev-parse <span class=\"token parameter variable\">--short</span> HEAD <span class=\"token comment\"># e10721c</span></pre></td></tr></table></figure><h3 id=\"-27\"><a class=\"anchor\" href=\"#-27\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNSU4OCVBMCVFOSU5OSVBNCVFNSVCNyVCMiVFNyVCQiU4RiVFNSU5MCU4OCVFNSVCOSVCNiVFNSU4OCVCMC1tYXN0ZXItJUU3JTlBJTg0JUU1JTg4JTg2JUU2JTk0JUFG\"></span>删除已经合并到 master 的分支</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> branch <span class=\"token parameter variable\">--merged</span> master <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">-v</span> <span class=\"token string\">'^\\*\\|  master'</span> <span class=\"token operator\">|</span> <span class=\"token function\">xargs</span> <span class=\"token parameter variable\">-n</span> <span class=\"token number\">1</span> <span class=\"token function\">git</span> branch <span class=\"token parameter variable\">-d</span></pre></td></tr></table></figure><h3 id=\"-28\"><a class=\"anchor\" href=\"#-28\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNiU4QSU4QS1hLSVFNSU4OCU4NiVFNiU5NCVBRiVFNyU5QSU4NCVFNiU5RiU5MCVFNCVCOCU4MCVFNCVCOCVBQS1jb21taXQlRTYlOTQlQkUlRTUlODglQjAtYi0lRTUlODglODYlRTYlOTQlQUYlRTQlQjglOEE=\"></span>把 A 分支的某一个 commit，放到 B 分支上</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 切换到 B 分支</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ <span class=\"token function\">git</span> checkout <span class=\"token operator\">&lt;</span>B<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 将 A 分支 &lt;hash-id> 的内容 pick 到 B 分支</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>$ <span class=\"token function\">git</span> cherry-pick <span class=\"token operator\">&lt;</span>hash-id<span class=\"token operator\">></span></pre></td></tr></table></figure><h3 id=\"-29\"><a class=\"anchor\" href=\"#-29\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNSU5QiU5RSVFNSU4OCVCMCVFOCVCRiU5QyVFNyVBOCU4QiVFNCVCQiU5MyVFNSVCQSU5MyVFNyU5QSU4NCVFNyU4QSVCNiVFNiU4MCU4MQ==\"></span>回到远程仓库的状态</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> fetch <span class=\"token parameter variable\">--all</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">git</span> reset <span class=\"token parameter variable\">--hard</span> origin/master</pre></td></tr></table></figure><p>抛弃本地所有的修改，回到远程仓库的状态</p>\n<h3 id=\"-30\"><a class=\"anchor\" href=\"#-30\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFOSU4NyU4RCVFOCVBRSVCRSVFNyVBQyVBQyVFNCVCOCU4MCVFNCVCOCVBQS1jb21taXQ=\"></span>重设第一个 commit</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> update-ref <span class=\"token parameter variable\">-d</span> HEAD</pre></td></tr></table></figure><p>把所有的改动都重新放回工作区，并<strong>清空所有的 commit</strong>，这样就可以重新提交第一个  <code>commit</code>  了</p>\n<h3 id=\"-31\"><a class=\"anchor\" href=\"#-31\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNiU5RiVBNSVFNyU5QyU4QiVFNSU4NiVCMiVFNyVBQSU4MSVFNiU5NiU4NyVFNCVCQiVCNiVFNSU4OCU5NyVFOCVBMSVBOA==\"></span>查看冲突文件列表</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> <span class=\"token function\">diff</span> --name-only --diff-filter<span class=\"token operator\">=</span>U</pre></td></tr></table></figure><h3 id=\"-32\"><a class=\"anchor\" href=\"#-32\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNSVCMSU5NSVFNyVBNCVCQSVFNSVCNyVBNSVFNCVCRCU5QyVFNSU4QyVCQSVFNyU5QSU4NCVFNSU4NiVCMiVFNyVBQSU4MSVFNiU5NiU4NyVFNCVCQiVCNiVFNSU4OCU5NyVFOCVBMSVBOA==\"></span>展示工作区的冲突文件列表</h3>\n<p>输出工作区和暂存区的 different (不同)。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> <span class=\"token function\">diff</span></pre></td></tr></table></figure><p>还可以展示本地仓库中任意两个 commit 之间的文件变动：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> <span class=\"token function\">diff</span> <span class=\"token operator\">&lt;</span>commit-id<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>commit-id<span class=\"token operator\">></span></pre></td></tr></table></figure><h3 id=\"-33\"><a class=\"anchor\" href=\"#-33\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNSVCMSU5NSVFNyVBNCVCQSVFNiU5QSU4MiVFNSVBRCU5OCVFNSU4QyVCQSVFNSU5MiU4QyVFNiU5QyU4MCVFOCVCRiU5MSVFNyU4OSU4OCVFNiU5QyVBQyVFNyU5QSU4NCVFNCVCOCU4RCVFNSU5MCU4Qw==\"></span>展示暂存区和最近版本的不同</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> <span class=\"token function\">diff</span> <span class=\"token parameter variable\">--cached</span></pre></td></tr></table></figure><h3 id=\"-34\"><a class=\"anchor\" href=\"#-34\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNCVCOCVBRCVFNiU5NiU4NyVFNCVCOSVCMSVFNyVBMCU4MSVFNyU5QSU4NCVFOCVBNyVBMyVFNSU4NiVCMyVFNiU5NiVCOSVFNiVBMSU4OA==\"></span>中文乱码的解决方案</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> core.quotepath <span class=\"token boolean\">false</span></pre></td></tr></table></figure><h3 id=\"-35\"><a class=\"anchor\" href=\"#-35\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNSVCMSU5NSVFNyVBNCVCQSVFNiU5QSU4MiVFNSVBRCU5OCVFNSU4QyVCQSVFNSVCNyVBNSVFNCVCRCU5QyVFNSU4QyVCQSVFNSU5MiU4QyVFNiU5QyU4MCVFOCVCRiU5MSVFNyU4OSU4OCVFNiU5QyVBQyVFNyU5QSU4NCVFNCVCOCU4RCVFNSU5MCU4Qw==\"></span>展示暂存区、工作区和最近版本的不同</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> <span class=\"token function\">diff</span> HEAD</pre></td></tr></table></figure><p>输出工作区、暂存区 和本地最近的版本 (commit) 的 different (不同)。</p>\n<h3 id=\"-36\"><a class=\"anchor\" href=\"#-36\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNSU4OCVBMCVFOSU5OSVBNCVFNSVCNyVCMiVFNyVCQiU4RiVFNSU5MCU4OCVFNSVCOSVCNiVFNSU4OCVCMC1tYXN0ZXItJUU3JTlBJTg0JUU1JTg4JTg2JUU2JTk0JUFGLTE=\"></span>删除已经合并到 master 的分支</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> branch <span class=\"token parameter variable\">--merged</span> master <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">-v</span> <span class=\"token string\">'^\\*\\|  master'</span> <span class=\"token operator\">|</span> <span class=\"token function\">xargs</span> <span class=\"token parameter variable\">-n</span> <span class=\"token number\">1</span> <span class=\"token function\">git</span> branch <span class=\"token parameter variable\">-d</span></pre></td></tr></table></figure><h3 id=\"-37\"><a class=\"anchor\" href=\"#-37\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNSU4NSVCMyVFOCU4MSU5NCVFOCVCRiU5QyVFNyVBOCU4QiVFNSU4OCU4NiVFNiU5NCVBRg==\"></span>关联远程分支</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> branch <span class=\"token parameter variable\">-u</span> origin/mybranch</pre></td></tr></table></figure><p>或者在  <code>push</code>  时加上  <code>-u</code>  参数</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> push origin/mybranch <span class=\"token parameter variable\">-u</span></pre></td></tr></table></figure><p>关联之后， <code>git branch -vv</code>  就可以展示关联的远程分支名了，同时推送到远程仓库直接： <code>git push</code> ，不需要指定远程仓库</p>\n<h3 id=\"-38\"><a class=\"anchor\" href=\"#-38\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNiU5RiVBNSVFNyU5QyU4QiVFOCVCRiU5QyVFNyVBOCU4QiVFNSU4OCU4NiVFNiU5NCVBRiVFNSU5MiU4QyVFNiU5QyVBQyVFNSU5QyVCMCVFNSU4OCU4NiVFNiU5NCVBRiVFNyU5QSU4NCVFNSVBRiVCOSVFNSVCQSU5NCVFNSU4NSVCMyVFNyVCMyVCQg==\"></span>查看远程分支和本地分支的对应关系</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> remote show origin</pre></td></tr></table></figure><h3 id=\"-39\"><a class=\"anchor\" href=\"#-39\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNSVCMSU5NSVFNyVBNCVCQSVFNSVCRCU5MyVFNSU4OSU4RCVFNSU4OCU4NiVFNiU5NCVBRiVFNyU5QSU4NCVFNiU5QyU4MCVFOCVCRiU5MSVFNyU5QSU4NC10YWc=\"></span>展示当前分支的最近的 tag</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> describe <span class=\"token parameter variable\">--tags</span> <span class=\"token parameter variable\">--abbrev</span><span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr></table></figure><h3 id=\"-40\"><a class=\"anchor\" href=\"#-40\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNiU5RiVBNSVFNyU5QyU4QiVFNiU5RiU5MCVFNiVBRSVCNSVFNCVCQiVBMyVFNyVBMCU4MSVFNiU5OCVBRiVFOCVCMCU4MSVFNSU4NiU5OSVFNyU5QSU4NA==\"></span>查看某段代码是谁写的</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> blame <span class=\"token operator\">&lt;</span>file-name<span class=\"token operator\">></span></pre></td></tr></table></figure><p><code>blame</code>  的意思为 <code>责怪</code> ，你懂的。</p>\n<h3 id=\"-41\"><a class=\"anchor\" href=\"#-41\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNCVCRiVBRSVFNiU5NCVCOSVFNCVCRCU5QyVFOCU4MCU4NSVFNSU5MCU4RA==\"></span>修改作者名</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> commit <span class=\"token parameter variable\">--amend</span> <span class=\"token parameter variable\">--author</span><span class=\"token operator\">=</span><span class=\"token string\">'Author Name &lt;email@address.com>'</span></pre></td></tr></table></figure><h3 id=\"-42\"><a class=\"anchor\" href=\"#-42\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNCVCRiVBRSVFNiU5NCVCOSVFOCVCRiU5QyVFNyVBOCU4QiVFNCVCQiU5MyVFNSVCQSU5MyVFNyU5QSU4NC11cmw=\"></span>修改远程仓库的 url</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> remote set-url origin <span class=\"token operator\">&lt;</span>URL<span class=\"token operator\">></span></pre></td></tr></table></figure><h3 id=\"-43\"><a class=\"anchor\" href=\"#-43\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNSVBMiU5RSVFNSU4QSVBMCVFOCVCRiU5QyVFNyVBOCU4QiVFNCVCQiU5MyVFNSVCQSU5Mw==\"></span>增加远程仓库</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> remote <span class=\"token function\">add</span> origin <span class=\"token operator\">&lt;</span>remote-url<span class=\"token operator\">></span></pre></td></tr></table></figure><h3 id=\"-44\"><a class=\"anchor\" href=\"#-44\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNSU4OCU5NyVFNSU4NyVCQSVFNiU4OSU4MCVFNiU5QyU4OSVFOCVCRiU5QyVFNyVBOCU4QiVFNCVCQiU5MyVFNSVCQSU5Mw==\"></span>列出所有远程仓库</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> remote <span class=\"token parameter variable\">-v</span></pre></td></tr></table></figure><h3 id=\"-45\"><a class=\"anchor\" href=\"#-45\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNiU5RiVBNSVFNyU5QyU4QiVFNCVCOCVBNCVFNCVCOCVBQSVFNiU5OCU5RiVFNiU5QyU5RiVFNSU4NiU4NSVFNyU5QSU4NCVFNiU5NCVCOSVFNSU4QSVBOA==\"></span>查看两个星期内的改动</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> whatchanged <span class=\"token parameter variable\">--since</span><span class=\"token operator\">=</span><span class=\"token string\">'2 weeks ago'</span></pre></td></tr></table></figure><h3 id=\"-46\"><a class=\"anchor\" href=\"#-46\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNCVCQiU4RS1zdGFzaC0lRTQlQjglQUQlRTYlOEIlQkYlRTUlODclQkElRTYlOUYlOTAlRTQlQjglQUElRTYlOTYlODclRTQlQkIlQjYlRTclOUElODQlRTQlQkYlQUUlRTYlOTQlQjk=\"></span>从 stash 中拿出某个文件的修改</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> checkout <span class=\"token operator\">&lt;</span>stash@<span class=\"token punctuation\">&#123;</span>n<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span> -- <span class=\"token operator\">&lt;</span>file-path<span class=\"token operator\">></span></pre></td></tr></table></figure><h3 id=\"-47\"><a class=\"anchor\" href=\"#-47\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNSVCMSU5NSVFNyVBNCVCQSVFNiU4OSU4MCVFNiU5QyU4OS10cmFja2VkLSVFNyU5QSU4NCVFNiU5NiU4NyVFNCVCQiVCNg==\"></span>展示所有 tracked 的文件</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> ls-files <span class=\"token parameter variable\">-t</span></pre></td></tr></table></figure><h3 id=\"-48\"><a class=\"anchor\" href=\"#-48\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNSVCMSU5NSVFNyVBNCVCQSVFNiU4OSU4MCVFNiU5QyU4OS11bnRyYWNrZWQtJUU3JTlBJTg0JUU2JTk2JTg3JUU0JUJCJUI2\"></span>展示所有 untracked 的文件</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> ls-files <span class=\"token parameter variable\">--others</span></pre></td></tr></table></figure><h3 id=\"-49\"><a class=\"anchor\" href=\"#-49\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNSVCMSU5NSVFNyVBNCVCQSVFNiU4OSU4MCVFNiU5QyU4OSVFNSVCRiVCRCVFNyU5NSVBNSVFNyU5QSU4NCVFNiU5NiU4NyVFNCVCQiVCNg==\"></span>展示所有忽略的文件</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> ls-files <span class=\"token parameter variable\">--others</span> <span class=\"token parameter variable\">-i</span> --exclude-standard</pre></td></tr></table></figure><h3 id=\"-50\"><a class=\"anchor\" href=\"#-50\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNiU4QSU4QSVFNiU5RiU5MCVFNCVCOCU4MCVFNCVCOCVBQSVFNSU4OCU4NiVFNiU5NCVBRiVFNSVBRiVCQyVFNSU4NyVCQSVFNiU4OCU5MCVFNCVCOCU4MCVFNCVCOCVBQSVFNiU5NiU4NyVFNCVCQiVCNg==\"></span>把某一个分支导出成一个文件</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> bundle create <span class=\"token operator\">&lt;</span>file<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>branch-name<span class=\"token operator\">></span></pre></td></tr></table></figure><h3 id=\"-51\"><a class=\"anchor\" href=\"#-51\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNCVCQiU4RSVFNSU4QyU4NSVFNCVCOCVBRCVFNSVBRiVCQyVFNSU4NSVBNSVFNSU4OCU4NiVFNiU5NCVBRg==\"></span>从包中导入分支</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> clone repo.bundle <span class=\"token operator\">&lt;</span>repo-dir<span class=\"token operator\">></span> <span class=\"token parameter variable\">-b</span> <span class=\"token operator\">&lt;</span>branch-name<span class=\"token operator\">></span></pre></td></tr></table></figure><p>新建一个分支，分支内容就是上面  <code>git bundle create</code>  命令导出的内容</p>\n<h3 id=\"-52\"><a class=\"anchor\" href=\"#-52\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNiU4OSVBNyVFOCVBMSU4Qy1yZWJhc2UtJUU0JUI5JThCJUU1JTg5JThEJUU4JTg3JUFBJUU1JThBJUE4LXN0YXNo\"></span>执行 rebase 之前自动 stash</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> rebase <span class=\"token parameter variable\">--autostash</span></pre></td></tr></table></figure><h3 id=\"-53\"><a class=\"anchor\" href=\"#-53\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNCVCQiU4RSVFOCVCRiU5QyVFNyVBOCU4QiVFNCVCQiU5MyVFNSVCQSU5MyVFNiVBMCVCOSVFNiU4RCVBRS1pZCVFNiU4QiU4OSVFNCVCOCU4QiVFNiU5RiU5MCVFNCVCOCU4MCVFNyU4QSVCNiVFNiU4MCU4MSVFNSU4OCVCMCVFNiU5QyVBQyVFNSU5QyVCMCVFNSU4OCU4NiVFNiU5NCVBRg==\"></span>从远程仓库根据 ID，拉下某一状态，到本地分支</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> fetch origin pull/<span class=\"token operator\">&lt;</span>id<span class=\"token operator\">></span>/head:<span class=\"token operator\">&lt;</span>branch-name<span class=\"token operator\">></span></pre></td></tr></table></figure><h3 id=\"-54\"><a class=\"anchor\" href=\"#-54\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFOCVBRiVBNiVFNyVCQiU4NiVFNSVCMSU5NSVFNyVBNCVCQSVFNCVCOCU4MCVFOCVBMSU4QyVFNCVCOCVBRCVFNyU5QSU4NCVFNCVCRiVBRSVFNiU5NCVCOQ==\"></span>详细展示一行中的修改</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> <span class=\"token function\">diff</span> --word-diff</pre></td></tr></table></figure><h3 id=\"-55\"><a class=\"anchor\" href=\"#-55\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNiVCOCU4NSVFOSU5OSVBNC1naXRpZ25vcmUtJUU2JTk2JTg3JUU0JUJCJUI2JUU0JUI4JUFEJUU4JUFFJUIwJUU1JUJEJTk1JUU3JTlBJTg0JUU2JTk2JTg3JUU0JUJCJUI2\"></span>清除 gitignore 文件中记录的文件</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> clean <span class=\"token parameter variable\">-X</span> <span class=\"token parameter variable\">-f</span></pre></td></tr></table></figure><h3 id=\"-56\"><a class=\"anchor\" href=\"#-56\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNSVCMSU5NSVFNyVBNCVCQSVFNSVCRiVCRCVFNyU5NSVBNSVFNyU5QSU4NCVFNiU5NiU4NyVFNCVCQiVCNg==\"></span>展示忽略的文件</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> status <span class=\"token parameter variable\">--ignored</span></pre></td></tr></table></figure><h3 id=\"-57\"><a class=\"anchor\" href=\"#-57\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sI2NvbW1pdC0lRTUlOEUlODYlRTUlOEYlQjIlRTQlQjglQUQlRTYlOTglQkUlRTclQTQlQkEtYnJhbmNoMS0lRTYlOUMlODklRTclOUElODQlRTQlQkQlODYlRTYlOTglQUYtYnJhbmNoMi0lRTYlQjIlQTElRTYlOUMlODktY29tbWl0\"></span>commit 历史中显示 Branch1 有的但是 Branch2 没有 commit</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> log Branch1 ^Branch2</pre></td></tr></table></figure><h3 id=\"-58\"><a class=\"anchor\" href=\"#-58\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNSU5QyVBOC1jb21taXQtbG9nLSVFNCVCOCVBRCVFNiU5OCVCRSVFNyVBNCVCQS1ncGctJUU3JUFEJUJFJUU1JTkwJThE\"></span>在 commit log 中显示 GPG 签名</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> log --show-signature</pre></td></tr></table></figure><h3 id=\"-59\"><a class=\"anchor\" href=\"#-59\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNiU5NiVCMCVFNSVCQiVCQSVFNSVCOSVCNiVFNSU4OCU4NyVFNiU4RCVBMiVFNSU4OCVCMCVFNiU5NiVCMCVFNSU4OCU4NiVFNiU5NCVBRiVFNCVCOCU4QSVFNSU5MCU4QyVFNiU5NyVCNiVFOCVCRiU5OSVFNCVCOCVBQSVFNSU4OCU4NiVFNiU5NCVBRiVFNiVCMiVBMSVFNiU5QyU4OSVFNCVCQiVCQiVFNCVCRCU5NS1jb21taXQ=\"></span>新建并切换到新分支上，同时这个分支没有任何 commit</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> checkout <span class=\"token parameter variable\">--orphan</span> <span class=\"token operator\">&lt;</span>branch-name<span class=\"token operator\">></span></pre></td></tr></table></figure><p>相当于保存修改，但是重写 commit 历史</p>\n<h3 id=\"-60\"><a class=\"anchor\" href=\"#-60\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNSVCMSU5NSVFNyVBNCVCQSVFNCVCQiVCQiVFNiU4NCU4RiVFNSU4OCU4NiVFNiU5NCVBRiVFNiU5RiU5MCVFNCVCOCU4MCVFNiU5NiU4NyVFNCVCQiVCNiVFNyU5QSU4NCVFNSU4NiU4NSVFNSVBRSVCOQ==\"></span>展示任意分支某一文件的内容</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> show <span class=\"token operator\">&lt;</span>branch-name<span class=\"token operator\">></span>:<span class=\"token operator\">&lt;</span>file-name<span class=\"token operator\">></span></pre></td></tr></table></figure><h3 id=\"-61\"><a class=\"anchor\" href=\"#-61\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFOSU4NSU4RCVFNyVCRCVBRS1odHRwLSVFNSU5MiU4Qy1zb2Nrcy0lRTQlQkIlQTMlRTclOTAlODY=\"></span>配置 http 和 socks 代理</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 查看代理</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ <span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> http.proxy</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>$ <span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> https.proxy</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>$ <span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> socks.proxy</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 设置代理</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 适用于 privoxy 将 socks 协议转为 http 协议的 http 端口</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>$ <span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> http.proxy http://127.0.0.1:1080</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>$ <span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> https.proxy http://127.0.0.1:1080</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>$ <span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> socks.proxy <span class=\"token number\">127.0</span>.0.1:1080</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 取消代理</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>$ <span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> <span class=\"token parameter variable\">--unset</span> http.proxy</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>$ <span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> <span class=\"token parameter variable\">--unset</span> https.proxy</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>$ <span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> <span class=\"token parameter variable\">--unset</span> socks.proxy</pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># 只对 github.com 设置代理</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>$ <span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> http.https://github.com.proxy socks5://127.0.0.1:1080</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>$ <span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> https.https://github.com.proxy socks5://127.0.0.1:1080</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># 取消 github.com 代理</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>$ <span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> <span class=\"token parameter variable\">--unset</span> http.https://github.com.proxy</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>$ <span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> <span class=\"token parameter variable\">--unset</span> https.https://github.com.proxy</pre></td></tr></table></figure><h3 id=\"-62\"><a class=\"anchor\" href=\"#-62\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sI2Nsb25lLSVFNiU5QyU4MCVFNiU5NiVCMCVFNCVCOCU4MCVFNiVBQyVBMSVFNiU4RiU5MCVFNCVCQSVBNA==\"></span>clone 最新一次提交</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> clone <span class=\"token parameter variable\">--depth</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> https://github.com/user/repo.git</pre></td></tr></table></figure><p>只会  <code>clone</code>  最近一次提交，将减少  <code>clone</code>  时间</p>\n<h3 id=\"-63\"><a class=\"anchor\" href=\"#-63\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNSVCRiVCRCVFNyU5NSVBNSVFNiU5RiU5MCVFNCVCOCVBQSVFNiU5NiU4NyVFNCVCQiVCNiVFNyU5QSU4NCVFNiU5NCVCOSVFNSU4QSVBOA==\"></span>忽略某个文件的改动</h3>\n<p>关闭 track 指定文件的改动，也就是 Git 将不会在记录这个文件的改动</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> update-index --assume-unchanged path/to/file</pre></td></tr></table></figure><p>恢复 track 指定文件的改动</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> update-index --no-assume-unchanged path/to/file</pre></td></tr></table></figure><h3 id=\"-64\"><a class=\"anchor\" href=\"#-64\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNCVCQiVBNSVFNiU5QyU4MCVFNSU5MCU4RSVFNiU4RiU5MCVFNCVCQSVBNCVFNyU5QSU4NCVFOSVBMSVCQSVFNSVCQSU4RiVFNSU4OCU5NyVFNSU4NyVCQSVFNiU4OSU4MCVFNiU5QyU4OS1naXQtJUU1JTg4JTg2JUU2JTk0JUFG\"></span>以最后提交的顺序列出所有 Git 分支</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> for-each-ref <span class=\"token parameter variable\">--sort</span><span class=\"token operator\">=</span>-committerdate <span class=\"token parameter variable\">--format</span><span class=\"token operator\">=</span><span class=\"token string\">'%(refname:short)'</span> refs/heads</pre></td></tr></table></figure><p>最新的放在最上面</p>\n<h3 id=\"-65\"><a class=\"anchor\" href=\"#-65\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNSU5QyVBOC1jb21taXQtbG9nLSVFNCVCOCVBRCVFNiU5RiVBNSVFNiU4OSVCRSVFNyU5QiVCOCVFNSU4NSVCMyVFNSU4NiU4NSVFNSVBRSVCOQ==\"></span>在 commit log 中查找相关内容</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> log <span class=\"token parameter variable\">--all</span> <span class=\"token parameter variable\">--grep</span><span class=\"token operator\">=</span><span class=\"token string\">'&lt;given-text>'</span></pre></td></tr></table></figure><p>通过 grep 查找，given-text: 所需要查找的字段</p>\n<h3 id=\"-66\"><a class=\"anchor\" href=\"#-66\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNiU4QSU4QSVFNiU5QSU4MiVFNSVBRCU5OCVFNSU4QyVCQSVFNyU5QSU4NCVFNiU4QyU4NyVFNSVBRSU5QS1maWxlLSVFNiU5NCVCRSVFNSU4OCVCMCVFNSVCNyVBNSVFNCVCRCU5QyVFNSU4QyVCQSVFNCVCOCVBRA==\"></span>把暂存区的指定 file 放到工作区中</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> reset <span class=\"token operator\">&lt;</span>file-name<span class=\"token operator\">></span></pre></td></tr></table></figure><p>不添加参数，默认是  <code>-mixed</code></p>\n<h3 id=\"-67\"><a class=\"anchor\" href=\"#-67\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFOSU4NSU4RCVFNyVCRCVBRS1zc2gtJUU1JThEJThGJUU4JUFFJUFFJUU0JUJCJUEzJUU3JTkwJTg2\"></span>配置 SSH 协议代理</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 对于使用 git@ 协议的，可以配置 socks5 代理</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># macOS 系统编辑～/.ssh/config 文件，添加这几行，设置 github 代理</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Host github.com</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  ProxyCommand <span class=\"token function\">nc</span> <span class=\"token parameter variable\">-X</span> <span class=\"token number\">5</span> <span class=\"token parameter variable\">-x</span> <span class=\"token number\">127.0</span>.0.1:1080 %h %p</pre></td></tr></table></figure><h2 id=\"-68\"><a class=\"anchor\" href=\"#-68\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sI2dpdC0lRTQlQkIlQTMlRTclQTAlODElRTclQkIlOUYlRTglQUUlQTE=\"></span>git 代码统计</h2>\n<h3 id=\"-69\"><a class=\"anchor\" href=\"#-69\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNiU5RiVBNSVFNyU5QyU4Qi1naXQtJUU0JUI4JThBJUU3JTlBJTg0JUU0JUI4JUFBJUU0JUJBJUJBJUU0JUJCJUEzJUU3JUEwJTgxJUU5JTg3JThG\"></span>查看 git 上的个人代码量</h3>\n<ul>\n<li><code>username</code>  需要改成自己的</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> log <span class=\"token parameter variable\">--author</span><span class=\"token operator\">=</span><span class=\"token string\">\"username\"</span> <span class=\"token parameter variable\">--pretty</span><span class=\"token operator\">=</span>tformat: <span class=\"token parameter variable\">--numstat</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token string\">'&#123; add += $1; subs += $2; loc += $1 - $2 &#125; END &#123; printf \"added lines: %s, removed lines: %s, total lines: %s\\n\", add, subs, loc &#125;'</span> -</pre></td></tr></table></figure><h3 id=\"-70\"><a class=\"anchor\" href=\"#-70\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNyVCQiU5RiVFOCVBRSVBMSVFNiVBRiU4RiVFNCVCOCVBQSVFNCVCQSVCQSVFNSVBMiU5RSVFNSU4OCVBMCVFOCVBMSU4QyVFNiU5NSVCMA==\"></span>统计每个人增删行数</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> log <span class=\"token parameter variable\">--format</span><span class=\"token operator\">=</span><span class=\"token string\">'%aN'</span> <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> <span class=\"token parameter variable\">-u</span> <span class=\"token operator\">|</span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">while</span> <span class=\"token builtin class-name\">read</span> name<span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> <span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-en</span> <span class=\"token string\">\"<span class=\"token variable\">$name</span><span class=\"token entity\" title=\"\\t\">\\t</span>\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token function\">git</span> log <span class=\"token parameter variable\">--author</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$name</span>\"</span> <span class=\"token parameter variable\">--pretty</span><span class=\"token operator\">=</span>tformat: <span class=\"token parameter variable\">--numstat</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token string\">'&#123; add += $1; subs += $2; loc += $1 - $2 &#125; END &#123; printf \"added lines: %s, removed lines: %s, total lines: %s\\n\", add, subs, loc &#125;'</span> -<span class=\"token punctuation\">;</span> <span class=\"token keyword\">done</span></pre></td></tr></table></figure><h3 id=\"-71\"><a class=\"anchor\" href=\"#-71\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNiU5RiVBNSVFNyU5QyU4QiVFNCVCQiU5MyVFNSVCQSU5MyVFNiU4RiU5MCVFNCVCQSVBNCVFOCU4MCU4NSVFNiU4RSU5MiVFNSU5MCU4RA==\"></span>查看仓库提交者排名</h3>\n<p>这里是排名前十，也可以更改排名</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> log <span class=\"token parameter variable\">--pretty</span><span class=\"token operator\">=</span><span class=\"token string\">'%aN'</span> <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> <span class=\"token operator\">|</span> <span class=\"token function\">uniq</span> <span class=\"token parameter variable\">-c</span> <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> <span class=\"token parameter variable\">-k1</span> <span class=\"token parameter variable\">-n</span> <span class=\"token parameter variable\">-r</span> <span class=\"token operator\">|</span> <span class=\"token function\">head</span> <span class=\"token parameter variable\">-n</span> <span class=\"token number\">10</span></pre></td></tr></table></figure><h3 id=\"-72\"><a class=\"anchor\" href=\"#-72\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNiU4RiU5MCVFNCVCQSVBNCVFNiU5NSVCMCVFNyVCQiU5RiVFOCVBRSVBMQ==\"></span>提交数统计</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> log <span class=\"token parameter variable\">--oneline</span> <span class=\"token operator\">|</span> <span class=\"token function\">wc</span> <span class=\"token parameter variable\">-l</span></pre></td></tr></table></figure><h2 id=\"-73\"><a class=\"anchor\" href=\"#-73\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sI2NvbnZlbnRpb25hbC1jb21tbWl0cw==\"></span>Conventional Commmits</h2>\n<h3 id=\"-74\"><a class=\"anchor\" href=\"#-74\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNiVBMCVCQyVFNSVCQyU4Rg==\"></span>格式</h3>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&lt;type>(&lt;scope>): &lt;short summary></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  │       │             │</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  │       │             └─⫸ 紧凑简短的描述，无需大写，也不需要用句号结尾</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  │       │</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  │       └─⫸ Commit 范围: animations|bazel|benchpress|common|compiler|compiler-cli|core|</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  │                          elements|forms|http|language-service|localize|platform-browser|</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  │                          platform-browser-dynamic|platform-server|router|service-worker|</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  │                          upgrade|zone.js|packaging|changelog|docs-infra|migrations|ngcc|ve|</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  │                          devtools....</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  │</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  └─⫸ Commit 类型: build|ci|doc|docs|feat|fix|perf|refactor|test</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                    website|chore|style|type|revert</pre></td></tr></table></figure><h3 id=\"-75\"><a class=\"anchor\" href=\"#-75\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNSVCOCVCOCVFNyU5NCVBOA==\"></span>常用</h3>\n<p><code>feat:</code></p>\n<p>新特性</p>\n<p><code>fix(scope):</code></p>\n<p>修复 scope 中的 Bug</p>\n<p><code>feat!:</code>  /  <code>feat(scope)!:</code></p>\n<p>breaking change / 重构 API</p>\n<p><code>chore(deps):</code></p>\n<p>更新依赖</p>\n<h3 id=\"-76\"><a class=\"anchor\" href=\"#-76\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sI2NvbW1pdC0lRTclQjElQkIlRTUlOUUlOEI=\"></span>Commit 类型</h3>\n<p><code>build:</code></p>\n<p>变更影响的是<strong>构建系统</strong>或者<strong>外部依赖</strong> (如: gulp, npm)</p>\n<p><code>ci:</code></p>\n<p>修改了 CI 配置文件或脚本 (如: Github Action, Travis)</p>\n<p><code>chore:</code></p>\n<p><strong>【重要】</strong> 变更不影响源代码或测试（如更新了辅助工具、库等)</p>\n<p><code>docs:</code></p>\n<p>只修改了文档</p>\n<p><code>feat:</code></p>\n<p><strong>【重要】</strong> 一个新特性</p>\n<p><code>fix:</code></p>\n<p><strong>【重要】</strong> 修复了一个 Bug</p>\n<p><code>perf:</code></p>\n<p>增强性能的代码变更</p>\n<p><code>refactor:</code></p>\n<p>并非修复 Bug 或添加新特性的代码变更</p>\n<p><code>revert:</code></p>\n<p>回退代码</p>\n<p><code>style:</code></p>\n<p>变更不影响一些有意义的代码 (如：删除空格、格式化代码、添加分号等)</p>\n<p><code>test:</code></p>\n<p>添加测试代码或修正已有的测试</p>\n<h2 id=\"-77\"><a class=\"anchor\" href=\"#-77\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2dpdC5odG1sIyVFNSU4RiVBNiVFOCVBNyU4MQ==\"></span>另见</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dpdC10aXBzL3RpcHM=\">最常用的 git 提示和技巧</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY29udmVudGlvbmFsY29tbWl0cy5vcmcvemgtaGFucy92MS4wLjAv\">Conventional Commits 官方网站</span> <em>(<span class=\"exturl\" data-url=\"aHR0cDovL2NvbnZlbnRpb25hbGNvbW1pdHMub3Jn\">conventionalcommits.org</span>)</em></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vWmVrZmFkL2Y1MWNiMDZhYzc2ZTI0NTdmMTFjODBlZDcwNWM5NWEz\">Conventional Commits Cheatsheet</span> <em>(<span class=\"exturl\" data-url=\"aHR0cDovL2dpc3QuZ2l0aHViLmNvbQ==\">gist.github.com</span>)</em></li>\n</ul>\n<p>© 2022 Kenny Wang.</p>\n",
            "tags": [
                "编程语言"
            ]
        },
        {
            "id": "http://红叶.top/2023/05/23/memo-list/quick-reference/C++%20%E5%A4%87%E5%BF%98%E6%B8%85%E5%8D%95/",
            "url": "http://红叶.top/2023/05/23/memo-list/quick-reference/C++%20%E5%A4%87%E5%BF%98%E6%B8%85%E5%8D%95/",
            "title": "C++ 备忘清单",
            "date_published": "2023-05-23T07:49:38.082Z",
            "content_html": "<p>提供基本语法和方法的 <span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tLw==\">C++</span> 快速参考备忘单</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFNSU4NSVBNSVFOSU5NyVBOA==\"></span>入门</h2>\n<h3 id=\"-2\"><a class=\"anchor\" href=\"#-2\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sI2hlbGxvY3Bw\"></span>hello.cpp</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Hello Quick Reference\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>编译运行</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ g++ hello.cpp <span class=\"token parameter variable\">-o</span> hello</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ ./hello</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Hello Quick Reference</pre></td></tr></table></figure><h3 id=\"-3\"><a class=\"anchor\" href=\"#-3\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFNSU4RiU5OCVFOSU4NyU4Rg==\"></span>变量</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> number <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 整数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">float</span> f <span class=\"token operator\">=</span> <span class=\"token number\">0.95</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 浮点数</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">double</span> PI <span class=\"token operator\">=</span> <span class=\"token number\">3.14159</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 浮点数</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">char</span> yes <span class=\"token operator\">=</span> <span class=\"token char\">'Y'</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 特点</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>string s <span class=\"token operator\">=</span> <span class=\"token string\">\"ME\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 字符串（文本）</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">bool</span> isRight <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 布尔值</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 常量</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> RATE <span class=\"token operator\">=</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><hr />\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> age <span class=\"token punctuation\">&#123;</span><span class=\"token number\">25</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 自 C++11</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> age<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 打印 25</span></pre></td></tr></table></figure><h3 id=\"-4\"><a class=\"anchor\" href=\"#-4\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFNSU4RSU5RiVFNSVBNyU4QiVFNiU5NSVCMCVFNiU4RCVBRSVFNyVCMSVCQiVFNSU5RSU4Qg==\"></span>原始数据类型</h3>\n<p>数据类型</p>\n<p>大小</p>\n<p>范围</p>\n<p><code>int</code></p>\n<p>4 bytes</p>\n<p>-231 到 231-1</p>\n<p><code>float</code></p>\n<p>4 bytes</p>\n<p><em>N/A</em></p>\n<p><code>double</code></p>\n<p>8 bytes</p>\n<p><em>N/A</em></p>\n<p><code>char</code></p>\n<p>1 byte</p>\n<p>-128 到 127</p>\n<p><code>bool</code></p>\n<p>1 byte</p>\n<p><code>true</code>  /  <code>false</code></p>\n<p><code>void</code></p>\n<p><em>N/A</em></p>\n<p><em>N/A</em></p>\n<p><code>wchar_t</code></p>\n<p>2 到 4 bytes</p>\n<p>1 个宽字符</p>\n<h3 id=\"-5\"><a class=\"anchor\" href=\"#-5\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFNyU5NCVBOCVFNiU4OCVCNyVFOCVCRSU5MyVFNSU4NSVBNQ==\"></span>用户输入</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> num<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Type a number: \"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>cin <span class=\"token operator\">>></span> num<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"You entered \"</span> <span class=\"token operator\">&lt;&lt;</span> num<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"-6\"><a class=\"anchor\" href=\"#-6\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFNCVCQSVBNCVFNiU4RCVBMg==\"></span>交换</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 输出: a=10, b=5</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"a=\"</span> <span class=\"token operator\">&lt;&lt;</span> a <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", b=\"</span> <span class=\"token operator\">&lt;&lt;</span> b<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"-7\"><a class=\"anchor\" href=\"#-7\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFNiVCMyVBOCVFOSU4NyU4QQ==\"></span>注释</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// C++ 中的单行注释</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/* 这是一个多行注释</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    在 C++ 中 */</span></pre></td></tr></table></figure><h3 id=\"-8\"><a class=\"anchor\" href=\"#-8\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sI2lmLSVFOCVBRiVBRCVFNSU4RiVBNQ==\"></span>If 语句</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">==</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// do something</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>查看: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sI2MtJUU2JTlEJUExJUU0JUJCJUI2\">条件</span></p>\n<h3 id=\"-9\"><a class=\"anchor\" href=\"#-9\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFNSVCRSVBQSVFNyU4RSVBRg==\"></span>循环</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> i <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>查看: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sI2MtJUU1JUJFJUFBJUU3JThFJUFG\">循环 Loops</span></p>\n<h3 id=\"-10\"><a class=\"anchor\" href=\"#-10\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFNSU4NyVCRCVFNiU5NSVCMA==\"></span>函数</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 声明</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>    <span class=\"token comment\">// 主函数</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 执行函数</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 定义</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Hello Quick Reference!\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>查看: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sI2MtJUU1JTg3JUJEJUU2JTk1JUIw\">函数 Functions</span></p>\n<h3 id=\"-11\"><a class=\"anchor\" href=\"#-11\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFNSVCQyU5NSVFNyU5NCVBOA==\"></span>引用</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> ri <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span> <span class=\"token comment\">//ri 是对 i 的引用</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>ri <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//i 现在改为 2</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"i=\"</span> <span class=\"token operator\">&lt;&lt;</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>i <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//i 现在改为 3</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ri=\"</span> <span class=\"token operator\">&lt;&lt;</span> ri<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>ri</code>  和  <code>i</code>  指的是相同的内存位置</p>\n<h3 id=\"-12\"><a class=\"anchor\" href=\"#-12\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFNSU5MSVCRCVFNSU5MCU4RCVFNyVBOSVCQSVFOSU5NyVCNA==\"></span>命名空间</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">namespace</span> ns1 <span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">int</span> <span class=\"token function\">val</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">return</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> ns1<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">val</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><hr />\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">namespace</span> ns1 <span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">int</span> <span class=\"token function\">val</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">return</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> ns1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">val</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>名称空间允许名称下的全局标识符</p>\n<h2 id=\"-13\"><a class=\"anchor\" href=\"#-13\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sI2MtJUU2JTk1JUIwJUU3JUJCJTg0\"></span>C++ 数组</h2>\n<h3 id=\"-14\"><a class=\"anchor\" href=\"#-14\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFNSVBRSU5QSVFNCVCOSU4OQ==\"></span>定义</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>array<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token operator\">></span> marks<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 定义</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>marks<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">92</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>marks<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">97</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>marks<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">98</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 定义和初始化</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>array<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">92</span><span class=\"token punctuation\">,</span> <span class=\"token number\">97</span><span class=\"token punctuation\">,</span> <span class=\"token number\">98</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 有空成员</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>array<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token operator\">></span> marks <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">92</span><span class=\"token punctuation\">,</span> <span class=\"token number\">97</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> marks<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 输出: 0</span></pre></td></tr></table></figure><h3 id=\"-15\"><a class=\"anchor\" href=\"#-15\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFNiU5MyU4RCVFNiU4RSVBNw==\"></span>操控</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>┌─────┬─────┬─────┬─────┬─────┬─────┐</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">|</span> <span class=\"token number\">92</span>  <span class=\"token operator\">|</span> <span class=\"token number\">97</span>  <span class=\"token operator\">|</span> <span class=\"token number\">98</span>  <span class=\"token operator\">|</span> <span class=\"token number\">99</span>  <span class=\"token operator\">|</span> <span class=\"token number\">98</span>  <span class=\"token operator\">|</span> <span class=\"token number\">94</span>  <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>└─────┴─────┴─────┴─────┴─────┴─────┘</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token number\">0</span>     <span class=\"token number\">1</span>     <span class=\"token number\">2</span>     <span class=\"token number\">3</span>     <span class=\"token number\">4</span>     <span class=\"token number\">5</span></pre></td></tr></table></figure><hr />\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>array<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token operator\">></span> marks <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token number\">92</span><span class=\"token punctuation\">,</span> <span class=\"token number\">97</span><span class=\"token punctuation\">,</span> <span class=\"token number\">98</span><span class=\"token punctuation\">,</span> <span class=\"token number\">99</span><span class=\"token punctuation\">,</span> <span class=\"token number\">98</span><span class=\"token punctuation\">,</span> <span class=\"token number\">94</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 打印第一个元素</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> marks<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 将第 2 个元素更改为 99</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>marks<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">99</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 从用户那里获取输入</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>cin <span class=\"token operator\">>></span> marks<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"-16\"><a class=\"anchor\" href=\"#-16\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFNSVCMSU5NSVFNyVBNCVCQQ==\"></span>展示</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">char</span> ref<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token char\">'R'</span><span class=\"token punctuation\">,</span> <span class=\"token char\">'e'</span><span class=\"token punctuation\">,</span> <span class=\"token char\">'f'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 基于范围的 for 循环</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">&amp;</span>n <span class=\"token operator\">:</span> ref<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 传统的 for 循环</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ref<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> ref<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"-17\"><a class=\"anchor\" href=\"#-17\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFNSVBNCU5QSVFNyVCQiVCNA==\"></span>多维</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>j0   j1   j2   j3   j4   j5</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   ┌────┬────┬────┬────┬────┬────┐</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>i0 <span class=\"token operator\">|</span> <span class=\"token number\">1</span>  <span class=\"token operator\">|</span> <span class=\"token number\">2</span>  <span class=\"token operator\">|</span> <span class=\"token number\">3</span>  <span class=\"token operator\">|</span> <span class=\"token number\">4</span>  <span class=\"token operator\">|</span> <span class=\"token number\">5</span>  <span class=\"token operator\">|</span> <span class=\"token number\">6</span>  <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   ├────┼────┼────┼────┼────┼────┤</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>i1 <span class=\"token operator\">|</span> <span class=\"token number\">6</span>  <span class=\"token operator\">|</span> <span class=\"token number\">5</span>  <span class=\"token operator\">|</span> <span class=\"token number\">4</span>  <span class=\"token operator\">|</span> <span class=\"token number\">3</span>  <span class=\"token operator\">|</span> <span class=\"token number\">2</span>  <span class=\"token operator\">|</span> <span class=\"token number\">1</span>  <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   └────┴────┴────┴────┴────┴────┘</pre></td></tr></table></figure><hr />\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> x<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 输出: 1 2 3 4 5 6 6 5 4 3 2 1</span></pre></td></tr></table></figure><h2 id=\"-18\"><a class=\"anchor\" href=\"#-18\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sI2MtJUU2JTlEJUExJUU0JUJCJUI2\"></span>C++ 条件</h2>\n<h3 id=\"-19\"><a class=\"anchor\" href=\"#-19\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sI2lmLWNsYXVzZQ==\"></span>If Clause</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">==</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// do something</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><hr />\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> number <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>number <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"even\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"odd\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 输出: even</span></pre></td></tr></table></figure><h3 id=\"-20\"><a class=\"anchor\" href=\"#-20\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sI2Vsc2UtaWYtJUU4JUFGJUFEJUU1JThGJUE1\"></span>Else if 语句</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> score <span class=\"token operator\">=</span> <span class=\"token number\">99</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>score <span class=\"token operator\">==</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Superb\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>score <span class=\"token operator\">>=</span> <span class=\"token number\">90</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Excellent\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>score <span class=\"token operator\">>=</span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Very Good\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>score <span class=\"token operator\">>=</span> <span class=\"token number\">70</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Good\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>score <span class=\"token operator\">>=</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"OK\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"What?\"</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"-21\"><a class=\"anchor\" href=\"#-21\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFOCVCRiU5MCVFNyVBRSU5NyVFNyVBQyVBNg==\"></span>运算符</h3>\n<h4 id=\"-22\"><a class=\"anchor\" href=\"#-22\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFNSU4NSVCMyVFNyVCMyVCQiVFOCVCRiU5MCVFNyVBRSU5NyVFNyVBQyVBNg==\"></span>关系运算符</h4>\n<p><code>a == b</code></p>\n<p>a 等于 b</p>\n<p><code>a != b</code></p>\n<p>a 不等于 b</p>\n<p><code>a &lt; b</code></p>\n<p>a 小于 b</p>\n<p><code>a &gt; b</code></p>\n<p>a 大于 b</p>\n<p><code>a &lt;= b</code></p>\n<p>a 小于或等于 b</p>\n<p><code>a &gt;= b</code></p>\n<p>a 大于或等于 b</p>\n<h4 id=\"-23\"><a class=\"anchor\" href=\"#-23\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFOCVCNSU4QiVFNSU4MCVCQyVFOCVCRiU5MCVFNyVBRSU5NyVFNyVBQyVBNg==\"></span>赋值运算符</h4>\n<p><code>a += b</code></p>\n<p><em>Aka</em>  <code>a = a + b</code></p>\n<p><code>a -= b</code></p>\n<p><em>Aka</em>  <code>a = a - b</code></p>\n<p><code>a *= b</code></p>\n<p><em>Aka</em>  <code>a = a * b</code></p>\n<p><code>a /= b</code></p>\n<p><em>Aka</em>  <code>a = a / b</code></p>\n<p><code>a %= b</code></p>\n<p><em>Aka</em>  <code>a = a % b</code></p>\n<h4 id=\"-24\"><a class=\"anchor\" href=\"#-24\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFOSU4MCVCQiVFOCVCRSU5MSVFOCVCRiU5MCVFNyVBRSU5NyVFNyVBQyVBNg==\"></span>逻辑运算符</h4>\n<p><code>exp1 &amp;&amp; exp2</code></p>\n<p>Both are true <em>(AND)</em></p>\n<p>`exp1</p>\n<p><code>!exp</code></p>\n<p><code>exp</code>  is false <em>(NOT)</em></p>\n<h4 id=\"-25\"><a class=\"anchor\" href=\"#-25\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFNCVCRCU4RCVFOCVCRiU5MCVFNyVBRSU5NyVFNyVBQyVBNg==\"></span>位运算符</h4>\n<p><code>a &amp; b</code></p>\n<p>Binary AND</p>\n<p>`a</p>\n<p>b`</p>\n<p><code>a ^ b</code></p>\n<p>Binary XOR</p>\n<p><code>a ~ b</code></p>\n<p>Binary One's Complement</p>\n<p><code>a &lt;&lt; b</code></p>\n<p>Binary Shift Left</p>\n<p><code>a &gt;&gt; b</code></p>\n<p>Binary Shift Right</p>\n<h3 id=\"-26\"><a class=\"anchor\" href=\"#-26\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFNCVCOCU4OSVFNSU4NSU4MyVFOCVCRiU5MCVFNyVBRSU5NyVFNyVBQyVBNg==\"></span>三元运算符</h3>\n<pre><code>           ┌── True ──┐\nResult = Condition ? Exp1 : Exp2;\n           └───── False ─────┘\n</code></pre>\n<hr />\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> max<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>max <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">></span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> x <span class=\"token operator\">:</span> y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 输出: 5</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> max <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><hr />\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> max<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">></span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    max <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    max <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 输出: 5</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> max <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"-27\"><a class=\"anchor\" href=\"#-27\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sI3N3aXRjaC0lRTglQUYlQUQlRTUlOEYlQTU=\"></span>switch 语句</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Zero\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"One\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Two\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Three\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"What?\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"-28\"><a class=\"anchor\" href=\"#-28\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sI2MtJUU1JUJFJUFBJUU3JThFJUFG\"></span>C++ 循环</h2>\n<h3 id=\"-29\"><a class=\"anchor\" href=\"#-29\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sI3doaWxl\"></span>While</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 输出: 012345</span></pre></td></tr></table></figure><h3 id=\"-30\"><a class=\"anchor\" href=\"#-30\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sI2RvLXdoaWxl\"></span>Do-while</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">do</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 输出: 12345</span></pre></td></tr></table></figure><h3 id=\"-31\"><a class=\"anchor\" href=\"#-31\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sI2NvbnRpbnVlLSVFOCVBRiVBRCVFNSU4RiVBNQ==\"></span>Continue 语句</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">// 输出: 13579</span></pre></td></tr></table></figure><h3 id=\"-32\"><a class=\"anchor\" href=\"#-32\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFNiU5NyVBMCVFOSU5OSU5MCVFNSVCRSVBQSVFNyU4RSVBRg==\"></span>无限循环</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// true or 1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"无限循环\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><hr />\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"无限循环\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><hr />\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"infinite loop\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"-33\"><a class=\"anchor\" href=\"#-33\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sI2Zvcl9lYWNoLWMxMS0lRTglQjUlQjc=\"></span>for_each (C++11 起)</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">auto</span> print <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> num <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>array<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token operator\">></span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">for_each</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> print<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"-34\"><a class=\"anchor\" href=\"#-34\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFNSU5RiVCQSVFNCVCQSU4RSVFOCU4QyU4MyVFNSU5QiVCNC1jMTEtJUU4JUI1JUI3\"></span>基于范围 (C++11 起)</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n <span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> n <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 输出: 1 2 3 4 5</span></pre></td></tr></table></figure><hr />\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>string hello <span class=\"token operator\">=</span> <span class=\"token string\">\"Quick Reference.ME\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> c<span class=\"token operator\">:</span> hello<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> c <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 输出: Q u i c k R e f . M E</span></pre></td></tr></table></figure><h3 id=\"-35\"><a class=\"anchor\" href=\"#-35\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFNCVCOCVBRCVFNiU5NiVBRCVFOCVBRiVBRCVFNSU4RiVBNQ==\"></span>中断语句</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> password<span class=\"token punctuation\">,</span> times <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>password <span class=\"token operator\">!=</span> <span class=\"token number\">1234</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>times<span class=\"token operator\">++</span> <span class=\"token operator\">>=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Locked!\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Password: \"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cin <span class=\"token operator\">>></span> password<span class=\"token punctuation\">;</span> <span class=\"token comment\">// input</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"-36\"><a class=\"anchor\" href=\"#-36\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sI3NldmVyYWwtdmFyaWF0aW9ucw==\"></span>Several variations</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">,</span> j<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"i=\"</span> <span class=\"token operator\">&lt;&lt;</span> i <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\",\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"j=\"</span> <span class=\"token operator\">&lt;&lt;</span> j <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\";\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 输出: i=0,j=2;i=1,j=1;i=2,j=0;</span></pre></td></tr></table></figure><h2 id=\"-37\"><a class=\"anchor\" href=\"#-37\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sI2MtJUU1JTg3JUJEJUU2JTk1JUIw\"></span>C++ 函数</h2>\n<h3 id=\"-38\"><a class=\"anchor\" href=\"#-38\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFNSU4RiU4MiVFNiU5NSVCMCVFNSU5MiU4QyVFOCVCRiU5NCVFNSU5QiU5RQ==\"></span>参数和返回</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><code>add</code>  是一个接受 2 个整数并返回整数的函数</p>\n<h3 id=\"-39\"><a class=\"anchor\" href=\"#-39\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFOSU4NyU4RCVFOCVCRCVCRA==\"></span>重载</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">fun</span><span class=\"token punctuation\">(</span>string a<span class=\"token punctuation\">,</span> string b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> a <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">fun</span><span class=\"token punctuation\">(</span>string a<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">fun</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"-40\"><a class=\"anchor\" href=\"#-40\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFNSU4NiU4NSVFNyVCRCVBRSVFNSU4NyVCRCVFNiU5NSVCMA==\"></span>内置函数</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cmath></span> <span class=\"token comment\">// 导入库</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">//sqrt () 来自 cmath</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"-41\"><a class=\"anchor\" href=\"#-41\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sI2xhbWJkYS0lRTglQTElQTglRTglQkUlQkUlRTUlQkMlOEY=\"></span>Lambda 表达式</h3>\n<p>Lambda 表达式可以在函数内定义，可以理解为在函数内定义的临时函数。格式：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">auto</span> func <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> return_type <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>\n<p><code>[]</code>  为捕获列表，能够捕获其所在函数的局部变量</p>\n<ul>\n<li>\n<p>一个空的捕获列表代表 Lambda 表达式不捕获任何的变量</p>\n</li>\n<li>\n<p>对于值捕获，直接在中括号中填写要捕获的变量即可：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> val <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">auto</span> func <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>val<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> return_type <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>对于引用捕获，需要在捕获的变量前添加 <code>&amp;</code> ：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>string <span class=\"token function\">str</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">auto</span> func <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&amp;</span>str<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> return_type <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>如果变量太多，需要编译器根据我们编写的代码自动捕获，可以采用隐式捕获的方式。</p>\n<ul>\n<li>\n<p>全部值捕获：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> val1<span class=\"token punctuation\">,</span> val2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">auto</span> func <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">=</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token keyword\">int</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">return</span> val1 <span class=\"token operator\">+</span> val2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>全部引用捕获：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>string <span class=\"token function\">str1</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">str2</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"word!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">auto</span> func <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> string</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">return</span> str1 <span class=\"token operator\">+</span> str2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>混合隐式捕获：</p>\n<p>如果希望对一部分变量采用值捕获，对其他变量采用引用捕获，可以混合使用：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> val1 <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">,</span> val2 <span class=\"token operator\">=</span> <span class=\"token number\">456</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>string <span class=\"token function\">str1</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">str2</span><span class=\"token punctuation\">(</span><span class=\"token number\">456</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">auto</span> func1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">=</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>str1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token keyword\">int</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span>   val1 <span class=\"token operator\">==</span> std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">stoi</span><span class=\"token punctuation\">(</span>str1<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>              <span class=\"token operator\">?</span> val1 <span class=\"token operator\">:</span> val2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">auto</span> func2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">,</span> val1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token keyword\">int</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span>   str1 <span class=\"token operator\">==</span> std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">to_string</span><span class=\"token punctuation\">(</span>val1<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>              <span class=\"token operator\">?</span> str1 <span class=\"token operator\">:</span> str2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p><code>()</code>  是参数列表，我们只需要按照普通函数的使用方法来使用即可</p>\n</li>\n<li>\n<p><code>return_type</code>  是函数的返回类型， <code>-&gt; return_type</code>  可以不写，编译器会自动推导</p>\n</li>\n<li>\n<p><code>&#123;&#125;</code>  中的内容就是函数体，依照普通函数的使用方法使用即可</p>\n</li>\n</ul>\n<p>此处给出一个 Lambda 表达式的实际使用例子 (当然可以使用  <code>str::copy</code> ):</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//vec 中包含 1, 2, 3, 4, 5</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">vec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">for_each</span><span class=\"token punctuation\">(</span>vec<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> vec<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>              <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> ele<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token keyword\">void</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>          <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>              std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> ele </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                          <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"-42\"><a class=\"anchor\" href=\"#-42\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sI2MlRTUlQTQlOUElRTclQkElQkYlRTclQTglOEI=\"></span>C++ 多线程</h2>\n<h3 id=\"-43\"><a class=\"anchor\" href=\"#-43\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFNSVBNCU5QSVFNyVCQSVCRiVFNyVBOCU4QiVFNCVCQiU4QiVFNyVCQiU4RA==\"></span>多线程介绍</h3>\n<p>g++ 编译选项： <code>-std=c++11</code> 。包含头文件：</p>\n<ul>\n<li><code>#include &lt;thread&gt;</code> ：C++ 多线程库</li>\n<li><code>#include &lt;mutex&gt;</code> ：C++ 互斥量库</li>\n<li><code>#include &lt;future&gt;</code> ：C++ 异步库</li>\n</ul>\n<h3 id=\"-44\"><a class=\"anchor\" href=\"#-44\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFNyVCQSVCRiVFNyVBOCU4QiVFNyU5QSU4NCVFNSU4OCU5QiVFNSVCQiVCQQ==\"></span>线程的创建</h3>\n<p>以普通函数作为线程入口函数：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">entry_1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">entry_2</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> val<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>thread <span class=\"token function\">my_thread_1</span><span class=\"token punctuation\">(</span>entry_1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>thread <span class=\"token function\">my_thread_2</span><span class=\"token punctuation\">(</span>entry_2<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>以类对象作为线程入口函数：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Entry</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token keyword\">operator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">entry_function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Entry entry<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 调用 operator ()()</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>thread <span class=\"token function\">my_thread_1</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 调用 Entry::entry_function</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>thread <span class=\"token function\">my_thread_2</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>Entry<span class=\"token double-colon punctuation\">::</span>entry_function<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>entry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>以 lambda 表达式作为线程入口函数：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>thread <span class=\"token function\">my_thread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token keyword\">void</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>         <span class=\"token comment\">// ... </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"-45\"><a class=\"anchor\" href=\"#-45\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFNyVCQSVCRiVFNyVBOCU4QiVFNyU5QSU4NCVFOSU5NCU4MCVFNiVBRiU4MQ==\"></span>线程的销毁</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>thread my_thread<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 阻塞</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>my_thread<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 非阻塞</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>my_thread<span class=\"token punctuation\">.</span><span class=\"token function\">detach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"-46\"><a class=\"anchor\" href=\"#-46\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sI3RoaXNfdGhyZWFk\"></span> <code>this_thread</code></h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 获取当前线程 ID</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>this_thread<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">get_id</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 使当前线程休眠一段指定时间</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>this_thread<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">sleep_for</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 使当前线程休眠到指定时间</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>this_thread<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">sleep_until</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 暂停当前线程的执行，让别的线程执行</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>this_thread<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">yield</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"-47\"><a class=\"anchor\" href=\"#-47\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFOSU5NCU4MQ==\"></span>锁</h3>\n<blockquote>\n<p><code>#include &lt;mutex&gt;</code></p>\n</blockquote>\n<h4 id=\"-48\"><a class=\"anchor\" href=\"#-48\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFOSU5NCU4MSVFNyU5QSU4NCVFNSU5RiVCQSVFNiU5QyVBQyVFNiU5MyU4RCVFNCVCRCU5Qw==\"></span>锁的基本操作</h4>\n<p>创建锁</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>mutex m<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>上锁</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>m<span class=\"token punctuation\">.</span><span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>解锁</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>m<span class=\"token punctuation\">.</span><span class=\"token function\">unlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>尝试上锁：成功返回 <code>true</code> ，失败返回 <code>false</code></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>m<span class=\"token punctuation\">.</span><span class=\"token function\">try_lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>解锁</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>m<span class=\"token punctuation\">.</span><span class=\"token function\">unlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"-49\"><a class=\"anchor\" href=\"#-49\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFNiU5QiVCNCVFNyVBRSU4MCVFNSU4RCU5NSVFNyU5QSU4NCVFOSU5NCU4MS0tc3RkbG9ja19ndWFyZG11dGV4\"></span>更简单的锁 ——  <code>std::lock_guard&lt;Mutex&gt;</code></h4>\n<p>构造时上锁，析构时解锁</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>mutex m<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>lock_guard<span class=\"token operator\">&lt;</span>std<span class=\"token double-colon punctuation\">::</span>mutex<span class=\"token operator\">></span> <span class=\"token function\">lock</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>额外参数： <code>std::adopt_lock</code> ：只需解锁，无需上锁</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 手动上锁</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>m<span class=\"token punctuation\">.</span><span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>lock_guard<span class=\"token operator\">&lt;</span>mutex<span class=\"token operator\">></span> <span class=\"token function\">lock</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>adopt_lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"-50\"><a class=\"anchor\" href=\"#-50\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sI3VuaXF1ZV9sb2NrbXV0ZXg=\"></span> <code>unique_lock&lt;Mutex&gt;</code></h4>\n<p>构造上锁，析构解锁</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>mutex m<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>unique_lock<span class=\"token operator\">&lt;</span>mutex<span class=\"token operator\">></span> <span class=\"token function\">lock</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h5 id=\"-51\"><a class=\"anchor\" href=\"#-51\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sI3N0ZGFkb3B0X2xvY2s=\"></span> <code>std::adopt_lock</code></h5>\n<p>只需解锁，无需上锁</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 手动上锁</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>m<span class=\"token punctuation\">.</span><span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>unique_lock<span class=\"token operator\">&lt;</span>mutex<span class=\"token operator\">></span> <span class=\"token function\">lock</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>adopt_lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h5 id=\"-52\"><a class=\"anchor\" href=\"#-52\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sI3N0ZHRyeV90b19sb2Nr\"></span> <code>std::try_to_lock</code></h5>\n<p>尝试上锁，可以通过 <code>std::unique_lock&lt;Mutex&gt;::owns_lock()</code>  查看状态</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>unique_lock<span class=\"token operator\">&lt;</span>mutex<span class=\"token operator\">></span> <span class=\"token function\">lock</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>try_to_lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lock<span class=\"token punctuation\">.</span><span class=\"token function\">owns_lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// 拿到了锁</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">// 没有</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h5 id=\"-53\"><a class=\"anchor\" href=\"#-53\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sI3N0ZGRlZmVyX2xvY2s=\"></span> <code>std::defer_lock</code></h5>\n<p>绑定锁，但不上锁</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>unique_lock<span class=\"token operator\">&lt;</span>mutex<span class=\"token operator\">></span> <span class=\"token function\">lock</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>defer_lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>lock<span class=\"token punctuation\">.</span><span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>lock<span class=\"token punctuation\">.</span><span class=\"token function\">unlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h5 id=\"-54\"><a class=\"anchor\" href=\"#-54\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sI3N0ZHVuaXF1ZV9sb2NrbXV0ZXhyZWxlYXNl\"></span> <code>std::unique_lock&lt;Mutex&gt;::release</code></h5>\n<p>返回所管理的 <code>mutex</code>  对象指针，** 释放所有权。** 一旦释放了所有权，那么如果原来互斥量处于互斥状态，程序员有责任手动解锁。</p>\n<h4 id=\"-55\"><a class=\"anchor\" href=\"#-55\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sI3N0ZGNhbGxfb25jZQ==\"></span> <code>std::call_once</code></h4>\n<p>当多个线程通过这个函数调用一个可调用对象时，只会有一个线程成功调用。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>once_flag flag<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">call_once</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">,</span> foo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"-56\"><a class=\"anchor\" href=\"#-56\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sI3N0ZGNvbmRpdGlvbl92YXJpYWJsZQ==\"></span> <code>std::condition_variable</code></h3>\n<h4 id=\"-57\"><a class=\"anchor\" href=\"#-57\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFNSU4OCU5QiVFNSVCQiVCQSVFNiU5RCVBMSVFNCVCQiVCNiVFNSU4RiU5OCVFOSU4NyU4Rg==\"></span>创建条件变量</h4>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>condition_variable cond<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"-58\"><a class=\"anchor\" href=\"#-58\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFNyVBRCU4OSVFNSVCRSU4NSVFNiU5RCVBMSVFNCVCQiVCNiVFNSU4RiU5OCVFOSU4NyU4RiVFOCVBMiVBQiVFOSU4MCU5QSVFNyU5RiVBNQ==\"></span>等待条件变量被通知</h4>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>unique_lock<span class=\"token operator\">&lt;</span>std<span class=\"token double-colon punctuation\">::</span>mutex<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    lock<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">extern</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">predicate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 调用方式 1</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>cond<span class=\"token punctuation\">.</span><span class=\"token function\">wait</span><span class=\"token punctuation\">(</span>lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 调用方式 2</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>cond<span class=\"token punctuation\">.</span><span class=\"token function\">wait</span><span class=\"token punctuation\">(</span>lock<span class=\"token punctuation\">,</span> predicate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><hr />\n<ul>\n<li><code>wait</code>  不断地尝试重新获取并加锁该互斥量，如果获取不到，它就卡在这里并反复尝试重新获取，如果获取到了，执行流程就继续往下走</li>\n<li><code>wait</code>  在获取到互斥量并加锁了互斥量之后：\n<ul>\n<li>如果 <code>wait</code>  被提供了可调用对象，那么就执行这个可调用对象：\n<ul>\n<li>如果返回值为 <code>false</code> ，那么 <code>wait</code>  继续加锁，直到再次被 notified</li>\n<li>如果返回值为 <code>true</code> ，那么 <code>wait</code>  返回，继续执行流程</li>\n</ul>\n</li>\n<li>如果 <code>wait</code>  没有第二个参数，那么直接返回，继续执行</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"-59\"><a class=\"anchor\" href=\"#-59\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sI3N0ZGNvbmRpdGlvbl92YXJpYWJsZW5vdGlmeV9vbmU=\"></span> <code>std::condition_variable::notify_one</code></h4>\n<p><code>notify_one</code>  唤醒一个调用  <code>wait</code>  的线程。注意在唤醒之前要解锁，否则调用  <code>wait</code>  的线程也会因为无法加锁而阻塞。</p>\n<h4 id=\"-60\"><a class=\"anchor\" href=\"#-60\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sI3N0ZGNvbmRpdGlvbl92YXJpYWJsZW5vdGlmeV9hbGw=\"></span> <code>std::condition_variable::notify_all</code></h4>\n<p>唤醒所有调用  <code>wait</code>  的线程。</p>\n<h3 id=\"-61\"><a class=\"anchor\" href=\"#-61\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFOCU4RSVCNyVFNSU4RiU5NiVFNyVCQSVCRiVFNyVBOCU4QiVFNyU5QSU4NCVFOCVCRiU5MCVFOCVBMSU4QyVFNyVCQiU5MyVFNiU5RSU5Qw==\"></span>获取线程的运行结果</h3>\n<blockquote>\n<p><code>#include &lt;future&gt;</code></p>\n</blockquote>\n<h4 id=\"-62\"><a class=\"anchor\" href=\"#-62\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFNSU4OCU5QiVFNSVCQiVCQSVFNSVCQyU4MiVFNiVBRCVBNSVFNCVCQiVCQiVFNSU4QSVBMQ==\"></span>创建异步任务</h4>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">double</span> <span class=\"token function\">func</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 使用 std::async 创建异步任务</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 使用 std::future 获取结果</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">//future 模板中存放返回值类型</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>future<span class=\"token operator\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token operator\">></span> result <span class=\"token operator\">=</span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">async</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"-63\"><a class=\"anchor\" href=\"#-63\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFOCU4RSVCNyVFNSU4RiU5NiVFNSVCQyU4MiVFNiVBRCVBNSVFNCVCQiVCQiVFNSU4QSVBMSVFNyU5QSU4NCVFOCVCRiU5NCVFNSU5QiU5RSVFNSU4MCVCQw==\"></span>获取异步任务的返回值</h4>\n<p>等待异步任务结束，但是不获取返回值：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>result<span class=\"token punctuation\">.</span><span class=\"token function\">wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>获取异步任务的返回值：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> val <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>注：</p>\n<ul>\n<li><code>get()</code>  返回右值，因此只可调用一次</li>\n<li>只要调用上述任意函数，线程就会一直阻塞到返回值可用（入口函数运行结束）</li>\n</ul>\n<h4 id=\"-64\"><a class=\"anchor\" href=\"#-64\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sI3N0ZGFzeW5jLSVFNyU5QSU4NCVFOSVBMiU5RCVFNSVBNCU5NiVFNSU4RiU4MiVFNiU5NSVCMA==\"></span> <code>std::async</code>  的额外参数</h4>\n<p>额外参数可以被放在  <code>std::async</code>  的第一个参数位置，用于设定  <code>std::async</code>  的行为：</p>\n<ul>\n<li><code>std::launch::deferred</code> ：入口函数的运行会被推迟到 <code>std::future&lt;T&gt;::get()</code>  或者 <code>std::future&lt;T&gt;::wait()</code>  被调用时。此时调用线程会直接运行线程入口函数，换言之，<strong>不会创建子线程</strong></li>\n<li><code>std::launch::async</code> ：立即创建子线程，并运行线程入口函数</li>\n<li><code>std::launch::deferred | std::launch::async</code> ：默认值，由系统自行决定</li>\n</ul>\n<h4 id=\"-65\"><a class=\"anchor\" href=\"#-65\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFOCVCRiU5NCVFNSU5QiU5RSVFNSU4MCVCQyVFNyU5QSU4NCVFNyU4QSVCNiVFNiU4MCU4MQ==\"></span>返回值的状态</h4>\n<p>让当前线程等待一段时间（等待到指定时间点），以期待返回值准备好：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">extern</span> <span class=\"token keyword\">double</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> val<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>future<span class=\"token operator\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token operator\">></span> result <span class=\"token operator\">=</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">async</span><span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 返回值类型</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>future_status status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 等待一段时间</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>status <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span><span class=\"token function\">wait_for</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  std<span class=\"token double-colon punctuation\">::</span>chrono<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">seconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// 等待到某一时间点</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>status <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span><span class=\"token function\">wait_for</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  std<span class=\"token double-colon punctuation\">::</span>chrono<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>chrono<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">seconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>在指定的时间过去后，可以获取等待的结果：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 返回值已经准备好</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>status <span class=\"token operator\">==</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     std<span class=\"token double-colon punctuation\">::</span>future_status<span class=\"token double-colon punctuation\">::</span>ready<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 超时：尚未准备好</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>status <span class=\"token operator\">==</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>future_status<span class=\"token double-colon punctuation\">::</span>timeout<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// 尚未启动: std::launch::deferred</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>status <span class=\"token operator\">==</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>future_status<span class=\"token double-colon punctuation\">::</span>deferred<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"-66\"><a class=\"anchor\" href=\"#-66\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFNSVBNCU5QSVFNCVCOCVBQSVFOCVCRiU5NCVFNSU5QiU5RSVFNSU4MCVCQw==\"></span>多个返回值</h4>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>shared_future<span class=\"token operator\">&lt;</span>T<span class=\"token operator\">></span> result<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>如果要多次获取结果，可以使用 <code>std::shared_future</code> ，其会返回结果的一个<strong>拷贝</strong>。</p>\n<p>对于不可拷贝对象，可以在 <code>std::shared_future</code>  中存储对象的指针，而非指针本身。</p>\n<h2 id=\"-67\"><a class=\"anchor\" href=\"#-67\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sI2MtJUU5JUEyJTg0JUU1JUE0JTg0JUU3JTkwJTg2JUU1JTk5JUE4\"></span>C++ 预处理器</h2>\n<h3 id=\"-68\"><a class=\"anchor\" href=\"#-68\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFOSVBMiU4NCVFNSVBNCU4NCVFNyU5MCU4NiVFNSU5OSVBOA==\"></span>预处理器</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL3ByZXByb2Nlc3Nvci9jb25kaXRpb25hbA==\">if</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL3ByZXByb2Nlc3Nvci9jb25kaXRpb25hbA==\">elif</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL3ByZXByb2Nlc3Nvci9jb25kaXRpb25hbA==\">else</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL3ByZXByb2Nlc3Nvci9jb25kaXRpb25hbA==\">endif</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL3ByZXByb2Nlc3Nvci9jb25kaXRpb25hbA==\">ifdef</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL3ByZXByb2Nlc3Nvci9jb25kaXRpb25hbA==\">ifndef</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL3ByZXByb2Nlc3Nvci9yZXBsYWNl\">define</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL3ByZXByb2Nlc3Nvci9yZXBsYWNl\">undef</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL3ByZXByb2Nlc3Nvci9pbmNsdWRl\">include</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL3ByZXByb2Nlc3Nvci9saW5l\">line</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL3ByZXByb2Nlc3Nvci9lcnJvcg==\">error</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL3ByZXByb2Nlc3Nvci9pbXBs\">pragma</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL3ByZXByb2Nlc3Nvci9jb25kaXRpb25hbA==\">defined</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2ZlYXR1cmVfdGVzdA==\">__has_include</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2ZlYXR1cmVfdGVzdA==\">__has_cpp_attribute</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvZXhwb3J0\">export</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL213aWtpL2luZGV4LnBocD90aXRsZT1jcHAva2V5d29yZC9pbXBvcnQmYW1wO2FjdGlvbj1lZGl0JmFtcDtyZWRsaW5rPTE=\">import</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL213aWtpL2luZGV4LnBocD90aXRsZT1jcHAva2V5d29yZC9tb2R1bGUmYW1wO2FjdGlvbj1lZGl0JmFtcDtyZWRsaW5rPTE=\">module</span></li>\n</ul>\n<h3 id=\"-69\"><a class=\"anchor\" href=\"#-69\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sI2luY2x1ZGVz\"></span>Includes</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"iostream\"</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr></table></figure><h3 id=\"-70\"><a class=\"anchor\" href=\"#-70\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sI2RlZmluZXM=\"></span>Defines</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">FOO</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">FOO</span> <span class=\"token string\">\"hello\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">undef</span> <span class=\"token expression\">FOO</span></span></pre></td></tr></table></figure><h3 id=\"-71\"><a class=\"anchor\" href=\"#-71\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sI2lm\"></span>If</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifdef</span> <span class=\"token expression\">DEBUG</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token char\">'hi'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">elif</span> <span class=\"token expression\">defined VERBOSE</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">else</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr></table></figure><h3 id=\"-72\"><a class=\"anchor\" href=\"#-72\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sI2Vycm9y\"></span>Error</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">if</span> <span class=\"token expression\">VERSION <span class=\"token operator\">==</span> <span class=\"token number\">2.0</span></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">error</span> <span class=\"token expression\">Unsupported</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">warning</span> <span class=\"token expression\">Not really supported</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr></table></figure><h3 id=\"-73\"><a class=\"anchor\" href=\"#-73\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFNSVBRSU4Rg==\"></span>宏</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">DEG</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">57.29</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr></table></figure><h3 id=\"-74\"><a class=\"anchor\" href=\"#-74\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFNCVCQiVBNCVFNyU4OSU4QyVFOCVCRiU5RSVFNiU4RSVBNQ==\"></span>令牌连接</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">DST</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> name</span><span class=\"token punctuation\">##</span><span class=\"token expression\">_s name</span><span class=\"token punctuation\">##</span><span class=\"token expression\">_t</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">DST</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   #<span class=\"token operator\">=</span><span class=\"token operator\">></span> object_s object_t<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"-75\"><a class=\"anchor\" href=\"#-75\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFNSVBRCU5NyVFNyVBQyVBNiVFNCVCOCVCMiVFNSU4QyU5Ng==\"></span>字符串化</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">STR</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> #name</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> a <span class=\"token operator\">=</span> <span class=\"token function\">STR</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   #<span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> a <span class=\"token operator\">=</span> <span class=\"token string\">\"object\"</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"-76\"><a class=\"anchor\" href=\"#-76\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFNiU5NiU4NyVFNCVCQiVCNiVFNSU5MiU4QyVFOCVBMSU4Qw==\"></span>文件和行</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">LOG</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">__LINE__</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>#<span class=\"token operator\">=</span><span class=\"token operator\">></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"file.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"hey\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"-77\"><a class=\"anchor\" href=\"#-77\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFNSU5MCU4NCVFNyVBNyU4RCVFNSU5MCU4NCVFNiVBMCVCNyVFNyU5QSU4NA==\"></span>各种各样的</h2>\n<h3 id=\"-78\"><a class=\"anchor\" href=\"#-78\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFOCVCRCVBQyVFNCVCOSU4OSVFNSVCQSU4RiVFNSU4OCU5Nw==\"></span>转义序列</h3>\n<p><code>\\b</code></p>\n<p>退格键</p>\n<p><code>\\f</code></p>\n<p>换页</p>\n<p><code>\\n</code></p>\n<p>换行</p>\n<p><code>\\r</code></p>\n<p>返回</p>\n<p><code>\\t</code></p>\n<p>水平制表符</p>\n<p><code>\\v</code></p>\n<p>垂直制表符</p>\n<p><code>\\\\</code></p>\n<p>反斜杠</p>\n<p><code>\\'</code></p>\n<p>单引号</p>\n<p><code>\\&quot;</code></p>\n<p>双引号</p>\n<p><code>\\?</code></p>\n<p>问号</p>\n<p><code>\\0</code></p>\n<p>空字符</p>\n<h3 id=\"-79\"><a class=\"anchor\" href=\"#-79\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFNSU4NSVCMyVFOSU5NCVBRSVFNSVBRCU5Nw==\"></span>关键字</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvYWxpZ25hcw==\">alignas</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvYWxpZ25vZg==\">alignof</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvYW5k\">and</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvYW5kX2Vx\">and_eq</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvYXNt\">asm</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvYXRvbWljX2NhbmNlbA==\">atomic_cancel</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvYXRvbWljX2NvbW1pdA==\">atomic_commit</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvYXRvbWljX25vZXhjZXB0\">atomic_noexcept</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvYXV0bw==\">auto</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvYml0YW5k\">bitand</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvYml0b3I=\">bitor</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvYm9vbA==\">bool</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvYnJlYWs=\">break</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvY2FzZQ==\">case</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvY2F0Y2g=\">catch</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvY2hhcg==\">char</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvY2hhcjhfdA==\">char8_t</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvY2hhcjE2X3Q=\">char16_t</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvY2hhcjMyX3Q=\">char32_t</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvY2xhc3M=\">class</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvY29tcGw=\">compl</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvY29uY2VwdA==\">concept</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvY29uc3Q=\">const</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvY29uc3RldmFs\">consteval</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvY29uc3RleHBy\">constexpr</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvY29uc3Rpbml0\">constinit</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvY29uc3RfY2FzdA==\">const_cast</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvY29udGludWU=\">continue</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvY29fYXdhaXQ=\">co_await</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvY29fcmV0dXJu\">co_return</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvY29feWllbGQ=\">co_yield</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvZGVjbHR5cGU=\">decltype</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvZGVmYXVsdA==\">default</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvZGVsZXRl\">delete</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvZG8=\">do</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvZG91Ymxl\">double</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvZHluYW1pY19jYXN0\">dynamic_cast</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvZWxzZQ==\">else</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvZW51bQ==\">enum</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvZXhwbGljaXQ=\">explicit</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvZXhwb3J0\">export</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvZXh0ZXJu\">extern</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvZmFsc2U=\">false</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvZmxvYXQ=\">float</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvZm9y\">for</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvZnJpZW5k\">friend</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvZ290bw==\">goto</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvaWY=\">if</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvaW5saW5l\">inline</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvaW50\">int</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvbG9uZw==\">long</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvbXV0YWJsZQ==\">mutable</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvbmFtZXNwYWNl\">namespace</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvbmV3\">new</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvbm9leGNlcHQ=\">noexcept</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvbm90\">not</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvbm90X2Vx\">not_eq</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvbnVsbHB0cg==\">nullptr</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvb3BlcmF0b3I=\">operator</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvb3I=\">or</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvb3JfZXE=\">or_eq</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvcHJpdmF0ZQ==\">private</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvcHJvdGVjdGVk\">protected</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvcHVibGlj\">public</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvcmVmbGV4cHI=\">reflexpr</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvcmVnaXN0ZXI=\">register</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvcmVpbnRlcnByZXRfY2FzdA==\">reinterpret_cast</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvcmVxdWlyZXM=\">requires</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2xhbmd1YWdlL3JldHVybg==\">return</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvc2hvcnQ=\">short</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvc2lnbmVk\">signed</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvc2l6ZW9m\">sizeof</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvc3RhdGlj\">static</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvc3RhdGljX2Fzc2VydA==\">static_assert</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvc3RhdGljX2Nhc3Q=\">static_cast</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvc3RydWN0\">struct</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvc3dpdGNo\">switch</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvc3luY2hyb25pemVk\">synchronized</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvdGVtcGxhdGU=\">template</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvdGhpcw==\">this</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvdGhyZWFkX2xvY2Fs\">thread_local</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvdGhyb3c=\">throw</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvdHJ1ZQ==\">true</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvdHJ5\">try</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvdHlwZWRlZg==\">typedef</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvdHlwZWlk\">typeid</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvdHlwZW5hbWU=\">typename</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvdW5pb24=\">union</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvdW5zaWduZWQ=\">unsigned</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvdXNpbmc=\">using</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvdmlydHVhbA==\">virtual</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvdm9pZA==\">void</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvdm9sYXRpbGU=\">volatile</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvd2NoYXJfdA==\">wchar_t</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvd2hpbGU=\">while</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQveG9y\">xor</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQveG9yX2Vx\">xor_eq</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2xhbmd1YWdlL2ZpbmFs\">final</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2xhbmd1YWdlL292ZXJyaWRl\">override</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2xhbmd1YWdlL3RyYW5zYWN0aW9uYWxfbWVtb3J5\">transaction_safe</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2xhbmd1YWdlL3RyYW5zYWN0aW9uYWxfbWVtb3J5\">transaction_safe_dynamic</span></li>\n</ul>\n<h3 id=\"-80\"><a class=\"anchor\" href=\"#-80\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFOSVBMiU4NCVFNSVBNCU4NCVFNyU5MCU4NiVFNSU5OSVBOC0x\"></span>预处理器</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL3ByZXByb2Nlc3Nvci9jb25kaXRpb25hbA==\">if</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL3ByZXByb2Nlc3Nvci9jb25kaXRpb25hbA==\">elif</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL3ByZXByb2Nlc3Nvci9jb25kaXRpb25hbA==\">else</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL3ByZXByb2Nlc3Nvci9jb25kaXRpb25hbA==\">endif</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL3ByZXByb2Nlc3Nvci9jb25kaXRpb25hbA==\">ifdef</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL3ByZXByb2Nlc3Nvci9jb25kaXRpb25hbA==\">ifndef</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL3ByZXByb2Nlc3Nvci9yZXBsYWNl\">define</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL3ByZXByb2Nlc3Nvci9yZXBsYWNl\">undef</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL3ByZXByb2Nlc3Nvci9pbmNsdWRl\">include</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL3ByZXByb2Nlc3Nvci9saW5l\">line</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL3ByZXByb2Nlc3Nvci9lcnJvcg==\">error</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL3ByZXByb2Nlc3Nvci9pbXBs\">pragma</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL3ByZXByb2Nlc3Nvci9jb25kaXRpb25hbA==\">defined</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2ZlYXR1cmVfdGVzdA==\">__has_include</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2ZlYXR1cmVfdGVzdA==\">__has_cpp_attribute</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cvY3BwL2tleXdvcmQvZXhwb3J0\">export</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL213aWtpL2luZGV4LnBocD90aXRsZT1jcHAva2V5d29yZC9pbXBvcnQmYW1wO2FjdGlvbj1lZGl0JmFtcDtyZWRsaW5rPTE=\">import</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL213aWtpL2luZGV4LnBocD90aXRsZT1jcHAva2V5d29yZC9tb2R1bGUmYW1wO2FjdGlvbj1lZGl0JmFtcDtyZWRsaW5rPTE=\">module</span></li>\n</ul>\n<h2 id=\"-81\"><a class=\"anchor\" href=\"#-81\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlja3JlZi5jbi9kb2NzL2NwcC5odG1sIyVFNSU4RiVBNiVFOCVBNyU4MQ==\"></span>另见</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWNraW5nY3BwLmNvbS9jcHAvY2hlYXRfc2hlZXRzLmh0bWw=\">C++ Infographics &amp; Cheat Sheets</span> <em>(<span class=\"exturl\" data-url=\"aHR0cDovL2hhY2tpbmdjcHAuY29t\">hackingcpp.com</span>)</em></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5jcHByZWZlcmVuY2UuY29tL3cv\">C++ reference</span> <em>(<span class=\"exturl\" data-url=\"aHR0cDovL2NwcHJlZmVyZW5jZS5jb20=\">cppreference.com</span>)</em></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jcGx1c3BsdXMuY29tL2RvYy90dXRvcmlhbC8=\">C++ Language Tutorials</span> <em>(<span class=\"exturl\" data-url=\"aHR0cDovL2NwbHVzcGx1cy5jb20=\">cplusplus.com</span>)</em></li>\n</ul>\n<p>© 2022 Kenny Wang.</p>\n",
            "tags": [
                "编程语言"
            ]
        },
        {
            "id": "http://红叶.top/2023/05/23/computer-science/notes/%E5%8D%A1%E5%B8%B8/",
            "url": "http://红叶.top/2023/05/23/computer-science/notes/%E5%8D%A1%E5%B8%B8/",
            "title": "卡常小知识",
            "date_published": "2023-05-23T07:49:38.072Z",
            "content_html": "<p>怎样更快？</p>\n<p>在程序设计中，往往会寻求代码的运行速度。</p>\n<p>当你面对 TLE 的残酷现实却不愿承认自己的算法有问题时，卡常是一个很好的办法。</p>\n<p>卡常数、又称底层常数优化，特指在 OI/<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9BQ00tSUNQQy8xNzAwNzMwP2Zyb21Nb2R1bGU9bGVtbWFfaW5saW5r\">ACM-ICPC</span> 等算法竞赛中针对程序基本操作进行的底层优化，一般在对程序性能要求较为严苛的题目或是在算法已经达到理论最优时间复杂度时使用，有时也用于非正解的强行优化。实现方法有使用 register 寄存器关键字、利用空间连续性使数组进入缓存、输入输出优化等。</p>\n<p>1. 快读 &amp; 快写<br />\n总所周知，字符输入输出比标准输入输出快的很。</p>\n<p>快读和快写就是运用了这个原理。</p>\n<p>快写模板（循环）：</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>template &lt;typename T&gt;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>void read (T &amp;x) &#123;    </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    x &#x3D; 0;    </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    int f &#x3D; 1;    </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    char ch &#x3D; getchar ();    </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    while (!isdigit (ch)) &#123;  &#x2F;&#x2F;isdigit 在 &lt; cctype &gt; 中  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        if (ch &#x3D;&#x3D; &#39;-&#39;) &#123;</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        \tf &#x3D; -1;    </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        &#125;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        ch &#x3D; getchar ();    </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    &#125;    </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    while (isdigit (ch)) &#123;    </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        x &#x3D; x * 10 + (ch - 48);    </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        ch &#x3D; getchar ();    </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    &#125;    </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    x *&#x3D; f;    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    return;    </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>&#125;</pre></td></tr></table></figure><p>用法：\tread (x); // 输入并赋值</p>\n<p>快写（递归）：</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>template &lt;typename T&gt;  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>void write(T x) &#123;    </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    if(x &lt; 0) &#123;    </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        putchar(&#39;-&#39;);    </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        x &#x3D; -x;    </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    &#125;    </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    if(x &gt; 9) &#123;    </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        write(x &#x2F; 10);    </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    putchar(x % 10 + &#39;0&#39;);    </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    return;    </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>&#125;</pre></td></tr></table></figure><p>用法：\twrite (x); // 输出</p>\n<p>2. 位运算</p>\n<p>能用位运算就用。</p>\n<p>在乘除运算上，最好用左移和右移代替。</p>\n<p>2 * 2 可写成 2 &lt;&lt;1, 2 * 10 可写成 (2 &lt;&lt; 1) + (2 &lt;&lt; 3)。</p>\n<p>90 / 2 可写成 90 &gt;&gt; 1, 128 / 16 可写成 128 &gt;&gt; 4。</p>\n<p>小知识：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">位运算符号</th>\n<th style=\"text-align:center\">位运算关键字版符号</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">&amp;</td>\n<td style=\"text-align:center\">bitand</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">`</td>\n<td style=\"text-align:center\">`</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">~</td>\n<td style=\"text-align:center\">compl</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">^</td>\n<td style=\"text-align:center\">xor</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&amp;=</td>\n<td style=\"text-align:center\">and_eq</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">`</td>\n<td style=\"text-align:center\">=`</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">^=</td>\n<td style=\"text-align:center\">xor_eq</td>\n</tr>\n</tbody>\n</table>\n<p>位运算的其他应用：<br />\n1）代替模运算</p>\n<p>17 % 2 可写成 17 &amp; 1，45 % 4 可写成 45 &amp; 3, 986 % 16 可写成 986 &amp; 15。</p>\n<p>2）快速幂</p>\n<p>快速幂模板：</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>int qk_pow (int x, int n)&#123;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    if (n &#x3D;&#x3D; 0) &#123;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    \treturn 1;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    int t &#x3D; 1;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    while (n) &#123;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      if (n &amp; 1) &#123; &#x2F;&#x2F; 用 &amp; 代替 %</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      \tt *&#x3D; x;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      &#125;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      n &gt;&gt;&#x3D; 1; &#x2F;&#x2F; 用 &gt;&gt; 代替 *</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      x *&#x3D; x;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    return t;</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>&#125;</pre></td></tr></table></figure><p>3）Swap 函数</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>void Swap(int &amp;a, int &amp;b)&#123;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\ta ^&#x3D; b ^&#x3D; a ^&#x3D; b;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\treturn;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>&#125;</pre></td></tr></table></figure><p>这个代码很妙，可以细细品味。</p>\n<p>3.inline</p>\n<p>在声明函数之前写上 inline ，可以加快一下函数调用，但只能用于一些操作简单、调用频繁的函数。涉及递归，大号的循环等很复杂的函数，编译器会自动忽略 inline 。</p>\n<p>如快读函数可写成：</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>template &lt;typename T&gt;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>inline void read(T &amp;x) &#123;    </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    x &#x3D; 0;    </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    int f &#x3D; 1;    </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    char ch &#x3D; getchar();    </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    while(!isdigit(ch)) &#123;    </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        if (ch &#x3D;&#x3D; &#39;-&#39;) &#123;</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        \tf &#x3D; -1;    </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        &#125;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        ch &#x3D; getchar();    </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    &#125;    </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    while(isdigit(ch)) &#123;    </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        x &#x3D; x * 10 + (ch - 48);    </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        ch &#x3D; getchar();    </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    &#125;    </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    x *&#x3D; f;    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    return;    </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>&#125;</pre></td></tr></table></figure><p>但有时 inline 会被忽略。</p>\n<p>4. 寄存器<br />\n假如你要拿个钥匙，一个在你裤兜里，一个在你车上，你拿哪一个？</p>\n<p>就近原则。</p>\n<p>从距离上来说，内存条相较于寄存器来说离 C P U \\tt CPU CPU 更远。</p>\n<p>在时间相等的情况下，时间与路程成正比。</p>\n<p>从工作原理上来说，寄存器的工作原理比内存简单的多。</p>\n<p>综上，寄存器与内存之间具有差异，但差异不大。因此利用寄存器来提高访问速度往往运用与经常被访问的变量。</p>\n<p>例如：</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>for(register int i &#x3D; 1; i &lt;&#x3D; 1000000000; i ++)</pre></td></tr></table></figure><p>register 关键字表示将变量 i 存于寄存器中。代码中变量 i 将被访问 1000000000 次，每一次访问都节省若干时间，乘上 1000000000 便不可忽略。在这个代码中优化后会快 1.5sec→1.7sec 。<br />\n5. 三目运算符</p>\n<p>相较于 i f   e l s e \\tt if \\ else if else 语句，三目运算符的汇编指令更短。</p>\n<p>在少量的运行中，二者的区别微乎其微。</p>\n<p>但运行次数庞大时， 三目运算符的优势便显现出来。</p>\n<p>如 min 函数</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>int min(int a, int b) &#123;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\treturn a &gt; b ? a : b;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>&#125;</pre></td></tr></table></figure><p>问号前是判断条件，如为真则执行冒号前的语句，否则执行冒号后的语句。</p>\n<p>6. 常数的声明<br />\n尽量将常数声明成常量。</p>\n<p>如：<br />\nconst int mod = 100000007;\t比\tint mod = 100000007;\t要快。</p>\n<p>7.#pragma 指令<br />\n经常提到 O2 这一说法，它的实现为：\t#pragma GCC optimize (2)</p>\n<p>当然还有 O1、O3、Os。</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>#pragma GCC optimize (1)</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>#pragma GCC optimize (2)</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>#pragma GCC optimize (3,&quot;Ofast&quot;,&quot;inline&quot;)</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>#pragma GCC optimize (s)</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>还有一堆：</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>#pragma GCC optimize (3)</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>#pragma GCC optimize (&quot;Ofast&quot;)</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>#pragma GCC optimize (&quot;inline&quot;)</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>#pragma GCC optimize (&quot;-fgcse&quot;)</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>#pragma GCC optimize (&quot;-fgcse-lm&quot;)</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>#pragma GCC optimize (&quot;-fipa-sra&quot;)</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>#pragma GCC optimize (&quot;-ftree-pre&quot;)</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>#pragma GCC optimize (&quot;-ftree-vrp&quot;)</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>#pragma GCC optimize (&quot;-fpeephole2&quot;)</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>#pragma GCC optimize (&quot;-ffast-math&quot;)</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>#pragma GCC optimize (&quot;-fsched-spec&quot;)</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>#pragma GCC optimize (&quot;unroll-loops&quot;)</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>#pragma GCC optimize (&quot;-falign-jumps&quot;)</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>#pragma GCC optimize (&quot;-falign-loops&quot;)</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>#pragma GCC optimize (&quot;-falign-labels&quot;)</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>#pragma GCC optimize (&quot;-fdevirtualize&quot;)</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>#pragma GCC optimize (&quot;-fcaller-saves&quot;)</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>#pragma GCC optimize (&quot;-fcrossjumping&quot;)</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>#pragma GCC optimize (&quot;-fthread-jumps&quot;)</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>#pragma GCC optimize (&quot;-funroll-loops&quot;)</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>#pragma GCC optimize (&quot;-fwhole-program&quot;)</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>#pragma GCC optimize (&quot;-freorder-blocks&quot;)</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>#pragma GCC optimize (&quot;-fschedule-insns&quot;)</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>#pragma GCC optimize (&quot;inline-functions&quot;)</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>#pragma GCC optimize (&quot;-ftree-tail-merge&quot;)</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>#pragma GCC optimize (&quot;-fschedule-insns2&quot;)</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>#pragma GCC optimize (&quot;-fstrict-aliasing&quot;)</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>#pragma GCC optimize (&quot;-fstrict-overflow&quot;)</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>#pragma GCC optimize (&quot;-falign-functions&quot;)</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>#pragma GCC optimize (&quot;-fcse-skip-blocks&quot;)</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>#pragma GCC optimize (&quot;-fcse-follow-jumps&quot;)</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>#pragma GCC optimize (&quot;-fsched-interblock&quot;)</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>#pragma GCC optimize (&quot;-fpartial-inlining&quot;)</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>#pragma GCC optimize (&quot;no-stack-protector&quot;)</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>#pragma GCC optimize (&quot;-freorder-functions&quot;)</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>#pragma GCC optimize (&quot;-findirect-inlining&quot;)</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>#pragma GCC optimize (&quot;-fhoist-adjacent-loads&quot;)</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>#pragma GCC optimize (&quot;-frerun-cse-after-loop&quot;)</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>#pragma GCC optimize (&quot;inline-small-functions&quot;)</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>#pragma GCC optimize (&quot;-finline-small-functions&quot;)</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>#pragma GCC optimize (&quot;-ftree-switch-conversion&quot;)</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>#pragma GCC optimize (&quot;-foptimize-sibling-calls&quot;)</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>#pragma GCC optimize (&quot;-fexpensive-optimizations&quot;)</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>#pragma GCC optimize (&quot;-funsafe-loop-optimizations&quot;)</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>#pragma GCC optimize (&quot;inline-functions-called-once&quot;)</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>#pragma GCC optimize (&quot;-fdelete-null-pointer-checks&quot;)</pre></td></tr></table></figure><p>重点：开个 O2 就行了，欲速则不达。（指令集开多了会有负面作用）<br />\n8. 一些奇奇怪怪的卡常小知识</p>\n<p>后置 ++ 需要保存临时变量以返回之前的值，在 STL 中非常慢。事实上，int 的后置 ++ 在实测中也比前置 ++ 慢 0.5 倍左右。</p>\n<p>逗号比分号要快（神奇）。</p>\n<p>bool 很慢，尽量开 int（疑惑）。</p>\n<p>一些卡常在正规比赛中 禁用 。</p>\n",
            "tags": [
                "学习心得"
            ]
        },
        {
            "id": "http://红叶.top/2023/05/23/computer-science/notes/%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90/",
            "url": "http://红叶.top/2023/05/23/computer-science/notes/%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90/",
            "title": "复杂度分析",
            "date_published": "2023-05-23T07:49:38.072Z",
            "content_html": "<p>算法的总的运行时间 = 运行的总代码行数。<br />\n时间复杂度，也就是指算法的运行时间（算法的速度指的并非时间，而是操作数的增速算法运行时间是从其增速的角度度量的）<br />\n空间复杂度和时间复杂度一样，反映的也是一种趋势，只不过这种趋势是代码运行过程中临时变量占用的内存空间，表示算法的存储空间与数据规模之间的增长关系。</p>\n<p>大 O 复杂度表示法：<br />\n算法的执行效率，粗略地讲，就是算法代码的执行时间。我们假设每行代码执行的时间都一样，都是 1 个单位时间，从而算出一段代码总的执行时间为多少个单位时间，然后将公式中的低阶、常量、系数这三个不左右增长趋势的部分忽略，只记录最大量级的表示法。<br />\n用 T [n] 表示代码的执行时间，n 表示数据规模的大小，f (n) 表示每行代码执行的次数总和，算法执行时间的公式为：T [n]=O (f (n))<br />\n 例：T (n)=2n+2 就可以记为 T (n)=O (n)，T (n)=n^2 + 2 就可以记为 T (n)=O (n^2)<br />\n 这就是大 O 时间复杂度表示法，大 O 时间复杂度实际上并不具体表示代码真正的执行时间，而是表示代码执行时间随数据规模增长的变化趋势，也叫做渐进时间复杂度，简称时间复杂度</p>\n<p>时间复杂度的几条基本计算规则<br />\n 1、基本操作，即只有常数项，认为其时间复杂度为 O (1)<br />\n 2、顺序结构，时间复杂度按加法进行计算。比如一个算法复杂度为 O (n) 的结构和一个算法复杂度为 O (n<sup>2) 的结构相加，即 O (n</sup>2  + n)，简化为 O (n^2)<br />\n 3、循环结构，时间复杂度按乘法进行计算，比如外层循环为进行 n 次，内层为从 0 加到 100，那么内层的时间复杂度为 O (100)，外层要进行 n 次，则总体的时间复杂度为 O (100n)，简化为 O (n)。<br />\n4、分支结构，时间复杂度取最大值</p>\n<p>主定理：<br />\n在时间复杂度的计算中，有一类问题的计算比较困难，这种问题就是递归问题，比如对于归并排序（Merge Sort）来说，每一层的复杂度为：<br />\nT(n) = 2T(n/2) + n<br />\n 其中 T (n) 代表了当前层的时间复杂度，代表了将当前层的数据进行分解和将返回当前层的数据进行合并所需要的时间复杂度。<br />\n在递归问题中，时间复杂度计算的难点在于，如果要计算当前层，就需要首先得到下一层的时间复杂度，而为了计算下一层，又要计算下下层的时间复杂度，这就造成了计算困难。<br />\n为了能够快速得到递归算法的时间复杂度，可以使用主定理：<br />\nT(n) = aT(n/b) + f(n^d)<br />\n 其中，n 是问题规模大小，a 是原问题的子问题个数，n/b 是每个子问题的大小，这里假设每个子问题有相同的规模大小，f (n^d) 是将原问题分解成子问题和将子问题的解合并成原问题的解的时间</p>\n<p>常见时间复杂度：O (1) &lt; O (logn) &lt; O (n) &lt; O (nlogn) &lt; O (n^2) &lt; O (n^3) &lt; O (2^n) &lt; O (n!) &lt; O (n^n)<br />\n1、O(1):<br />\nO (1) 只是常量级时间复杂度的一种表示方法，并不是指只执行了一行代码。只要代码的执行时间不随着 n 的增大而增长，这样代码的时间复杂度我们都记作 O (1)。一般情况下，只要算法中不存在循环语句、递归语句，即使有成千上万行代码，其时间复杂度也是 O (1)。<br />\n2、O(logn)、O(nlogn)：<br />\n例：\tint i=1;<br />\nwhile(i&lt;=n){i=i<em>2;}<br />\n 从代码中可以看出，变量的值从 1 开始取，每循环一次就可以乘以 2。当大于 n 时，循环结束。所以 2x=n，所以 x=log2n，这段代码的时间复杂度就是 O (log2n)。实际上，不管是以 2 为底，还是以 3 为底，我们可以把所有对数阶的时间复杂度都记为 O (logn)。<br />\n而 O (nlogn) 就是在循环内嵌套了一个时间复杂度为 O (logn) 的代码。O (nlogn) 是一种非常常见的算法时间复杂度。比如，归并排序、快速排序的时间复杂度都是 O (nlogn)<br />\n3、O(m+n)、O(m</em>n)：<br />\n例：\tfor (int i=0;i&lt;m;i++){<br />\nSystem.out.println(&quot;m&quot;);}<br />\nfor(int j=0;j&lt;n;j++){<br />\nSystem.out.println(&quot;n&quot;);}<br />\n 从代码中可以看出，m 和 n 是表示两个数据规模。我们无法事先评估 m 和 n 谁的量级大，所以我们在表示复杂度的时候，就不能简单的利用加法法则，省略掉其中一个。所以上面的代码的复杂度是 O (m+n)。<br />\n这样我们的加法法则就不正确了，需要将加法规则改为：T (n)=T1 (m)+T2 (n)=O (m)+O (n)=O (m+n)，但是乘法法则继续有效：T (n)=T1 (m) x T2 (n)=O (m) x O (n)=O (m*n)</p>\n<p>平均时间复杂度：（算法完成工作平均需要多少基本操作）<br />\n​ 指的是概率论中的加权平均值，也叫作期望值，所以平均时间复杂度的全称应该叫加权平均时间复杂度或者期望时间复杂度<br />\n公式：A (n) = ∑ I ∈ S P I t I A (n) = <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><munder><mo>∑</mo><mrow><mi>I</mi><mo>∈</mo><mi>S</mi></mrow></munder><msub><mi>P</mi><mi>I</mi></msub><msub><mi>t</mi><mi>I</mi></msub><mi>A</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\sum\\limits_{I\\in S}P_I t_IA(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.771711em;vertical-align:-1.021706em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.750005em;\"><span style=\"top:-2.105664em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">I</span><span class=\"mrel mtight\">∈</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span></span></span></span><span style=\"top:-3.0000050000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop op-symbol small-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.021706em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">I</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">I</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">A</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>=I∈S∑​PI​tI<br />\n 其中 A (n) 表示平均时间复杂度，S 是规模为 n 的实例集，实例 i 的概率为 Pi, 算法对实例 i 执行的基本运算次数是 ti。</p>\n",
            "tags": [
                "学习心得"
            ]
        },
        {
            "id": "http://红叶.top/2023/05/23/computer-science/notes/%E6%8E%92%E5%BA%8F/",
            "url": "http://红叶.top/2023/05/23/computer-science/notes/%E6%8E%92%E5%BA%8F/",
            "title": "排序",
            "date_published": "2023-05-23T07:49:38.072Z",
            "content_html": "<h1 id=\"概念\"><a class=\"anchor\" href=\"#概念\">#</a> 概念：</h1>\n<pre><code>所谓排序，就是把一堆杂乱的数据，排成升序或降序(递增/增减)。\n排序稳定性： 假设一组数据[1,2,9,5,5,6,8]，进行升序排序后，两个5的相应位置不发生改变，即称为稳定的排序，否则就是不稳定排序。\n\n内部排序： 数据元素全部放在内存中进行排序。\n外部排序： 即将待排序的记录存储在外存中，排序时再把数据一部分一部分地调入内存进行排序，在排序过程中需要多次进行内存和外存之间地交换。\n</code></pre>\n<h1 id=\"理解\"><a class=\"anchor\" href=\"#理解\">#</a> 理解</h1>\n<h2 id=\"1-插入排序\"><a class=\"anchor\" href=\"#1-插入排序\">#</a> 1. 插入排序</h2>\n<p>思路：</p>\n<pre><code>默认为第一个元素自己是有序的，从第二个元素开始。取出第二个元素tmp，往前进行比较。若该元素比tmp大，则将该元素往后移一位，直到找到比tmp小的。找到比tmp小于等于的元素后，tmp插入到该元素的下一位。循环2~4步骤。\n</code></pre>\n<p>步骤具体实现：</p>\n<pre><code>定义下标 i ，遍历数组。默认 i 下标已经是有序的，把i下标元素存入tmp。定义 j，j 从 i-1 的位置，开始向前遍历，遇到比 tmp大的元素，就把此时j下标的元素往后移一位，直到下标等于或小于0停止。j下标元素小于tmp，则把tmp元素插入该j下标的下一个位置。\n</code></pre>\n<p>时间复杂度： O (N^2);</p>\n<p>空间复杂度： O (1);</p>\n<p>稳定性： 稳定；</p>\n<p>具体代码实现：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">insertSort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token comment\">//1. 遍历数组</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> array<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token keyword\">int</span> tmp <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token comment\">//2. 往前遍历，进行插入</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">;</span>j <span class=\"token operator\">>=</span><span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> j<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> tmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                    <span class=\"token keyword\">int</span> exchange  <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                    array<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                    array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> exchange<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                    <span class=\"token comment\">// 没有比 tmp 小的，退出循环</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token comment\">//3. 此时 j 下标元素比 tmp 小，tmp 插入 j 下标的下一个位置</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            array<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tmp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>结论：</p>\n<pre><code>当数据趋于有序时，排序时间越快，最好的情况下时间复杂度为O(N);当把循环中 array[j] &gt; tmp的大于号改为大于等于，此时就不是稳定的排序了。\n</code></pre>\n<h2 id=\"2-希尔排序\"><a class=\"anchor\" href=\"#2-希尔排序\">#</a> 2. 希尔排序</h2>\n<p>思路：</p>\n<pre><code>先将待排序列进行预排序，使得待排序列接近有序，此时进行插入排序。把待排序的数据分为多个组，每组间隔为5或3…。若此组的第一个元素大于最后一个元素，将此组第一个元素和最后一个元素交换。重复上述操作，直到每组间隔只有1时，所有数据都在统一组内进行排好序。\n</code></pre>\n<p>步骤具体实现：</p>\n<pre><code>定义gap = 数组长度\\2。把待排序列分为gap个组，每个组的第一个元素和最后一个元素进行比较交换。重复上述操作当gap为1时，进行插入排序。\n</code></pre>\n<p>时间复杂度： O (N^1.3);</p>\n<p>空间复杂度： O (1);</p>\n<p>稳定性： 不稳定。</p>\n<p>具体代码实现：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">shell</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">int</span> gap <span class=\"token operator\">=</span> array<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>gap <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            gap <span class=\"token operator\">/=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 分组</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token comment\">//1. 每组头和尾进行比较交换</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> array<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token keyword\">int</span> tmp <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token comment\">//2. 往前遍历，一次步长为 gap</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i<span class=\"token operator\">-</span>gap<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">;</span>j <span class=\"token operator\">>=</span><span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> j<span class=\"token operator\">-=</span>gap<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> tmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                        <span class=\"token keyword\">int</span> exchange  <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                        array<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span>gap<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                        array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> exchange<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                array<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span>gap<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tmp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>结论：</p>\n<pre><code>希尔排序是对插入排序的优化。当gap&gt;1时，都是预排序，目的是为了让数组更趋于有序，当gap==1时，数组已经接近有序，这样进行插入排序就会很快。希尔排序的时间复杂度不容易计算，因为gap的取值方法很多，导致很难计算，因此我们按照Knuth提出的时间复杂度O(N^1.3)来算。\n</code></pre>\n<h2 id=\"3-选择排序\"><a class=\"anchor\" href=\"#3-选择排序\">#</a> 3. 选择排序</h2>\n<p>思路：</p>\n<p>每次从待排序列中选择一个最小值 (最大), 存放在序列的起始位置，直到全部待排序的数据排完。</p>\n<p>步骤具体实现：</p>\n<pre><code>定义i，假设待排序列i下标元素是最小值，用min记录当前i下标。定义j，从i下一个位置开始往后遍历，遇到小于array[min]时更新min，min指向每次遍历的最小值下标，直到遍历完一次数组。一次遍历完后array[i]和min下标进行交换。重复上述操作，直到待排序数据剩余1个元素。\n</code></pre>\n<p>时间复杂度： O (N^2);</p>\n<p>空间复杂度: O (1);</p>\n<p>稳定性： 不稳定；</p>\n<p>具体代码实现：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">selectSort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> array<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token keyword\">int</span> min <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> array<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> array<span class=\"token punctuation\">[</span>min<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                    <span class=\"token comment\">// 更新 min 的值</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                    min <span class=\"token operator\">=</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>min <span class=\"token operator\">!=</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token keyword\">int</span> tmp <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>min<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                array<span class=\"token punctuation\">[</span>min<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tmp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>结论： 效率不是很好，实际中很少使用。</p>\n<h2 id=\"4-堆排序\"><a class=\"anchor\" href=\"#4-堆排序\">#</a> 4. 堆排序</h2>\n<p>注意：排升序需要建大根堆，排降序建小根堆。 此文章默认举例排升序。</p>\n<p>思路 &amp; 具体步骤实现：</p>\n<pre><code>首先得建立一个大根堆。把根节点与最后一个节点交换，每一次交换，最后一个节点向前走一步。进行堆向下调整。\n</code></pre>\n<p>时间复杂度： O (N*logN)；</p>\n<p>空间复杂度： O (1);</p>\n<p>稳定性： 不稳定；</p>\n<p>具体代码实现：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">heapSort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token comment\">//0. 创建大根堆</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token function\">createHeap</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 时间 O (N)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">int</span> end <span class=\"token operator\">=</span> array<span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>end <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token comment\">//1. 每次根和最后一个节点交换</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">int</span> tmp <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            array<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>end<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            array<span class=\"token punctuation\">[</span>end<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tmp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token comment\">//2. 向下调整 </span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token function\">shiftDown</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token comment\">//3. 最后一个节点已经是有升序的了</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            end<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">createHeap</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\">//(array.length-1-1)-> 减一个 1 是数组下标是从 0 开始的，</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\">// 减两个 1 是二叉树的概念：已知孩子节点求父亲节点 ->(i-1)/2</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> parent <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span> parent <span class=\"token operator\">>=</span><span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> parent<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token comment\">// 向下调整</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token function\">shiftDown</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>parent<span class=\"token punctuation\">,</span>array<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">shiftDown</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> parent<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">int</span> child <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>parent<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>child <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>child<span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> len <span class=\"token operator\">&amp;&amp;</span> array<span class=\"token punctuation\">[</span>child<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> array<span class=\"token punctuation\">[</span>child<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                child<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>child<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> array<span class=\"token punctuation\">[</span>parent<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                <span class=\"token keyword\">int</span> tmp <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>child<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                array<span class=\"token punctuation\">[</span>child<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>parent<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                array<span class=\"token punctuation\">[</span>parent<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tmp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                <span class=\"token comment\">// 继续向下调整</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                parent <span class=\"token operator\">=</span> child<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                child <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>parent<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"5-冒泡排序\"><a class=\"anchor\" href=\"#5-冒泡排序\">#</a> 5. 冒泡排序</h2>\n<p>思路： 根据序列中的两个记录键值比较结果来交换这两个记录在序列中的位置，交换排序的特点是：将键值较大的记录向序列的尾部移动，键值较小的向前部移动。</p>\n<p>具体步骤实现：</p>\n<pre><code>定义i遍历数组，控制趟数，总体趟数比数组长度少1；每趟让一个较大值移动到尾部。定义j每次从0下标进行两两比较交换。\n</code></pre>\n<p>时间复杂度： O (N^2)；</p>\n<p>空间复杂度： O (1)；</p>\n<p>稳定性： 稳定；</p>\n<p>具体代码实现：此处冒泡排序代码作了优化。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">bubbleSort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> array<span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token keyword\">boolean</span>  flag <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 判断此趟排序有没有交换</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> array<span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> array<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                    <span class=\"token keyword\">int</span> tmp <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                    array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                    array<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tmp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                    flag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token comment\">// 若 flag 一趟下来为 false 说明数组已经有序</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>flag <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"6快速排序\"><a class=\"anchor\" href=\"#6快速排序\">#</a> 6. 快速排序</h2>\n<p>基本思想：任取待排序元素中的某元素作为基准值，将待排序集合分割为两子序，左子序中所有元素均小于 基准值，右子序均大于 基准值，然后左右子序重复该过程，直到所有元素都排列在相应位置上。</p>\n<h3 id=\"61-hoare版\"><a class=\"anchor\" href=\"#61-hoare版\">#</a> 6.1 Hoare 版</h3>\n<p>思路：</p>\n<pre><code>取数组最左边或最右边为key。先从右边开始找到小于key值。再从左边走找到大于key值，左右进行交换。左右相遇后，相遇点为此次遍历的基准值最后与key位置交换。\n</code></pre>\n<p>具体实现步骤：</p>\n<pre><code>定义key，指向数组最左边的元素。定义left从数组左边开始遍历；定义right从右边开始遍历。一定要right先走，再走left。当right和left相遇后，与key交换，相遇点为基准值。遍历以该基准值分割的两子序。递归重复上述操作。\n</code></pre>\n<p>具体代码实现：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">quickSort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token function\">quickHelp</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>array<span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 具体实现排序调用函数</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">quickHelp</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> start<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>start <span class=\"token operator\">>=</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">//1. 找基准值</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">int</span> pivot <span class=\"token operator\">=</span> <span class=\"token function\">hoare</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>start<span class=\"token punctuation\">,</span>end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">//2. 左右子序重复该操作</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token function\">quickHelp</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>start<span class=\"token punctuation\">,</span>pivot<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token function\">quickHelp</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>pivot<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">hoare</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> left <span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">int</span> index <span class=\"token operator\">=</span> left<span class=\"token punctuation\">;</span><span class=\"token comment\">// 记录 key 下标</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">int</span> key <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;</span> right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token comment\">//1. 先从右 找到比 key 小的值</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;</span> right <span class=\"token operator\">&amp;&amp;</span> array<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                right<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token comment\">//2. 再从左找到比 key 大的值</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;</span> right <span class=\"token operator\">&amp;&amp;</span> array<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                left<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token comment\">//3. 交换左右值</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token keyword\">int</span> tmp <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            array<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span>  <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            array<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tmp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token comment\">//4. 相遇点和 key 下标交换</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">int</span> tmp <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        array<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span>  <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        array<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tmp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">return</span> left<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>代码优化：</p>\n<p>此排序，递归下去就好像一颗二叉树，当排序的是有序时，就只有左子树或者只有右子树，此时排序的时间复杂度最高，所有：在找基准值先，尽量让左右子树划分平衡。当递归到一定层数是进行插入排序，因为越往下层遍历，这一层的递归次数越多，比如第一层递归 2 次，第二次递归 4 次…。</p>\n<p>步骤：</p>\n<pre><code>设定一个边界值，达到边界值时进行插入排序。保证每次划分均匀：（3个数找中数）\n如待排序：1 2 3 4 5 把1和3和5进行比较，找出中间值，把最左边值和中间值交换。\n</code></pre>\n<p>具体代码实现：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">quickSort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token function\">quickHelp</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>array<span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// 具体实现排序调用函数</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">quickHelp</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> start<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>start <span class=\"token operator\">>=</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">// 对 start - end 区间进行插入排序</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>start <span class=\"token operator\">&lt;=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token function\">insertSortHelp</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>start<span class=\"token punctuation\">,</span>end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">// 在找基准前尽量保证左右划分均匀</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">int</span> index <span class=\"token operator\">=</span> <span class=\"token function\">findMin</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>start<span class=\"token punctuation\">,</span>end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>start<span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\">//1. 找基准值</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">int</span> pivot <span class=\"token operator\">=</span> <span class=\"token function\">hoare</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>start<span class=\"token punctuation\">,</span>end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\">//2. 左右子序重复该操作</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token function\">quickHelp</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>start<span class=\"token punctuation\">,</span>pivot<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token function\">quickHelp</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>pivot<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">insertSortHelp</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> left<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> left<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> right<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token keyword\">int</span> tmp <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">;</span>j <span class=\"token operator\">>=</span><span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> j<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> tmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                    <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">,</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            array<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tmp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">findMin</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> left<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">int</span> midIndex <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>left<span class=\"token operator\">+</span>right<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> array<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> array<span class=\"token punctuation\">[</span>midIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                <span class=\"token keyword\">return</span> left<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> array<span class=\"token punctuation\">[</span>midIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                <span class=\"token keyword\">return</span> right<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                <span class=\"token keyword\">return</span> midIndex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span><span class=\"token comment\">//array[left] > array[right]</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> array<span class=\"token punctuation\">[</span>midIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                <span class=\"token keyword\">return</span> left<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> array<span class=\"token punctuation\">[</span>midIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                <span class=\"token keyword\">return</span> right<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                <span class=\"token keyword\">return</span> midIndex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">hoare</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> left <span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token keyword\">int</span> index <span class=\"token operator\">=</span> left<span class=\"token punctuation\">;</span><span class=\"token comment\">// 记录 key 下标</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token keyword\">int</span> key <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;</span> right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            <span class=\"token comment\">//1. 先从右 找到比 key 小的值</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>            <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;</span> right <span class=\"token operator\">&amp;&amp;</span> array<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                right<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>            <span class=\"token comment\">//2. 再从左找到比 key 大的值</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;</span> right <span class=\"token operator\">&amp;&amp;</span> array<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                left<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>            <span class=\"token comment\">//3. 交换左右值</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>            <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>left<span class=\"token punctuation\">,</span>right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token comment\">//4. 相遇点和 key 下标交换</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>       <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>left<span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token keyword\">return</span> left<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        <span class=\"token keyword\">int</span> tmp <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tmp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"62-挖坑法\"><a class=\"anchor\" href=\"#62-挖坑法\">#</a> 6.2 挖坑法</h3>\n<p>思路：</p>\n<p>大致思路根 Hoare 版本类似；</p>\n<pre><code>选最左边的元素存入key，在此位置形成一个坑位；先从右开始遍历和key比较，再从左遍历，进行左右交换。左右相交后，把key的放入相交点位置。\n</code></pre>\n<p>具体实现步骤：</p>\n<pre><code>先将第一个元素存入临时变量key，形成一个坑位。定义left从数组左边开始走、right从右边开始走。先从右开始遍历找到比key小的元素，放入left的位置；然后left找到比key大的元素，放入right的位置。待left和right下标相遇后，把key的元素放入相交点。重复上述操作。\n</code></pre>\n<p>具体代码实现【递归】：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">digSort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> start <span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>       <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>start <span class=\"token operator\">>=</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>           <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>       <span class=\"token keyword\">int</span> left <span class=\"token operator\">=</span> start<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>       <span class=\"token keyword\">int</span> right <span class=\"token operator\">=</span> end<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>       <span class=\"token keyword\">int</span> key <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>       <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;</span> right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>           <span class=\"token comment\">//1. 先从右开始 找到比 key 小的</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>           <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;</span> right <span class=\"token operator\">&amp;&amp;</span> array<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>               right<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>           <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>           <span class=\"token comment\">//2. 把小值填入左边的坑位</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>           array<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>           <span class=\"token comment\">//3. 再从左开始 找到比 key 大的</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>           <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;</span> right <span class=\"token operator\">&amp;&amp;</span> array<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>               left<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>           <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>           <span class=\"token comment\">//4. 把大值填入右边的坑位</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>           array<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>       array<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> key<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>       <span class=\"token comment\">// 递归</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token function\">digSort</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>start<span class=\"token punctuation\">,</span>left<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 遍历 key 左边</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token function\">digSort</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>left<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 遍历 key 右边</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"63-前后指针法\"><a class=\"anchor\" href=\"#63-前后指针法\">#</a> 6.3 前后指针法</h3>\n<p>了解即可，见得比较少，整体思路大体一样。</p>\n<pre><code>定义key存储数组起始元素，prev指向数组开始位置；cur指prev后一个位置。当cur下标元素小于key，prev向后走，并且此时prev下标的元素不等于cur下标元素，则进行交换否则cur一直往后走，当cur走完时，prev下标和数组最左边左边下标交换。递归重复上述操作。\n</code></pre>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">quick</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> start<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>start <span class=\"token operator\">>=</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">int</span> pivot <span class=\"token operator\">=</span> <span class=\"token function\">partition</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>start<span class=\"token punctuation\">,</span>end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token function\">quick</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>start<span class=\"token punctuation\">,</span>pivot<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token function\">quick</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>pivot<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">partition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> left<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> right<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">int</span> prev <span class=\"token operator\">=</span> left <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">int</span> cur <span class=\"token operator\">=</span> left<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>cur <span class=\"token operator\">&lt;=</span> right<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>cur<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> array<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> array<span class=\"token punctuation\">[</span><span class=\"token operator\">++</span>prev<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> array<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>cur<span class=\"token punctuation\">,</span>prev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            cur<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>prev<span class=\"token punctuation\">,</span>left<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">return</span> prev<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"64-快速排序非递归\"><a class=\"anchor\" href=\"#64-快速排序非递归\">#</a> 6.4 快速排序非递归</h3>\n<p>思路：使用栈，模拟递归</p>\n<pre><code>先找到基准判断基准左右是否存在两个元素及以上。把以基准为界左边的数组最左边下标和最右边下标入栈再基准右边的数组最左边下标和最右边下标入栈弹出栈顶两个下标，对此下标区间再进行找基准【弹出顺序：先右后左】重复上述操作。快速排序非递归最重要的就是找基准。\n</code></pre>\n<p>具体代码实现：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">quickSort2</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token class-name\">Stack</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> stack <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Stack</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">int</span> left <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">int</span> right <span class=\"token operator\">=</span> array<span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">// 找基准</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">int</span> pivot <span class=\"token operator\">=</span> <span class=\"token function\">finMid</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>left<span class=\"token punctuation\">,</span>right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 排序核心代码</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">//1. 判断基准左边有没有 2 个元素    1   2    3    4    5    9</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>pivot <span class=\"token operator\">></span> left<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>       <span class=\"token comment\">// 若基准：3    left:1    pivot &lt; left+1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token comment\">// 把最左边和最右边的下标入栈</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            stack<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            stack<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>pivot<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">//2. 判断基准右边有没有 2 个元素</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>pivot <span class=\"token operator\">&lt;</span> right<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token comment\">// 把最左边和最右边的下标入栈</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            stack<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>pivot<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            stack<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token comment\">//3. 弹出 2 个元素，重复上述操作</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>stack<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token comment\">// 注意弹出顺序：先右和左</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            right <span class=\"token operator\">=</span> stack<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            left <span class=\"token operator\">=</span> stack<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            pivot <span class=\"token operator\">=</span> <span class=\"token function\">partition</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>left<span class=\"token punctuation\">,</span>right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>pivot <span class=\"token operator\">></span> left<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                stack<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                stack<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>pivot<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>pivot <span class=\"token operator\">&lt;</span> right<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                stack<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>pivot<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                stack<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre> <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">finMid</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> left <span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">int</span> index <span class=\"token operator\">=</span> left<span class=\"token punctuation\">;</span><span class=\"token comment\">// 记录 key 下标</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">int</span> key <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;</span> right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token comment\">//1. 先从右 找到比 key 小的值</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;</span> right <span class=\"token operator\">&amp;&amp;</span> array<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                right<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token comment\">//2. 再从左找到比 key 大的值</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;</span> right <span class=\"token operator\">&amp;&amp;</span> array<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                left<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token comment\">//3. 交换左右值</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>left<span class=\"token punctuation\">,</span>right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token comment\">//4. 相遇点和 key 下标交换</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>       <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>left<span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token keyword\">return</span> left<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>快速排序总结：</p>\n<pre><code>综合性能和使用场景比较好。一般快速排序三种方法使用顺序：挖坑法-&gt;Hoare法-&gt;前后指针法\n</code></pre>\n<h2 id=\"7-归并排序\"><a class=\"anchor\" href=\"#7-归并排序\">#</a> 7. 归并排序</h2>\n<p>核心思想：分而治之</p>\n<p>即：将待排序列拆分，再合并成为有序序列。</p>\n<pre><code>先把序列逐层进行拆分：\n\n当拆分到只有一个元素时，再从下往上逐层合并，首先对第一层序列号1(元素4)，和序列号2(元素5)进行合并\n</code></pre>\n<p>1. 创建一个大数组，长度为序列号 1 和序列号 2 长度之和，s1、s2 指针分别指向两个小序列号 (数组) 的第一个元素，ret 指向大数组的第一个元素。</p>\n<p>2. 比较 [s1]、[s2] 指向的元素，4&lt;5，将 4 放入 ret 指向的空间，ret 往右走一步，s1 往右走一步。</p>\n<p>3. 此时序列号 1 (数组) 已经没有元素，直接将序列号 2 的元素放入大数组中。</p>\n<p>4.[8] 和 [1]、[7] 和 [2]、[6] 和 [3]，用同样方式进行合并。</p>\n<p>5. 以 [4,5] 为序列 1，[1,8] 为序列 2，继续进行合并。</p>\n<p>6.[4] 和 [1] 比较，4&gt;1，把 [1] 放入 ret 指向的空间，[s2] 往右走一步。</p>\n<p>7. 重复上述操作，直到把 [4,5] 和 [1,8] 合并成【1,4,5,8】。</p>\n<p>以 [2,7] 为序列 3，[3,6] 为序列 4，用同样的方式合并成为新的序列【2,3,6,7】；</p>\n<p>8. 最后将 [1,4,5,8] 和 [2,3,6,7] 用同样的方式合并成新的序列</p>\n<p>时间复杂度：O (N*logN) ： 归并排序算法每次将序列折半分组，共需要 logN 轮。</p>\n<p>空间复杂度：O (N)： 归并排序算法排序过程中需要额外的一个序列去存储排序后的结果，所占空间是 N。</p>\n<p>稳定性：稳定</p>\n<p>具体代码实现：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">merge</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> start<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>start <span class=\"token operator\">>=</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">//1. 分解</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">int</span> mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>start<span class=\"token operator\">+</span>end<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 折半递归</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token function\">merge</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>start<span class=\"token punctuation\">,</span>mid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token function\">merge</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>mid<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">//2. 合并 合并两个小数组为一个大数组</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token function\">mergeHelp</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>start<span class=\"token punctuation\">,</span>mid<span class=\"token punctuation\">,</span>end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">mergeHelp</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> left<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> mid<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token comment\">// 这里直接合并 [4,5] 和 [1,8], 因为 [4] 和 [5] 两个数组太小了，不好理解</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">// 第一个小数组下标范围</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">int</span> s1 <span class=\"token operator\">=</span> left<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">int</span> e1 <span class=\"token operator\">=</span> mid<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\">// 第二个小数组下标范围</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">int</span> s2 <span class=\"token operator\">=</span> mid<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">int</span> e2 <span class=\"token operator\">=</span> right<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\">// 合并的大数组</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> ret <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>right<span class=\"token operator\">-</span>left<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//ret 下标</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>s1 <span class=\"token operator\">&lt;=</span> e1 <span class=\"token operator\">&amp;&amp;</span> s2 <span class=\"token operator\">&lt;=</span> e2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token comment\">// 进行比较</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> array<span class=\"token punctuation\">[</span>s1<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> array<span class=\"token punctuation\">[</span>s2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                ret<span class=\"token punctuation\">[</span>k<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>s1<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                ret<span class=\"token punctuation\">[</span>k<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>s2<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token comment\">// 存放剩余的有序元素</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>s1 <span class=\"token operator\">&lt;=</span> e1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            ret<span class=\"token punctuation\">[</span>k<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>s1<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>s2 <span class=\"token operator\">&lt;=</span> e2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            ret<span class=\"token punctuation\">[</span>k<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>s2<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token comment\">// 把合并完的有序元素，放入原来的数组里 -> 所有归并排序空间复杂度高</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> k<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token comment\">//+left 因为每次合并 ret 存的元素对应的 array 下标在发生变化</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token comment\">// 若存入给 ret 的 5 6 7 8 对应原数组下标为 4 5 6 7</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token comment\">// 那 + left (4)，刚好存入原数组正确的位置</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            array<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span>left<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> ret<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"非递归版本模拟递归\"><a class=\"anchor\" href=\"#非递归版本模拟递归\">#</a> 非递归版本：【模拟递归】</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">mergerSort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">int</span> gap <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 模拟递归到每组序列只有一个元素</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>gap <span class=\"token operator\">&lt;</span> array<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token comment\">// 合并</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> array<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">+=</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>gap<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                <span class=\"token keyword\">int</span> left <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token keyword\">int</span> mid <span class=\"token operator\">=</span> left<span class=\"token operator\">+</span>gap<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token comment\">// 判断越界</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mid <span class=\"token operator\">>=</span> array<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                    mid <span class=\"token operator\">=</span> array<span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token keyword\">int</span> right <span class=\"token operator\">=</span> mid<span class=\"token operator\">+</span>gap<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token comment\">// 判断越界</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>right <span class=\"token operator\">>=</span> array<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                     right <span class=\"token operator\">=</span> array<span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token function\">mergeHelp</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>left<span class=\"token punctuation\">,</span>mid<span class=\"token punctuation\">,</span>right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            gap <span class=\"token operator\">*=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">mergeHelp</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> left<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> mid<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token comment\">// 第一个小数组下标范围</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">int</span> s1 <span class=\"token operator\">=</span> left<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">int</span> e1 <span class=\"token operator\">=</span> mid<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token comment\">// 第二个小数组下标范围</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">int</span> s2 <span class=\"token operator\">=</span> mid<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">int</span> e2 <span class=\"token operator\">=</span> right<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token comment\">// 合并的大数组</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> ret <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>right<span class=\"token operator\">-</span>left<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//ret 下标</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>s1 <span class=\"token operator\">&lt;=</span> e1 <span class=\"token operator\">&amp;&amp;</span> s2 <span class=\"token operator\">&lt;=</span> e2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token comment\">// 进行比较</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> array<span class=\"token punctuation\">[</span>s1<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> array<span class=\"token punctuation\">[</span>s2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                ret<span class=\"token punctuation\">[</span>k<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>s1<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                ret<span class=\"token punctuation\">[</span>k<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>s2<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token comment\">// 存放剩余的有序元素</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>s1 <span class=\"token operator\">&lt;=</span> e1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            ret<span class=\"token punctuation\">[</span>k<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>s1<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>s2 <span class=\"token operator\">&lt;=</span> e2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            ret<span class=\"token punctuation\">[</span>k<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>s2<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> k<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            array<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span>left<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> ret<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结：</h1>\n<pre><code>归并的缺点是需要O(N)的空间复杂度。归并排序的思想更多是在解决磁盘中的外排序问题。\n</code></pre>\n<h2 id=\"8-排序算法复杂度及稳定性分析\"><a class=\"anchor\" href=\"#8-排序算法复杂度及稳定性分析\">#</a> 8. 排序算法复杂度及稳定性分析</h2>\n<table>\n<thead>\n<tr>\n<th>排序方法</th>\n<th>最好时间复杂度</th>\n<th>平均时间复杂度</th>\n<th>最坏时间复杂度</th>\n<th>空间复杂度</th>\n<th>稳定性</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>选择排序</td>\n<td>O(n^2)</td>\n<td>O(n^2)</td>\n<td>O(n^2)</td>\n<td>O(1)</td>\n<td>不稳定</td>\n</tr>\n<tr>\n<td>插入排序</td>\n<td>O(n)</td>\n<td>O(n^2)</td>\n<td>O(n^2)</td>\n<td>O(1)</td>\n<td>稳定</td>\n</tr>\n<tr>\n<td>希尔排序</td>\n<td>O(n)</td>\n<td>O(N^1.3)</td>\n<td>O(n^2)</td>\n<td>O(1)</td>\n<td>不稳定</td>\n</tr>\n<tr>\n<td>冒泡排序</td>\n<td>O(n)</td>\n<td>O(n^2)</td>\n<td>O(n^2)</td>\n<td>O(1)</td>\n<td>稳定</td>\n</tr>\n<tr>\n<td>快速排序</td>\n<td>O(n * log(n))</td>\n<td>O(n * log(n))</td>\n<td>O(n^2)</td>\n<td>O(logn)~O(n)</td>\n<td>不稳定</td>\n</tr>\n<tr>\n<td>堆排序</td>\n<td>O(n * log(n))</td>\n<td>O(n * log(n))</td>\n<td>O(n * log(n))</td>\n<td>O(1)</td>\n<td>不稳定</td>\n</tr>\n<tr>\n<td>归并排序</td>\n<td>O(n * log(n))</td>\n<td>O(n * log(n))</td>\n<td>O(n * log(n))</td>\n<td>O(1)</td>\n<td>稳定</td>\n</tr>\n</tbody>\n</table>\n",
            "tags": [
                "学习心得"
            ]
        },
        {
            "id": "http://红叶.top/2023/05/23/computer-science/notes/%E7%AE%97%E6%B3%95%E4%BB%A3%E7%A0%81%E6%A8%A1%E6%9D%BF/",
            "url": "http://红叶.top/2023/05/23/computer-science/notes/%E7%AE%97%E6%B3%95%E4%BB%A3%E7%A0%81%E6%A8%A1%E6%9D%BF/",
            "title": "算法板子",
            "date_published": "2023-05-23T07:49:38.072Z",
            "content_html": "<h1 id=\"算法代码模板\"><a class=\"anchor\" href=\"#算法代码模板\">#</a> 算法代码模板</h1>\n<h2 id=\"第一章-基础算法\"><a class=\"anchor\" href=\"#第一章-基础算法\">#</a> 第一章 基础算法</h2>\n<h3 id=\"快速排序\"><a class=\"anchor\" href=\"#快速排序\">#</a> 快速排序</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">quick_sort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> q<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> l<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> r<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">>=</span> r<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> l <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> r <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> x <span class=\"token operator\">=</span> q<span class=\"token punctuation\">[</span>l <span class=\"token operator\">+</span> r <span class=\"token operator\">>></span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> j<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">do</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">do</span> j <span class=\"token operator\">--</span> <span class=\"token punctuation\">;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> j<span class=\"token punctuation\">)</span> <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token function\">quick_sort</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">quick_sort</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">,</span> j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"归并排序\"><a class=\"anchor\" href=\"#归并排序\">#</a> 归并排序</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">merge_sort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> q<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> l<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> r<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">>=</span> r<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">int</span> mid <span class=\"token operator\">=</span> l <span class=\"token operator\">+</span> r <span class=\"token operator\">>></span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">merge_sort</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">,</span> mid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">merge_sort</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">,</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">=</span> l<span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;=</span> mid <span class=\"token operator\">&amp;&amp;</span> j <span class=\"token operator\">&lt;=</span> r<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> q<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> tmp<span class=\"token punctuation\">[</span>k <span class=\"token operator\">++</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> q<span class=\"token punctuation\">[</span>i <span class=\"token operator\">++</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">else</span> tmp<span class=\"token punctuation\">[</span>k <span class=\"token operator\">++</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> q<span class=\"token punctuation\">[</span>j <span class=\"token operator\">++</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;=</span> mid<span class=\"token punctuation\">)</span> tmp<span class=\"token punctuation\">[</span>k <span class=\"token operator\">++</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> q<span class=\"token punctuation\">[</span>i <span class=\"token operator\">++</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">&lt;=</span> r<span class=\"token punctuation\">)</span> tmp<span class=\"token punctuation\">[</span>k <span class=\"token operator\">++</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> q<span class=\"token punctuation\">[</span>j <span class=\"token operator\">++</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> l<span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> r<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span><span class=\"token punctuation\">,</span> j <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> q<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tmp<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"整数二分算法\"><a class=\"anchor\" href=\"#整数二分算法\">#</a> 整数二分算法</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">bool</span> <span class=\"token function\">check</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">/* ... */</span><span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">// 检查 x 是否满足某种性质</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 区间 [l, r] 被划分成 [l, mid] 和 [mid + 1, r] 时使用：</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">bsearch_1</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> l<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> r<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">&lt;</span> r<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">int</span> mid <span class=\"token operator\">=</span> l <span class=\"token operator\">+</span> r <span class=\"token operator\">>></span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>mid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> r <span class=\"token operator\">=</span> mid<span class=\"token punctuation\">;</span>    <span class=\"token comment\">//check () 判断 mid 是否满足性质</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">else</span> l <span class=\"token operator\">=</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">return</span> l<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">// 区间 [l, r] 被划分成 [l, mid - 1] 和 [mid, r] 时使用：</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">bsearch_2</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> l<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> r<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">&lt;</span> r<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">int</span> mid <span class=\"token operator\">=</span> l <span class=\"token operator\">+</span> r <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">>></span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>mid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> l <span class=\"token operator\">=</span> mid<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">else</span> r <span class=\"token operator\">=</span> mid <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">return</span> l<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"浮点数二分算法\"><a class=\"anchor\" href=\"#浮点数二分算法\">#</a> 浮点数二分算法</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">bool</span> <span class=\"token function\">check</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">/* ... */</span><span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">// 检查 x 是否满足某种性质</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">double</span> <span class=\"token function\">bsearch_3</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> l<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> r<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token keyword\">double</span> eps <span class=\"token operator\">=</span> <span class=\"token number\">1e-6</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//eps 表示精度，取决于题目对精度的要求</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">-</span> l <span class=\"token operator\">></span> eps<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">double</span> mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">+</span> r<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>mid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> r <span class=\"token operator\">=</span> mid<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">else</span> l <span class=\"token operator\">=</span> mid<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">return</span> l<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"高精度加法\"><a class=\"anchor\" href=\"#高精度加法\">#</a> 高精度加法</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// C = A + B, A >= 0, B >= 0\t用下标较大的数组存储高位</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span>A<span class=\"token punctuation\">,</span> vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span>B<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> B<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">,</span> A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> C<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">int</span> t <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> A<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        t <span class=\"token operator\">+=</span> A<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> B<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> t <span class=\"token operator\">+=</span> B<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        C<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        t <span class=\"token operator\">/=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> C<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">return</span> C<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">B</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">A</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token class-name\">B</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">B</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span>\t\t</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">C</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t\ttemp <span class=\"token operator\">+=</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> <span class=\"token class-name\">B</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\t\ttemp <span class=\"token operator\">+=</span> <span class=\"token class-name\">B</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\t<span class=\"token class-name\">C</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t\ttemp <span class=\"token operator\">/=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span>\t\t</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t\t<span class=\"token class-name\">C</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token class-name\">Collections</span><span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">C</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token class-name\">C</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getList</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t\tlist<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t\tnum <span class=\"token operator\">/=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> list<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> args<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">123456</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> <span class=\"token number\">654</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">A</span> <span class=\"token operator\">=</span> <span class=\"token function\">getList</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">B</span> <span class=\"token operator\">=</span> <span class=\"token function\">getList</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">C</span> <span class=\"token operator\">=</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">A</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">B</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"高精度减法\"><a class=\"anchor\" href=\"#高精度减法\">#</a> 高精度减法</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// C = A - B, 满足 A >= B, A >= 0, B >= 0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span>A<span class=\"token punctuation\">,</span> vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span>B<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> C<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> t <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> A<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        t <span class=\"token operator\">=</span> A<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> t<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> B<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> t <span class=\"token operator\">-=</span> B<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        C<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> t <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">else</span> t <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>C<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> C<span class=\"token punctuation\">.</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> C<span class=\"token punctuation\">.</span><span class=\"token function\">pop_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">return</span> C<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">sub</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">B</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">C</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> temp <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t\ttemp <span class=\"token operator\">=</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> temp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> <span class=\"token class-name\">B</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t\t\ttemp <span class=\"token operator\">-=</span> <span class=\"token class-name\">B</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t\t<span class=\"token class-name\">C</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t\ttemp <span class=\"token operator\">=</span> temp <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span>\t\t</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">C</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token class-name\">C</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">C</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\t<span class=\"token class-name\">C</span><span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">C</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token class-name\">Collections</span><span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">C</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token class-name\">C</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getList</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t\tlist<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\tnum <span class=\"token operator\">/=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> list<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> args<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">123456</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> <span class=\"token number\">654</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">A</span> <span class=\"token operator\">=</span> <span class=\"token function\">getList</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">B</span> <span class=\"token operator\">=</span> <span class=\"token function\">getList</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">C</span> <span class=\"token operator\">=</span> <span class=\"token function\">sub</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">A</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">B</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"高精度乘低精度\"><a class=\"anchor\" href=\"#高精度乘低精度\">#</a> 高精度乘低精度</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// C = A * b, A >= 0, b >= 0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span>A<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> C<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">int</span> t <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> A<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> t<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> A<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> t <span class=\"token operator\">+=</span> A<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        C<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        t <span class=\"token operator\">/=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>C<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> C<span class=\"token punctuation\">.</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> C<span class=\"token punctuation\">.</span><span class=\"token function\">pop_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">return</span> C<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">mul</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">C</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\t</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> temp <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t\t\ttemp <span class=\"token operator\">+=</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t\t<span class=\"token class-name\">C</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t\ttemp <span class=\"token operator\">/=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\t</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span>\t\t</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">C</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token class-name\">C</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">C</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\t<span class=\"token class-name\">C</span><span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">C</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token class-name\">Collections</span><span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">C</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token class-name\">C</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span>\t</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getList</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t\tlist<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t\tnum <span class=\"token operator\">/=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> list<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> args<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">123456</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> <span class=\"token number\">654</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">A</span> <span class=\"token operator\">=</span> <span class=\"token function\">getList</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">B</span> <span class=\"token operator\">=</span> <span class=\"token function\">getList</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">C</span> <span class=\"token operator\">=</span> <span class=\"token function\">mul</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">654</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"高精度除以低精度\"><a class=\"anchor\" href=\"#高精度除以低精度\">#</a> 高精度除以低精度</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// A / b = C ... r, A >= 0, b > 0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">div</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span>A<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">&amp;</span>r<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> C<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    r <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> A<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">--</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        r <span class=\"token operator\">=</span> r <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">+</span> A<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        C<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>r <span class=\"token operator\">/</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        r <span class=\"token operator\">%=</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span>C<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> C<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>C<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> C<span class=\"token punctuation\">.</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> C<span class=\"token punctuation\">.</span><span class=\"token function\">pop_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">return</span> C<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">div</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> r<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">C</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\tr <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t\tr <span class=\"token operator\">=</span> r <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t\t<span class=\"token class-name\">C</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>r <span class=\"token operator\">/</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t\tr <span class=\"token operator\">%=</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token class-name\">Collections</span><span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">C</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">C</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token class-name\">C</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">C</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t\t<span class=\"token class-name\">C</span><span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">C</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\">Collections</span><span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">C</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token class-name\">C</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getList</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t\tlist<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t\tnum <span class=\"token operator\">/=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> list<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> args<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">123456</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> <span class=\"token number\">654</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">A</span> <span class=\"token operator\">=</span> <span class=\"token function\">getList</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">B</span> <span class=\"token operator\">=</span> <span class=\"token function\">getList</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">C</span> <span class=\"token operator\">=</span> <span class=\"token function\">div</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">654</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"一维前缀和\"><a class=\"anchor\" href=\"#一维前缀和\">#</a> 一维前缀和</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 求区间 3-5 的前缀和，相当于 1-5 区间的前缀和减去 1-2 区间的前缀和</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>S<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token operator\">+</span> a<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> S<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> S<span class=\"token punctuation\">[</span>l <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h3 id=\"二维前缀和\"><a class=\"anchor\" href=\"#二维前缀和\">#</a> 二维前缀和</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>S<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> 第i行j列格子左上部分所有元素的和</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>以<span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">)</span>为左上角，<span class=\"token punctuation\">(</span>x2<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">)</span>为右下角的子矩阵的和为：</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>S<span class=\"token punctuation\">[</span>x2<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> S<span class=\"token punctuation\">[</span>x1 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> S<span class=\"token punctuation\">[</span>x2<span class=\"token punctuation\">,</span> y1 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> S<span class=\"token punctuation\">[</span>x1 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> y1 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h3 id=\"一维差分\"><a class=\"anchor\" href=\"#一维差分\">#</a> 一维差分</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>给区间<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">]</span>中的每个数加上c：B<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> c<span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">[</span>r <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> c</pre></td></tr></table></figure><h3 id=\"二维差分\"><a class=\"anchor\" href=\"#二维差分\">#</a> 二维差分</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>给以<span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">)</span>为左上角，<span class=\"token punctuation\">(</span>x2<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">)</span>为右下角的子矩阵中的所有元素加上c：</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>S<span class=\"token punctuation\">[</span>x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> c<span class=\"token punctuation\">,</span> S<span class=\"token punctuation\">[</span>x2 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> c<span class=\"token punctuation\">,</span> S<span class=\"token punctuation\">[</span>x1<span class=\"token punctuation\">,</span> y2 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> c<span class=\"token punctuation\">,</span> S<span class=\"token punctuation\">[</span>x2 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> y2 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> c</pre></td></tr></table></figure><h3 id=\"位运算\"><a class=\"anchor\" href=\"#位运算\">#</a> 位运算</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>求n的第k位数字<span class=\"token operator\">:</span> n <span class=\"token operator\">>></span> k <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>返回n的最后一位<span class=\"token number\">1</span>：<span class=\"token function\">lowbit</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> n <span class=\"token operator\">&amp;</span> <span class=\"token operator\">-</span>n</pre></td></tr></table></figure><h3 id=\"双指针算法\"><a class=\"anchor\" href=\"#双指针算法\">#</a> 双指针算法</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">&lt;</span> i <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">check</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> j <span class=\"token operator\">++</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// 具体问题的逻辑</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>常见问题分类：</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> 对于一个序列，用两个指针维护一段区间</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> 对于两个序列，维护某种次序，比如归并排序中合并两个有序序列的操作</pre></td></tr></table></figure><h3 id=\"离散化\"><a class=\"anchor\" href=\"#离散化\">#</a> 离散化</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> alls<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 存储所有待离散化的值</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>alls<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> alls<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 将所有值排序</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>alls<span class=\"token punctuation\">.</span><span class=\"token function\">erase</span><span class=\"token punctuation\">(</span><span class=\"token function\">unique</span><span class=\"token punctuation\">(</span>alls<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> alls<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> alls<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 去掉重复元素</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 二分求出 x 对应的离散化的值</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 找到第一个大于等于 x 的位置</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">int</span> l <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> r <span class=\"token operator\">=</span> alls<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">&lt;</span> r<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">int</span> mid <span class=\"token operator\">=</span> l <span class=\"token operator\">+</span> r <span class=\"token operator\">>></span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>alls<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> x<span class=\"token punctuation\">)</span> r <span class=\"token operator\">=</span> mid<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">else</span> l <span class=\"token operator\">=</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">return</span> r <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 映射到 1, 2, ...n</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"区间合并\"><a class=\"anchor\" href=\"#区间合并\">#</a> 区间合并</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 将所有存在交集的区间合并</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">merge</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span>PII<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span>segs<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span>PII<span class=\"token operator\">></span> res<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>segs<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> segs<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">int</span> st <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">2e9</span><span class=\"token punctuation\">,</span> ed <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">2e9</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> seg <span class=\"token operator\">:</span> segs<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ed <span class=\"token operator\">&lt;</span> seg<span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>st <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">2e9</span><span class=\"token punctuation\">)</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>st<span class=\"token punctuation\">,</span> ed<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            st <span class=\"token operator\">=</span> seg<span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">,</span> ed <span class=\"token operator\">=</span> seg<span class=\"token punctuation\">.</span>second<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">else</span> ed <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>ed<span class=\"token punctuation\">,</span> seg<span class=\"token punctuation\">.</span>second<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>st <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">2e9</span><span class=\"token punctuation\">)</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>st<span class=\"token punctuation\">,</span> ed<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    segs <span class=\"token operator\">=</span> res<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"第二章-数据结构\"><a class=\"anchor\" href=\"#第二章-数据结构\">#</a> 第二章 数据结构</h2>\n<h3 id=\"单链表\"><a class=\"anchor\" href=\"#单链表\">#</a> 单链表</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//head 存储链表头，e [] 存储节点的值，ne [] 存储节点的 next 指针，idx 表示当前用到了哪个节点</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> head<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> ne<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> idx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 初始化</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    head <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    idx <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// 在链表头插入一个数 a</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    e<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">,</span> ne<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> head<span class=\"token punctuation\">,</span> head <span class=\"token operator\">=</span> idx <span class=\"token operator\">++</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">// 将头结点删除，需要保证头结点存在</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    head <span class=\"token operator\">=</span> ne<span class=\"token punctuation\">[</span>head<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"双链表\"><a class=\"anchor\" href=\"#双链表\">#</a> 双链表</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//e [] 表示节点的值，l [] 表示节点的左指针，r [] 表示节点的右指针，idx 表示当前用到了哪个节点</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> e<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> idx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 初始化</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">//0 是左端点，1 是右端点</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    idx <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// 在节点 a 的右边插入一个数 x</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    e<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    l<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> r<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    l<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> idx<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> idx <span class=\"token operator\">++</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">// 删除节点 a</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    l<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> l<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    r<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> r<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"栈\"><a class=\"anchor\" href=\"#栈\">#</a> 栈</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//tt 表示栈顶</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> stk<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> tt <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 向栈顶插入一个数</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>stk<span class=\"token punctuation\">[</span> <span class=\"token operator\">++</span> tt<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 从栈顶弹出一个数</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>tt <span class=\"token operator\">--</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 栈顶的值</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>stk<span class=\"token punctuation\">[</span>tt<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">// 判断栈是否为空</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tt <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"普通队列\"><a class=\"anchor\" href=\"#普通队列\">#</a> 普通队列</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//hh 表示队头，tt 表示队尾</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> q<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> hh <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> tt <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 向队尾插入一个数</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>q<span class=\"token punctuation\">[</span> <span class=\"token operator\">++</span> tt<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 从队头弹出一个数</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>hh <span class=\"token operator\">++</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 队头的值</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>q<span class=\"token punctuation\">[</span>hh<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">// 判断队列是否为空</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hh <span class=\"token operator\">&lt;=</span> tt<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"循环队列\"><a class=\"anchor\" href=\"#循环队列\">#</a> 循环队列</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//hh 表示队头，tt 表示队尾的后一个位置</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> q<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> hh <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> tt <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 向队尾插入一个数</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>q<span class=\"token punctuation\">[</span>tt <span class=\"token operator\">++</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tt <span class=\"token operator\">==</span> N<span class=\"token punctuation\">)</span> tt <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 从队头弹出一个数</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>hh <span class=\"token operator\">++</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hh <span class=\"token operator\">==</span> N<span class=\"token punctuation\">)</span> hh <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// 队头的值</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>q<span class=\"token punctuation\">[</span>hh<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">// 判断队列是否为空</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hh <span class=\"token operator\">!=</span> tt<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"单调栈\"><a class=\"anchor\" href=\"#单调栈\">#</a> 单调栈</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>常见模型：找出每个数左边离它最近的比它大<span class=\"token operator\">/</span>小的数</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> tt <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>tt <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">check</span><span class=\"token punctuation\">(</span>stk<span class=\"token punctuation\">[</span>tt<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> tt <span class=\"token operator\">--</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    stk<span class=\"token punctuation\">[</span> <span class=\"token operator\">++</span> tt<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"单调队列\"><a class=\"anchor\" href=\"#单调队列\">#</a> 单调队列</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>常见模型：找出滑动窗口中的最大值<span class=\"token operator\">/</span>最小值</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> hh <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> tt <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>hh <span class=\"token operator\">&lt;=</span> tt <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">check_out</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">[</span>hh<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> hh <span class=\"token operator\">++</span> <span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 判断队头是否滑出窗口</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>hh <span class=\"token operator\">&lt;=</span> tt <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">check</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">[</span>tt<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> tt <span class=\"token operator\">--</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    q<span class=\"token punctuation\">[</span> <span class=\"token operator\">++</span> tt<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"kmp\"><a class=\"anchor\" href=\"#kmp\">#</a> KMP</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//s [] 是长文本，p [] 是模式串，n 是 s 的长度，m 是 p 的长度</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>求模式串的Next数组：</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> m<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">&amp;&amp;</span> p<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> p<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> j <span class=\"token operator\">=</span> ne<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> p<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> j <span class=\"token operator\">++</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    ne<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 匹配</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">&amp;&amp;</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> p<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> j <span class=\"token operator\">=</span> ne<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> p<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> j <span class=\"token operator\">++</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">==</span> m<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        j <span class=\"token operator\">=</span> ne<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\">// 匹配成功后的逻辑</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"trie树\"><a class=\"anchor\" href=\"#trie树\">#</a> Trie 树</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> son<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> cnt<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> idx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 0 号点既是根节点，又是空节点</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">//son [][] 存储树中每个节点的子节点</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">//cnt [] 存储以每个节点结尾的单词数量</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 插入一个字符串</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>str<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">int</span> p <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">int</span> u <span class=\"token operator\">=</span> str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>son<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> son<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">++</span> idx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        p <span class=\"token operator\">=</span> son<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    cnt<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span> <span class=\"token operator\">++</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">// 查询字符串出现的次数</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>str<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">int</span> p <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">int</span> u <span class=\"token operator\">=</span> str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>son<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        p <span class=\"token operator\">=</span> son<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">return</span> cnt<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"朴素并查集\"><a class=\"anchor\" href=\"#朴素并查集\">#</a> 朴素并查集</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> p<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 存储每个点的祖宗节点</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 返回 x 的祖宗节点</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> x<span class=\"token punctuation\">)</span> p<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">return</span> p<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 初始化，假定节点编号是 1~n</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> p<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// 合并 a 和 b 所在的两个集合：</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>p<span class=\"token punctuation\">[</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"维护size的并查集\"><a class=\"anchor\" href=\"#维护size的并查集\">#</a> 维护 size 的并查集</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> p<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">//p [] 存储每个点的祖宗节点，size [] 只有祖宗节点的有意义，表示祖宗节点所在集合中的点的数量</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 返回 x 的祖宗节点</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> x<span class=\"token punctuation\">)</span> p<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> p<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 初始化，假定节点编号是 1~n</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    p<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    size<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">// 合并 a 和 b 所在的两个集合：</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>size<span class=\"token punctuation\">[</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> size<span class=\"token punctuation\">[</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>p<span class=\"token punctuation\">[</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"维护到祖宗节点距离的并查集\"><a class=\"anchor\" href=\"#维护到祖宗节点距离的并查集\">#</a> 维护到祖宗节点距离的并查集</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> p<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">//p [] 存储每个点的祖宗节点，d [x] 存储 x 到 p [x] 的距离</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 返回 x 的祖宗节点</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">int</span> u <span class=\"token operator\">=</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        d<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> d<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        p<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> u<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">return</span> p<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">// 初始化，假定节点编号是 1~n</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    p<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    d<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">// 合并 a 和 b 所在的两个集合：</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>p<span class=\"token punctuation\">[</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>d<span class=\"token punctuation\">[</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> distance<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 根据具体问题，初始化 find (a) 的偏移量</span></pre></td></tr></table></figure><h3 id=\"堆\"><a class=\"anchor\" href=\"#堆\">#</a> 堆</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//h [N] 存储堆中的值，h [1] 是堆顶，x 的左儿子是 2x, 右儿子是 2x + 1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">//ph [k] 存储第 k 个插入的点在堆中的位置</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">//hp [k] 存储堆中下标是 k 的点是第几个插入的</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> h<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> ph<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> hp<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 交换两个点，及其映射关系</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">heap_swap</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>ph<span class=\"token punctuation\">[</span>hp<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>ph<span class=\"token punctuation\">[</span>hp<span class=\"token punctuation\">[</span>b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>hp<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> hp<span class=\"token punctuation\">[</span>b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">[</span>b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">down</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> u<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">int</span> t <span class=\"token operator\">=</span> u<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>u <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">&lt;=</span> size <span class=\"token operator\">&amp;&amp;</span> h<span class=\"token punctuation\">[</span>u <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> h<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> t <span class=\"token operator\">=</span> u <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>u <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;=</span> size <span class=\"token operator\">&amp;&amp;</span> h<span class=\"token punctuation\">[</span>u <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> h<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> t <span class=\"token operator\">=</span> u <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>u <span class=\"token operator\">!=</span> t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token function\">heap_swap</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token function\">down</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">up</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> u<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>u <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">&amp;&amp;</span> h<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> h<span class=\"token punctuation\">[</span>u <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token function\">heap_swap</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">,</span> u <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        u <span class=\"token operator\">>>=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\">// O (n) 建堆</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> n <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i<span class=\"token punctuation\">;</span> i <span class=\"token operator\">--</span> <span class=\"token punctuation\">)</span> <span class=\"token function\">down</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"一般哈希拉链法\"><a class=\"anchor\" href=\"#一般哈希拉链法\">#</a> 一般哈希：拉链法</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> h<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> ne<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> idx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 向哈希表中插入一个数</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">%</span> N <span class=\"token operator\">+</span> N<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> N<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        e<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        ne<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> h<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        h<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> idx <span class=\"token operator\">++</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">// 在哈希表中查询某个数是否存在</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">bool</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">%</span> N <span class=\"token operator\">+</span> N<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> N<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> h<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">=</span> ne<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"一般哈希开放寻址法\"><a class=\"anchor\" href=\"#一般哈希开放寻址法\">#</a> 一般哈希：开放寻址法</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> h<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 如果 x 在哈希表中，返回 x 的下标；如果 x 不在哈希表中，返回 x 应该插入的位置</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">int</span> t <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">%</span> N <span class=\"token operator\">+</span> N<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> N<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> null <span class=\"token operator\">&amp;&amp;</span> h<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            t <span class=\"token operator\">++</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">==</span> N<span class=\"token punctuation\">)</span> t <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> t<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"字符串哈希\"><a class=\"anchor\" href=\"#字符串哈希\">#</a> 字符串哈希</h3>\n<p>核心思想：将字符串看成 P 进制数，P 的经验值是 131 或 13331，取这两个值的冲突概率低<br />\n小技巧：取模的数用 2^64，这样直接用 unsigned long long 存储，溢出的结果就是取模的结果</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> ULL<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>ULL h<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//h [k] 存储字符串前 k 个字母的哈希值，p [k] 存储 P^k mod 2^64</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 初始化</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    h<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> h<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> P <span class=\"token operator\">+</span> str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    p<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> p<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> P<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// 计算子串 str [l ~ r] 的哈希值</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>ULL <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> l<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> r<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">return</span> h<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> h<span class=\"token punctuation\">[</span>l <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> p<span class=\"token punctuation\">[</span>r <span class=\"token operator\">-</span> l <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"c-stl\"><a class=\"anchor\" href=\"#c-stl\">#</a> c++ STL</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>vector<span class=\"token punctuation\">,</span> 变长数组，倍增的思想</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  返回元素个数</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  返回是否为空</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  清空</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">front</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token function\">pop_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    支持比较运算，按字典序</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>pair<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    first<span class=\"token punctuation\">,</span> 第一个元素</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    second<span class=\"token punctuation\">,</span> 第二个元素</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    支持比较运算，以first为第一关键字，以second为第二关键字（字典序）</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>string，字符串</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  返回字符串长度</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span>起始下标，<span class=\"token punctuation\">(</span>子串长度<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  返回子串</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  返回字符串所在字符数组的起始地址</pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>queue<span class=\"token punctuation\">,</span> 队列</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  向队尾插入一个元素</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token function\">front</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  返回队头元素</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  返回队尾元素</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  弹出队头元素</pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>priority_queue<span class=\"token punctuation\">,</span> 优先队列，默认是大根堆</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  插入一个元素</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token function\">top</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  返回堆顶元素</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  弹出堆顶元素</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    定义成小根堆的方式：priority_queue<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> greater<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">>></span> q<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>stack<span class=\"token punctuation\">,</span> 栈</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  向栈顶插入一个元素</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token function\">top</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  返回栈顶元素</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  弹出栈顶元素</pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>deque<span class=\"token punctuation\">,</span> 双端队列</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token function\">front</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token function\">pop_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token function\">push_front</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token function\">pop_front</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>set<span class=\"token punctuation\">,</span> map<span class=\"token punctuation\">,</span> multiset<span class=\"token punctuation\">,</span> multimap<span class=\"token punctuation\">,</span> 基于平衡二叉树（红黑树），动态维护有序序列</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token operator\">++</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">--</span> 返回前驱和后继，时间复杂度 <span class=\"token function\">O</span><span class=\"token punctuation\">(</span>logn<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    set<span class=\"token operator\">/</span>multiset</pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  插入一个数</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  查找一个数</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  返回某一个数的个数</pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token function\">erase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>            <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> 输入是一个数x，删除所有x   <span class=\"token function\">O</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">+</span> logn<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> 输入一个迭代器，删除这个迭代器</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token function\">lower_bound</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token function\">upper_bound</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            <span class=\"token function\">lower_bound</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>  返回大于等于x的最小的数的迭代器</pre></td></tr><tr><td data-num=\"72\"></td><td><pre>            <span class=\"token function\">upper_bound</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>  返回大于x的最小的数的迭代器</pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    map<span class=\"token operator\">/</span>multimap</pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  插入的数是一个pair</pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token function\">erase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  输入的参数是pair或者迭代器</pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        <span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>  注意multimap不支持此操作。 时间复杂度是 <span class=\"token function\">O</span><span class=\"token punctuation\">(</span>logn<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        <span class=\"token function\">lower_bound</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token function\">upper_bound</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>unordered_set<span class=\"token punctuation\">,</span> unordered_map<span class=\"token punctuation\">,</span> unordered_multiset<span class=\"token punctuation\">,</span> unordered_multimap<span class=\"token punctuation\">,</span> 哈希表</pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    和上面类似，增删改查的时间复杂度是 <span class=\"token function\">O</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    不支持 <span class=\"token function\">lower_bound</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token function\">upper_bound</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>， 迭代器的<span class=\"token operator\">++</span>，<span class=\"token operator\">--</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>bitset<span class=\"token punctuation\">,</span> 圧位</pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">10000</span><span class=\"token operator\">></span> s<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token operator\">~</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">|</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">^</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&lt;&lt;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token operator\">==</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">!=</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  返回有多少个<span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    <span class=\"token function\">any</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  判断是否至少有一个<span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token function\">none</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  判断是否全为<span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  把所有位置成<span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    <span class=\"token function\">set</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span>  将第k位变成v</pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    <span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  把所有位变成<span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    <span class=\"token function\">flip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  等价于<span class=\"token operator\">~</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    <span class=\"token function\">flip</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span> 把第k位取反</pre></td></tr></table></figure><h2 id=\"第三章-搜索与图论\"><a class=\"anchor\" href=\"#第三章-搜索与图论\">#</a> 第三章 搜索与图论</h2>\n<h3 id=\"树与图的存储\"><a class=\"anchor\" href=\"#树与图的存储\">#</a> 树与图的存储</h3>\n<p>​\t\t\t树是一种特殊的图，与图的存储方式相同。</p>\n<p>​\t\t\t对于无向图中的边 ab，存储两条有向边 a-&gt;b， b-&gt;a。<br />\n​\t\t\t因此我们可以只考虑有向图的存储。</p>\n<p>​\t\t\t(1) 邻接矩阵：g [a][b] 存储边 a-&gt;b</p>\n<p>​\t\t\t(2) 邻接表</p>\n<h3 id=\"邻接表\"><a class=\"anchor\" href=\"#邻接表\">#</a> 邻接表</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 对于每个点 k，开一个单链表，存储 k 所有可以走到的点。h [k] 存储这个单链表的头结点</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> h<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> ne<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> idx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 添加一条边 a->b</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    e<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> b<span class=\"token punctuation\">,</span> ne<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> h<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> idx <span class=\"token operator\">++</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 初始化</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>idx <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"树与图的遍历\"><a class=\"anchor\" href=\"#树与图的遍历\">#</a> 树与图的遍历</h3>\n<p>​\t\t\t时间复杂度  <code>O(n+m)</code> ， <code>n</code>  表示点数， <code>m</code>  表示边数</p>\n<h4 id=\"深度优先遍历\"><a class=\"anchor\" href=\"#深度优先遍历\">#</a> 深度优先遍历</h4>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> u<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    st<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//st [u] 表示点 u 已经被遍历过</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> h<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">=</span> ne<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> e<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>st<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"宽度优先遍历\"><a class=\"anchor\" href=\"#宽度优先遍历\">#</a> 宽度优先遍历</h4>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>queue<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> q<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>st<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 表示 1 号点已经被遍历过</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>q<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">int</span> t <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">front</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    q<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> h<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">=</span> ne<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> e<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>st<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            st<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 表示点 j 已经被遍历过</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            q<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"拓扑排序\"><a class=\"anchor\" href=\"#拓扑排序\">#</a> 拓扑排序</h3>\n<p>​\t\t\t时间复杂度  <code>O(n+m)</code> ， <code>n</code>  表示点数， <code>m</code>  表示边数</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">bool</span> <span class=\"token function\">topsort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> hh <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> tt <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">//d [i] 存储点 i 的入度</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>d<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            q<span class=\"token punctuation\">[</span> <span class=\"token operator\">++</span> tt<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>hh <span class=\"token operator\">&lt;=</span> tt<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">int</span> t <span class=\"token operator\">=</span> q<span class=\"token punctuation\">[</span>hh <span class=\"token operator\">++</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> h<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">=</span> ne<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> e<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">--</span> d<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                q<span class=\"token punctuation\">[</span> <span class=\"token operator\">++</span> tt<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token comment\">// 如果所有点都入队了，说明存在拓扑序列；否则不存在拓扑序列。</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">return</span> tt <span class=\"token operator\">==</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"朴素dijkstra算法\"><a class=\"anchor\" href=\"#朴素dijkstra算法\">#</a> 朴素 dijkstra 算法</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> g<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 存储每条边</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> dist<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 存储 1 号点到每个点的最短距离</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">bool</span> st<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 存储每个点的最短路是否已经确定</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 求 1 号点到 n 号点的最短路，如果不存在则返回 - 1</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">dijkstra</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>dist<span class=\"token punctuation\">,</span> <span class=\"token number\">0x3f</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span> dist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    dist<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">int</span> t <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 在还未确定最短路的点中，寻找距离最小的点</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> j <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>st<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">||</span> dist<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> dist<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                t <span class=\"token operator\">=</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\">// 用 t 更新其他点的距离</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> j <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            dist<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>dist<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dist<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> g<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        st<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dist<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0x3f3f3f3f</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">return</span> dist<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"堆优化版dijkstra\"><a class=\"anchor\" href=\"#堆优化版dijkstra\">#</a> 堆优化版 dijkstra</h3>\n<p>​\t\t\t时间复杂度  <code>O(mlogn)</code> ，  <code>n</code>  表示点数， <code>m</code>  表示边数</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> pair<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">></span> PII<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 点的数量</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> h<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> ne<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> idx<span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 邻接表存储所有边</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> dist<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 存储所有点到 1 号点的距离</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">bool</span> st<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 存储每个点的最短距离是否已确定</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 求 1 号点到 n 号点的最短距离，如果不存在，则返回 - 1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">dijkstra</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>dist<span class=\"token punctuation\">,</span> <span class=\"token number\">0x3f</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span> dist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    dist<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    priority_queue<span class=\"token operator\">&lt;</span>PII<span class=\"token punctuation\">,</span> vector<span class=\"token operator\">&lt;</span>PII<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> greater<span class=\"token operator\">&lt;</span>PII<span class=\"token operator\">>></span> heap<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    heap<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">//first 存储距离，second 存储节点编号</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">auto</span> t <span class=\"token operator\">=</span> heap<span class=\"token punctuation\">.</span><span class=\"token function\">top</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        heap<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">int</span> ver <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>second<span class=\"token punctuation\">,</span> distance <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>st<span class=\"token punctuation\">[</span>ver<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        st<span class=\"token punctuation\">[</span>ver<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> h<span class=\"token punctuation\">[</span>ver<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">=</span> ne<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> e<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dist<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> distance <span class=\"token operator\">+</span> w<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                dist<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> distance <span class=\"token operator\">+</span> w<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                heap<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>dist<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dist<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0x3f3f3f3f</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">return</span> dist<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"bellman-ford算法\"><a class=\"anchor\" href=\"#bellman-ford算法\">#</a> Bellman-Ford 算法</h3>\n<p>​\t\t\t时间复杂度  <code>O(nm)</code> ， <code>n</code>  表示点数， <code>m</code>  表示边数。注意在模板题中需要对下面的模板稍作修改，加上备份数组，详情见模板题。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">;</span>       <span class=\"token comment\">//n 表示点数，m 表示边数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> dist<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">//dist [x] 存储 1 到 x 的最短路距离</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Edge</span>     <span class=\"token comment\">// 边，a 表示出点，b 表示入点，w 表示边的权重</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span> edges<span class=\"token punctuation\">[</span>M<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 求 1 到 n 的最短路距离，如果无法从 1 走到 n，则返回 - 1。</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">bellman_ford</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>dist<span class=\"token punctuation\">,</span> <span class=\"token number\">0x3f</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span> dist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    dist<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\">// 如果第 n 次迭代仍然会松弛三角不等式，就说明存在一条长度是 n+1 的最短路径，由抽屉原理，路径中至少存在两个相同的点，说明图中存在负权回路。</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> m<span class=\"token punctuation\">;</span> j <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> edges<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> edges<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">,</span> w <span class=\"token operator\">=</span> edges<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>w<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dist<span class=\"token punctuation\">[</span>b<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> dist<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> w<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                dist<span class=\"token punctuation\">[</span>b<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dist<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> w<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dist<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0x3f3f3f3f</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">return</span> dist<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"spfa-算法队列优化的bellman-ford算法\"><a class=\"anchor\" href=\"#spfa-算法队列优化的bellman-ford算法\">#</a> spfa 算法（队列优化的 Bellman-Ford 算法）</h3>\n<p>​\t\t\t时间复杂度 平均情况下  <code>O(m)</code> ，最坏情况下 O (nm)，n 表示点数，m 表示边数</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 总点数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> h<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> ne<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> idx<span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 邻接表存储所有边</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> dist<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 存储每个点到 1 号点的最短距离</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">bool</span> st<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 存储每个点是否在队列中</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 求 1 号点到 n 号点的最短路距离，如果从 1 号点无法走到 n 号点则返回 - 1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">spfa</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>dist<span class=\"token punctuation\">,</span> <span class=\"token number\">0x3f</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span> dist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    dist<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    queue<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> q<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    q<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    st<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">auto</span> t <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">front</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        q<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        st<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> h<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">=</span> ne<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> e<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dist<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> dist<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> w<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                dist<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dist<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> w<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>st<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">// 如果队列中已存在 j，则不需要将 j 重复插入</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                    q<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                    st<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dist<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0x3f3f3f3f</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">return</span> dist<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"spfa判断图中是否存在负环\"><a class=\"anchor\" href=\"#spfa判断图中是否存在负环\">#</a> spfa 判断图中是否存在负环</h3>\n<p>​\t\t\t时间复杂度是  <code>O(nm)</code> ， <code>n</code>  表示点数， <code>m</code>  表示边数</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 总点数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> h<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> ne<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> idx<span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 邻接表存储所有边</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> dist<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> cnt<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">//dist [x] 存储 1 号点到 x 的最短距离，cnt [x] 存储 1 到 x 的最短路中经过的点数</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">bool</span> st<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 存储每个点是否在队列中</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 如果存在负环，则返回 true，否则返回 false。</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">bool</span> <span class=\"token function\">spfa</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">// 不需要初始化 dist 数组</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">// 原理：如果某条最短路径上有 n 个点（除了自己），那么加上自己之后一共有 n+1 个点，由抽屉原理一定有两个点相同，所以存在环。</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    queue<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> q<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        q<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        st<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">auto</span> t <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">front</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        q<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        st<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> h<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">=</span> ne<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> e<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dist<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> dist<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> w<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                dist<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dist<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> w<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                cnt<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> cnt<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cnt<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 如果从 1 号点到 x 的最短路中包含至少 n 个点（不包括自己），则说明存在环</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>st<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                    q<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                    st<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"floyd算法\"><a class=\"anchor\" href=\"#floyd算法\">#</a> floyd 算法</h3>\n<p>​\t\t\t时间复杂度是  <code>O(n3)</code> ， <code>n</code>  表示点数</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>初始化：</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> j <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> j<span class=\"token punctuation\">)</span> d<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">else</span> d<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> INF<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 算法结束后，d [a][b] 表示 a 到 b 的最短距离</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">floyd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> k <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> j <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                d<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> d<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"朴素版prim算法\"><a class=\"anchor\" href=\"#朴素版prim算法\">#</a> 朴素版 prim 算法</h3>\n<p>​\t\t\t时间复杂度是  <code>O(n2+m)</code> ，  <code>n</code>  表示点数， <code>m</code>  表示边数</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">;</span>      <span class=\"token comment\">//n 表示点数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> g<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 邻接矩阵，存储所有边</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> dist<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 存储其他点到当前最小生成树的距离</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">bool</span> st<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 存储每个点是否已经在生成树中</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 如果图不连通，则返回 INF (值是 0x3f3f3f3f), 否则返回最小生成树的树边权重之和</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">prim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>dist<span class=\"token punctuation\">,</span> <span class=\"token number\">0x3f</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span> dist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">int</span> res <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">int</span> t <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> j <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>st<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">||</span> dist<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> dist<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                t <span class=\"token operator\">=</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&amp;&amp;</span> dist<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> INF<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> INF<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> res <span class=\"token operator\">+=</span> dist<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        st<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> j <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> dist<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>dist<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"kruskal算法\"><a class=\"anchor\" href=\"#kruskal算法\">#</a> Kruskal 算法</h3>\n<p>​\t\t\t时间复杂度是 <code>O(mlogm)</code> ， <code>n</code>  表示点数， <code>m</code>  表示边数</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">;</span>       <span class=\"token comment\">//n 是点数，m 是边数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> p<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 并查集的父节点数组</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Edge</span>     <span class=\"token comment\">// 存储边</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">bool</span> <span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> Edge <span class=\"token operator\">&amp;</span>W<span class=\"token punctuation\">)</span><span class=\"token keyword\">const</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> w <span class=\"token operator\">&lt;</span> W<span class=\"token punctuation\">.</span>w<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span>edges<span class=\"token punctuation\">[</span>M<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span>     <span class=\"token comment\">// 并查集核心操作</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> x<span class=\"token punctuation\">)</span> p<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">return</span> p<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">kruskal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>edges<span class=\"token punctuation\">,</span> edges <span class=\"token operator\">+</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> p<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 初始化并查集</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">int</span> res <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> cnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> edges<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> edges<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">,</span> w <span class=\"token operator\">=</span> edges<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>w<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        a <span class=\"token operator\">=</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">!=</span> b<span class=\"token punctuation\">)</span>     <span class=\"token comment\">// 如果两个连通块不连通，则将这两个连通块合并</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            p<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            res <span class=\"token operator\">+=</span> w<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            cnt <span class=\"token operator\">++</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cnt <span class=\"token operator\">&lt;</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> INF<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"染色法判别二分图\"><a class=\"anchor\" href=\"#染色法判别二分图\">#</a> 染色法判别二分图</h3>\n<p>​\t\t\t时间复杂度是  <code>O(n+m)</code> ， <code>n</code>  表示点数， <code>m</code>  表示边数</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">;</span>      <span class=\"token comment\">//n 表示点数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> h<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">[</span>M<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> ne<span class=\"token punctuation\">[</span>M<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> idx<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 邻接表存储图</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> color<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 表示每个点的颜色，-1 表示未染色，0 表示白色，1 表示黑色</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 参数：u 表示当前节点，c 表示当前点的颜色</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">bool</span> <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> u<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    color<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> c<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> h<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">=</span> ne<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> e<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> c<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">bool</span> <span class=\"token function\">check</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span> color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">bool</span> flag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                flag <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">return</span> flag<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"匈牙利算法\"><a class=\"anchor\" href=\"#匈牙利算法\">#</a> 匈牙利算法</h3>\n<p>​\t\t\t时间复杂度是 <code>O(nm)</code>  ,  <code>n</code>  表示点数， <code>m</code>  表示边数</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> n1<span class=\"token punctuation\">,</span> n2<span class=\"token punctuation\">;</span>     <span class=\"token comment\">//n1 表示第一个集合中的点数，n2 表示第二个集合中的点数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> h<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">[</span>M<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> ne<span class=\"token punctuation\">[</span>M<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> idx<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 邻接表存储所有边，匈牙利算法中只会用到从第一个集合指向第二个集合的边，所以这里只用存一个方向的边</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> match<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 存储第二个集合中的每个点当前匹配的第一个集合中的点是哪个</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">bool</span> st<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 表示第二个集合中的每个点是否已经被遍历过</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">bool</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> h<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">=</span> ne<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> e<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>st<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            st<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>match<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span>match<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                match<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">// 求最大匹配数，依次枚举第一个集合中的每个点能否匹配第二个集合中的点</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">int</span> res <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n1<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>st<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span> st<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> res <span class=\"token operator\">++</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"第四章-数学知识\"><a class=\"anchor\" href=\"#第四章-数学知识\">#</a> 第四章 数学知识</h2>\n<h3 id=\"试除法判定质数\"><a class=\"anchor\" href=\"#试除法判定质数\">#</a> 试除法判定质数</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">bool</span> <span class=\"token function\">is_prime</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> x <span class=\"token operator\">/</span> i<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"试除法分解质因数\"><a class=\"anchor\" href=\"#试除法分解质因数\">#</a> 试除法分解质因数</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">divide</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> x <span class=\"token operator\">/</span> i<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">int</span> s <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> x <span class=\"token operator\">/=</span> i<span class=\"token punctuation\">,</span> s <span class=\"token operator\">++</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            cout <span class=\"token operator\">&lt;&lt;</span> i <span class=\"token operator\">&lt;&lt;</span> <span class=\"token char\">' '</span> <span class=\"token operator\">&lt;&lt;</span> s <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> cout <span class=\"token operator\">&lt;&lt;</span> x <span class=\"token operator\">&lt;&lt;</span> <span class=\"token char\">' '</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"朴素筛法求素数\"><a class=\"anchor\" href=\"#朴素筛法求素数\">#</a> 朴素筛法求素数</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> primes<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> cnt<span class=\"token punctuation\">;</span>     <span class=\"token comment\">//primes [] 存储所有素数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">bool</span> st<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">//st [x] 存储 x 是否被筛掉</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">get_primes</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>st<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        primes<span class=\"token punctuation\">[</span>cnt <span class=\"token operator\">++</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> i<span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> j <span class=\"token operator\">+=</span> i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            st<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"线性筛法求素数\"><a class=\"anchor\" href=\"#线性筛法求素数\">#</a> 线性筛法求素数</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> primes<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> cnt<span class=\"token punctuation\">;</span>     <span class=\"token comment\">//primes [] 存储所有素数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">bool</span> st<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">//st [x] 存储 x 是否被筛掉</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">get_primes</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>st<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> primes<span class=\"token punctuation\">[</span>cnt <span class=\"token operator\">++</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> primes<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> n <span class=\"token operator\">/</span> i<span class=\"token punctuation\">;</span> j <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            st<span class=\"token punctuation\">[</span>primes<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">%</span> primes<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"试除法求所有约数\"><a class=\"anchor\" href=\"#试除法求所有约数\">#</a> 试除法求所有约数</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">get_divisors</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> res<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> x <span class=\"token operator\">/</span> i<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            res<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">!=</span> x <span class=\"token operator\">/</span> i<span class=\"token punctuation\">)</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">/</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"约数个数和约数之和\"><a class=\"anchor\" href=\"#约数个数和约数之和\">#</a> 约数个数和约数之和</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>如果 N <span class=\"token operator\">=</span> p1<span class=\"token operator\">^</span>c1 <span class=\"token operator\">*</span> p2<span class=\"token operator\">^</span>c2 <span class=\"token operator\">*</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token operator\">*</span>pk<span class=\"token operator\">^</span>ck</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>约数个数： <span class=\"token punctuation\">(</span>c1 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>c2 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>ck <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>约数之和： <span class=\"token punctuation\">(</span>p1<span class=\"token operator\">^</span><span class=\"token number\">0</span> <span class=\"token operator\">+</span> p1<span class=\"token operator\">^</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token operator\">+</span> p1<span class=\"token operator\">^</span>c1<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>pk<span class=\"token operator\">^</span><span class=\"token number\">0</span> <span class=\"token operator\">+</span> pk<span class=\"token operator\">^</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token operator\">+</span> pk<span class=\"token operator\">^</span>ck<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"欧几里得算法\"><a class=\"anchor\" href=\"#欧几里得算法\">#</a> 欧几里得算法</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">gcd</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">return</span> b <span class=\"token operator\">?</span> <span class=\"token function\">gcd</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> a <span class=\"token operator\">%</span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"求欧拉函数\"><a class=\"anchor\" href=\"#求欧拉函数\">#</a> 求欧拉函数</h3>\n<p>​\t\t\t表示小于或等于 N 的正整数中与 N 互质的数的个数</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">phi</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> res <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> x <span class=\"token operator\">/</span> i<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            res <span class=\"token operator\">=</span> res <span class=\"token operator\">/</span> i <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> x <span class=\"token operator\">/=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> res <span class=\"token operator\">=</span> res <span class=\"token operator\">/</span> x <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"筛法求欧拉函数\"><a class=\"anchor\" href=\"#筛法求欧拉函数\">#</a> 筛法求欧拉函数</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> primes<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> cnt<span class=\"token punctuation\">;</span>     <span class=\"token comment\">//primes [] 存储所有素数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> euler<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>           <span class=\"token comment\">// 存储每个数的欧拉函数</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">bool</span> st<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">//st [x] 存储 x 是否被筛掉</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">get_eulers</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    euler<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>st<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            primes<span class=\"token punctuation\">[</span>cnt <span class=\"token operator\">++</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            euler<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> primes<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> n <span class=\"token operator\">/</span> i<span class=\"token punctuation\">;</span> j <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">int</span> t <span class=\"token operator\">=</span> primes<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            st<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">%</span> primes<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                euler<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> euler<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> primes<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            euler<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> euler<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>primes<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"快速幂\"><a class=\"anchor\" href=\"#快速幂\">#</a> 快速幂</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>求 m<span class=\"token operator\">^</span>k mod p，时间复杂度 <span class=\"token function\">O</span><span class=\"token punctuation\">(</span>logk<span class=\"token punctuation\">)</span>。</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">qmi</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> m<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">int</span> res <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">%</span> p<span class=\"token punctuation\">,</span> t <span class=\"token operator\">=</span> m<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>k<span class=\"token operator\">&amp;</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> res <span class=\"token operator\">=</span> res <span class=\"token operator\">*</span> t <span class=\"token operator\">%</span> p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        t <span class=\"token operator\">=</span> t <span class=\"token operator\">*</span> t <span class=\"token operator\">%</span> p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        k <span class=\"token operator\">>>=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"扩展欧几里得算法\"><a class=\"anchor\" href=\"#扩展欧几里得算法\">#</a> 扩展欧几里得算法</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 求 x, y，使得 ax + by = gcd (a, b)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">exgcd</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">&amp;</span>x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">&amp;</span>y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>b<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        x <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">int</span> d <span class=\"token operator\">=</span> <span class=\"token function\">exgcd</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> a <span class=\"token operator\">%</span> b<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    y <span class=\"token operator\">-=</span> <span class=\"token punctuation\">(</span>a<span class=\"token operator\">/</span>b<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> d<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"高斯消元\"><a class=\"anchor\" href=\"#高斯消元\">#</a> 高斯消元</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//a [N][N] 是增广矩阵</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">gauss</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">int</span> c<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>c <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> r <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> c <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> c <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">int</span> t <span class=\"token operator\">=</span> r<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> r<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span>   <span class=\"token comment\">// 找到绝对值最大的行</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">fabs</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token function\">fabs</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                t <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">fabs</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> eps<span class=\"token punctuation\">)</span> <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> c<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 将绝对值最大的行换到最顶端</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> n<span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> c<span class=\"token punctuation\">;</span> i <span class=\"token operator\">--</span> <span class=\"token punctuation\">)</span> a<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">/=</span> a<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 将当前行的首位变成 1</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> r <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span>       <span class=\"token comment\">// 用当前行将下面所有的列消成 0</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">fabs</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> eps<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> n<span class=\"token punctuation\">;</span> j <span class=\"token operator\">>=</span> c<span class=\"token punctuation\">;</span> j <span class=\"token operator\">--</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                    a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> a<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        r <span class=\"token operator\">++</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> r<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">fabs</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> eps<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 无解</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 有无穷多组解</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">--</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> j <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> a<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 有唯一解</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"递归法求组合数\"><a class=\"anchor\" href=\"#递归法求组合数\">#</a> 递归法求组合数</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//c [a][b] 表示从 a 个苹果中选 b 个的方案数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> N<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> i<span class=\"token punctuation\">;</span> j <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>j<span class=\"token punctuation\">)</span> c<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">else</span> c<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> c<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> mod<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"通过预处理逆元的方式求组合数\"><a class=\"anchor\" href=\"#通过预处理逆元的方式求组合数\">#</a> 通过预处理逆元的方式求组合数</h3>\n<p>首先预处理出所有阶乘取模的余数 fact [N]，以及所有阶乘取模的逆元 infact [N]<br />\n 如果取模的数是质数，可以用费马小定理求逆元</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">qmi</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> p<span class=\"token punctuation\">)</span>    <span class=\"token comment\">// 快速幂模板</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> res <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> res <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>LL<span class=\"token punctuation\">)</span>res <span class=\"token operator\">*</span> a <span class=\"token operator\">%</span> p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        a <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>LL<span class=\"token punctuation\">)</span>a <span class=\"token operator\">*</span> a <span class=\"token operator\">%</span> p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        k <span class=\"token operator\">>>=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">// 预处理阶乘的余数和阶乘逆元的余数</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>fact<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> infact<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> N<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    fact<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>LL<span class=\"token punctuation\">)</span>fact<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> i <span class=\"token operator\">%</span> mod<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    infact<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>LL<span class=\"token punctuation\">)</span>infact<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token function\">qmi</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> mod <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> mod<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> mod<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"lucas定理\"><a class=\"anchor\" href=\"#lucas定理\">#</a> Lucas 定理</h3>\n<p>若 p 是质数，则对于任意整数 1 &lt;= m &lt;= n，有：<br />\nC(n, m) = C(n % p, m % p) * C(n / p, m / p) (mod p)</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">qmi</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> p<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 快速幂模板</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> res <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">%</span> p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> res <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>LL<span class=\"token punctuation\">)</span>res <span class=\"token operator\">*</span> a <span class=\"token operator\">%</span> p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        a <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>LL<span class=\"token punctuation\">)</span>a <span class=\"token operator\">*</span> a <span class=\"token operator\">%</span> p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        k <span class=\"token operator\">>>=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">C</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> p<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 通过定理求组合数 C (a, b)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">&lt;</span> b<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    LL x <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//x 是分子，y 是分母</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> a<span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> b<span class=\"token punctuation\">;</span> i <span class=\"token operator\">--</span><span class=\"token punctuation\">,</span> j <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        x <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>LL<span class=\"token punctuation\">)</span>x <span class=\"token operator\">*</span> i <span class=\"token operator\">%</span> p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        y <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>LL<span class=\"token punctuation\">)</span> y <span class=\"token operator\">*</span> j <span class=\"token operator\">%</span> p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">return</span> x <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>LL<span class=\"token punctuation\">)</span><span class=\"token function\">qmi</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> p <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">lucas</span><span class=\"token punctuation\">(</span>LL a<span class=\"token punctuation\">,</span> LL b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">&lt;</span> p <span class=\"token operator\">&amp;&amp;</span> b <span class=\"token operator\">&lt;</span> p<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token function\">C</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>LL<span class=\"token punctuation\">)</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">%</span> p<span class=\"token punctuation\">,</span> b <span class=\"token operator\">%</span> p<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token function\">lucas</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">/</span> p<span class=\"token punctuation\">,</span> b <span class=\"token operator\">/</span> p<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"分解质因数法求组合数\"><a class=\"anchor\" href=\"#分解质因数法求组合数\">#</a> 分解质因数法求组合数</h3>\n<p>当我们需要求出组合数的真实值，而非对某个数的余数时，分解质因数的方式比较好用：<br />\n1. 筛法求出范围内的所有质数<br />\n 2. 通过 C (a, b) = a! /b! / (a - b)! 这个公式求出每个质因子的次数。 n! 中 p 的次数是 n /p + n /p^2 + n /p^3 + ...<br />\n3. 用高精度乘法将所有质因子相乘</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> primes<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> cnt<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 存储所有质数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> sum<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 存储每个质数的次数</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">bool</span> st<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 存储每个数是否已被筛掉</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">get_primes</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span>      <span class=\"token comment\">// 线性筛法求素数</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>st<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> primes<span class=\"token punctuation\">[</span>cnt <span class=\"token operator\">++</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> primes<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> n <span class=\"token operator\">/</span> i<span class=\"token punctuation\">;</span> j <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            st<span class=\"token punctuation\">[</span>primes<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">%</span> primes<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> p<span class=\"token punctuation\">)</span>       <span class=\"token comment\">// 求 n！中的次数</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">int</span> res <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        res <span class=\"token operator\">+=</span> n <span class=\"token operator\">/</span> p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        n <span class=\"token operator\">/=</span> p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">)</span>       <span class=\"token comment\">// 高精度乘低精度模板</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> c<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">int</span> t <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        t <span class=\"token operator\">+=</span> a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        c<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        t <span class=\"token operator\">/=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        c<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        t <span class=\"token operator\">/=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">return</span> c<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token function\">get_primes</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 预处理范围内的所有质数</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> cnt<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span>     <span class=\"token comment\">// 求每个质因数的次数</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token keyword\">int</span> p <span class=\"token operator\">=</span> primes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    sum<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">-</span> b<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> res<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>res<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> cnt<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span>     <span class=\"token comment\">// 用高精度乘法将所有质因子相乘</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> sum<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        res <span class=\"token operator\">=</span> <span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">,</span> primes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"卡特兰数\"><a class=\"anchor\" href=\"#卡特兰数\">#</a> 卡特兰数</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>给定n个<span class=\"token number\">0</span>和n个<span class=\"token number\">1</span>，它们按照某种顺序排成长度为<span class=\"token number\">2</span>n的序列，满足任意前缀中<span class=\"token number\">0</span>的个数都不少于<span class=\"token number\">1</span>的个数的序列的数量为： <span class=\"token function\">Cat</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">C</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span>n<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "学习心得"
            ]
        },
        {
            "id": "http://红叶.top/2023/05/23/computer-science/notes/ACM%E3%80%81OI%E3%80%81IOI%E7%BC%96%E7%A8%8B%E7%AB%9E%E8%B5%9B%E6%A8%A1%E5%BC%8F%E4%BB%8B%E7%BB%8D/",
            "url": "http://红叶.top/2023/05/23/computer-science/notes/ACM%E3%80%81OI%E3%80%81IOI%E7%BC%96%E7%A8%8B%E7%AB%9E%E8%B5%9B%E6%A8%A1%E5%BC%8F%E4%BB%8B%E7%BB%8D/",
            "title": "编程竞赛模式介绍",
            "date_published": "2023-05-23T07:49:38.062Z",
            "content_html": "<h2 id=\"介绍一下编程比赛\"><a class=\"anchor\" href=\"#介绍一下编程比赛\">#</a> 介绍一下编程比赛：</h2>\n<p>ICPC 是国际大学生程序设计竞赛 (ACM International Collegiate ProgrammingContest（ACM-ICPC 或 ICPC）是由美国计算机协会 (ACM) 主办的，一项旨在展示大学生创新能力、团队精神和在压力下编写程序、分析和解决问题能力的年度竞赛。经过近 30 多年的发展，ACM 国际大学生程序设计竞赛已经发展成为最具影响力的大学生计算机竞赛。</p>\n<p>CCPC 中国大学生程序设计竞赛 (China Collegiate Programming Contest) 是由中国大学生程序设计竞赛协会主办的面向世界大学生的国际性年度赛事，旨在激励当代大学生运用计算机编程技术和技能来解决实际问题，激发其学习算法和程序设计的兴趣，培养其团队合作意识、创新能力和挑战精神。</p>\n<p>IOI 是国际信息学奥林匹克竞赛 (International Olympiad in Informatics），是面向中学生的一年一度的信息学科竞赛。举办历史较长，第一届国际信息学奥林匹克竞赛于 1989 年在保加利亚举行。</p>\n<p>NOI 是中国计算机学会举办了全国青少年计算机程序设计竞赛，即全国青少年信息学奥林匹克竞赛 (简称 NOI）。</p>\n<p>NOIP 是全国青少年信息学奥林匹克联赛（National Olympiad in Informatics in Provinces）自 1995 年至今已举办 19 次，每年由中国计算机学会统一组织。</p>\n<h2 id=\"介绍一下编程比赛中最常见的三种赛制acm赛制-oi赛制-ioi赛制\"><a class=\"anchor\" href=\"#介绍一下编程比赛中最常见的三种赛制acm赛制-oi赛制-ioi赛制\">#</a> 介绍一下编程比赛中最常见的三种赛制：ACM 赛制、OI 赛制、IOI 赛制。</h2>\n<p>先普及一些常见的竞赛术语：提交反馈，实时排名，按点给分，题数罚时，测试点 (测试用例) 等。</p>\n<pre><code>提交反馈：一般为“通过AC”、“答案错误”、“运行超时”等等反馈\n\n实时排名：比赛中能看到排名，如ACM赛制\n\n全有或全无：只有通过全部测试点才算通过，只要有一个测试点不通过就不能AC(答案accept)\n\n按点给分：每道题有多个测试点，通过几个测试点就给相应分值\n\n题数罚时：题数多者排名靠前，只有当题数相同时才比较时间，时间少者排名靠前，或再比较罚时，罚时为提交错误答案给予相应的罚时，罚时和比赛时间没有关系，只用来排名，每做错一道题会有罚时相加，罚时少排名靠前。\n</code></pre>\n<p>先看通过的题目数量，单独绿色表示通过，然后看罚时，罚时短的靠前，每个题目下面黑色数字表示做出这个题的时间，然后把 ac 的题的时间数累加到罚时中，其间每一次提交运行结果被判错误的话将被加罚 20 分钟时间，未正确解答的试题不记时。红色 - 表示没通过的题和错误提交次数，蓝色的表示比赛结束后的通过。</p>\n<table>\n<thead>\n<tr>\n<th>赛制</th>\n<th>提交反馈</th>\n<th>实时排名</th>\n<th>计分方式</th>\n<th>排名方式</th>\n<th>相关比赛</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>OI 制</td>\n<td>无</td>\n<td>无</td>\n<td>按点给分</td>\n<td>分数</td>\n<td>NOI、计算机能力挑战赛、蓝桥杯</td>\n</tr>\n<tr>\n<td>IOI 制</td>\n<td>有</td>\n<td>有</td>\n<td>按点给分</td>\n<td>分数</td>\n<td>PAT、团体程序设计天梯赛、CCF</td>\n</tr>\n<tr>\n<td>ACM 制</td>\n<td>有</td>\n<td>有</td>\n<td>全有或全无</td>\n<td>题数 + 时间</td>\n<td>ICPC、CCPC、牛客小白赛、传智杯</td>\n</tr>\n</tbody>\n</table>\n<p>ACM 赛制：每道题提交之后都有反馈，但看不到错误的测试样例 (leetcode 周赛可以看到)，每道题都有多个测试点，每道题必须通过了所有的测试点才算通过。每道题不限制提交次数，没通过的话会有罚时，比赛过程中可以看到实时排名，通过题数相同的情况下按照答题时间 + 罚时来排名。<br />\nACM 赛制的比赛：ICPC、CCPC、codeforces、leetcode 周赛及全国编程大赛、传智杯</p>\n<p>OI 赛制：每道题提交之后都没有反馈，根据每道题通过的测试点的数量获得相应的分数。每道题不限制提交次数，如果提交错误没有任何惩罚，仅以最后一次提交为准，赛后按照总得分来排名。<br />\nOI 赛制的比赛：NOI、考研机试、蓝桥杯、计算机能力挑战赛。</p>\n<p>IOI 赛制：每道题提交之后都有反馈，可以实时看到自己每道题得了多少分，但看不到错误的测试样例。每道题都有多个测试点，根据通过的测试点的数量获得相应的分数。每道题不限制提交次数，如果提交错误没有任何惩罚。比赛过程中一般可以看到实时排名，按照总得分来排名。IOI 赛制是结合了 OI 赛制和 ACM 赛制的特点。<br />\nIOI 赛制的比赛：PAT、团体程序设计天梯赛、CCF、CSP、洛谷月赛。</p>\n<p>注意 Tips：<br />\nOI 赛制和 IOI 赛制没有提交限制，提交错误也没有惩罚，所以可以大胆地提交，但 ACM 赛制的罚时会很大拉开差距。</p>\n<p>答案评测结果 \t含义<br />\n AC \tAccepted 答案正确 / 通过<br />\n CE \tComplie Error 编译错误<br />\n ILE \tInput Limit Exceed 输入超过限制<br />\n MLE \tMemory Limit Exceed 超出内存限制<br />\n OLE \tOutput Limit Exceed 输出超出限制<br />\n PC \tPartially Correct 部分正确<br />\n PE \tPresentation Error 格式错误<br />\n RE \tRuntime Error 运行时错误<br />\n TLE \tTime Limit Exceed 超出时间限制 / 超时<br />\n UKE \tUnknown Error 未知错误<br />\n WA \tWrong Answer 答案错误</p>\n",
            "tags": [
                "学习心得"
            ]
        },
        {
            "id": "http://红叶.top/2023/05/23/computer-science/notes/DFS%E5%92%8CBFS/",
            "url": "http://红叶.top/2023/05/23/computer-science/notes/DFS%E5%92%8CBFS/",
            "title": "BFS、DFS",
            "date_published": "2023-05-23T07:49:38.062Z",
            "content_html": "<h2 id=\"bfs-是-breadth-first-search-的缩写称为广度优先搜索或宽度优先搜索\"><a class=\"anchor\" href=\"#bfs-是-breadth-first-search-的缩写称为广度优先搜索或宽度优先搜索\">#</a> BFS 是 Breadth-First Search 的缩写，称为广度优先搜索，或宽度优先搜索。</h2>\n<p>1.1 搜索方式</p>\n<p>步骤 1：从源点出发，访问源点的邻居结点，将邻居节点依次放入队列中，并标记为已访问；</p>\n<p>步骤 2：取出队列中的邻居结点，依次访问每个节点未被访问的邻居节点；</p>\n<p>步骤 3：将邻居节点依次放入队列中，并标记为已访问；</p>\n<p>步骤 4：重复步骤 2~3 直到访问到目标节点或所有节点都标记为已访问。<br />\n算法代码：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream></span>  </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;queue></span>      </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">bool</span> visited<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">store_graph</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>    </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;=</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            cin<span class=\"token operator\">>></span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">bfs_graph</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>      </pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">bfs</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre> </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>visited<span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>visited<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"20\"></td><td><pre> </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>    </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>visited<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token function\">bfs</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"25\"></td><td><pre> </pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">bfs</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> v<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">Adj</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"29\"></td><td><pre> </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    queue<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> myqueue<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">int</span> adj<span class=\"token punctuation\">,</span>temp<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"32\"></td><td><pre> </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    cout<span class=\"token operator\">&lt;&lt;</span>v<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    visited<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    myqueue<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"36\"></td><td><pre> </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>myqueue<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">// 队列非空表示还有顶点未遍历到  </span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        temp<span class=\"token operator\">=</span>myqueue<span class=\"token punctuation\">.</span><span class=\"token function\">front</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 获得队列头元素  </span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        myqueue<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 头元素出对  </span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre> </pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        adj<span class=\"token operator\">=</span><span class=\"token function\">Adj</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>adj<span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>visited<span class=\"token punctuation\">[</span>adj<span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                cout<span class=\"token operator\">&lt;&lt;</span>adj<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                visited<span class=\"token punctuation\">[</span>adj<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                myqueue<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>adj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 进对  </span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"51\"></td><td><pre> </pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            adj<span class=\"token operator\">=</span><span class=\"token function\">Adj</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"56\"></td><td><pre> </pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">Adj</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span>     </pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> visited<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            <span class=\"token keyword\">return</span> i<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"62\"></td><td><pre> </pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"65\"></td><td><pre> </pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    cout<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"初始化图:\"</span><span class=\"token operator\">&lt;&lt;</span>endl<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token function\">store_graph</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"70\"></td><td><pre> </pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    cout<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"bfs遍历结果:\"</span><span class=\"token operator\">&lt;&lt;</span>endl<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token function\">bfs_graph</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"73\"></td><td><pre> </pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"dfs-是-depth-first-search-的缩写称为深度优先搜索\"><a class=\"anchor\" href=\"#dfs-是-depth-first-search-的缩写称为深度优先搜索\">#</a> DFS 是 Depth-First-Search 的缩写，称为深度优先搜索。</h2>\n<p>2.1 搜索方式</p>\n<p>步骤 1：从源点出发，访问源点的某个邻居节点，将其放入栈中，并标记为已访问；</p>\n<p>步骤 2：从栈中取出一个节点，访问该节点的未被访问的邻居节点；</p>\n<p>步骤 3：将邻居节点放入栈中，并标记为已访问；</p>\n<p>步骤 4：重复步骤 2 ~ 3，直到访问到目标节点或所有节点都标记为已访问；<br />\n算法代码：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream></span>  </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">bool</span> visited<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">store_graph</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 邻接矩阵存储图  </span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;=</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            cin<span class=\"token operator\">>></span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"15\"></td><td><pre> </pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">dfs_graph</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">// 深度遍历图  </span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"19\"></td><td><pre> </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>visited<span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>visited<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"21\"></td><td><pre> </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 遍历每个顶点是为了防止图不连通时无法访问每个顶点  </span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>visited<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"26\"></td><td><pre> </pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> v<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 深度遍历顶点  </span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">Adj</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"30\"></td><td><pre> </pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    cout<span class=\"token operator\">&lt;&lt;</span>v<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 访问顶点 v  </span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    visited<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"33\"></td><td><pre> </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">int</span> adj<span class=\"token operator\">=</span><span class=\"token function\">Adj</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>adj<span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>visited<span class=\"token punctuation\">[</span>adj<span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>     </pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>adj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 递归调用是实现深度遍历的关键所在  </span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre> </pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        adj<span class=\"token operator\">=</span><span class=\"token function\">Adj</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"43\"></td><td><pre> </pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">Adj</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span>   <span class=\"token comment\">// 求邻接点  </span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> visited<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token keyword\">return</span> i<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"49\"></td><td><pre> </pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"52\"></td><td><pre> </pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    cout<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"初始化图:\"</span><span class=\"token operator\">&lt;&lt;</span>endl<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token function\">store_graph</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"57\"></td><td><pre> </pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    cout<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"dfs遍历结果:\"</span><span class=\"token operator\">&lt;&lt;</span>endl<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token function\">dfs_graph</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"60\"></td><td><pre> </pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"bfs-和-dfs-的区别\"><a class=\"anchor\" href=\"#bfs-和-dfs-的区别\">#</a> bfs 和 dfs 的区别</h2>\n<p>1、 数据结构</p>\n<p>bfs 遍历节点是先进先出，一般使用队列作为辅助数据结构，dfs 遍历节点是先进后出，一般使用栈作为辅助数据结构；<br />\n2、 访问节点的方式</p>\n<p>bfs 是按层次访问的，先访问源点，再访问它的所有相邻节点，并且标记结点已访问，根据每个邻居结点的访问顺序，依次访问它们的邻居结点，并且标记节点已访问，重复这个过程，一直访问到目标节点或无未访问的节点为止。</p>\n<p>dfs 是按照一个路径一直访问到底，当前节点没有未访问的邻居节点时，然后回溯到上一个节点，不断的尝试，直到访问到目标节点或所有节点都已访问。<br />\n3、 应用</p>\n<p>bfs 适用于求源点与目标节点距离近的情况，例如：求最短路径。dfs 更适合于求解一个任意符合方案中的一个或者遍历所有情况，例如：全排列、拓扑排序、求到达某一点的任意一条路径。<br />\nBFS 常用于找单一的最短路线，它的特点是 &quot;搜到就是最优解&quot;，而 DFS 用于找所有解的问题，它的空间效率高，而且找到的不一定是最优解，必须记录并完成整个搜索，故一般情况下，深搜需要非常高效的剪枝（通过某种判断，避免一些不必要的遍历过程，形象的说，就是剪去了搜索树中的某些 “枝条”，故称剪枝）</p>\n",
            "tags": [
                "学习心得"
            ]
        },
        {
            "id": "http://红叶.top/2023/05/23/computer-science/notes/P-NP%E9%97%AE%E9%A2%98/",
            "url": "http://红叶.top/2023/05/23/computer-science/notes/P-NP%E9%97%AE%E9%A2%98/",
            "title": "P-NP",
            "date_published": "2023-05-23T07:49:38.062Z",
            "content_html": "<h2 id=\"详细信息\"><a class=\"anchor\" href=\"#详细信息\">#</a> 详细信息</h2>\n<p><strong><em>P 类问题</em></strong>：所有可以在<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlQTQlOUElRTklQTElQjklRTUlQkMlOEYlRTYlOTclQjYlRTklOTclQjQ/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">多项式时间</span>内求解的判定问题构成 P 类问题。<strong><em>判定问题</em></strong>_：_判断是否有一种能够解决某一类问题的能行算法的研究课题。</p>\n<p><strong><em>NP 类问题</em></strong>：所有的非确定性多项式时间可解的判定问题构成 NP 类问题。<strong><em>非确定性算法</em></strong>：非确定性算法将问题分解成猜测和验证两个阶段。算法的猜测阶段是非确定性的，算法的验证阶段是确定性的，它验证猜测阶段给出解的正确性。设算法 A 是解一个判定问题 Q 的非确定性算法，如果 A 的验证阶段能在多项式时间内完成，则称 A 是一个多项式时间非确定性算法。有些计算问题是确定性的，例如加减乘除，只要按照公式推导，按部就班一步步来，就可以得到结果。但是，有些问题是无法按部就班直接地计算出来。比如，找大<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTglQjQlQTglRTYlOTUlQjA/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">质数</span>的问题。有没有一个公式能推出下一个<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTglQjQlQTglRTYlOTUlQjA/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">质数</span>是多少呢？这种问题的答案，是无法直接计算得到的，只能通过间接的 “猜算” 来得到结果。这也就是非确定性问题。而这些问题的通常有个算法，它不能直接告诉你答案是什么，但可以告诉你，某个可能的结果是正确的答案还是错误的。这个可以告诉你 “猜算” 的答案正确与否的算法，假如可以在多项式（polynomial）时间内算出来，就叫做多项式非确定性问题。</p>\n<p><strong><em>NPC 问题</em></strong>：NP 中的某些问题的复杂性与整个类的复杂性相关联。这些问题中任何一个如果存在多项式时间的算法，那么所有 NP 问题都是多项式时间可解的。这些问题被称为 NP - 完全问题 (NPC 问题)。</p>\n<h2 id=\"举例叙述\"><a class=\"anchor\" href=\"#举例叙述\">#</a> 举例叙述</h2>\n<p>在一个周六的晚上，你参加了一个盛大的晚会。由于感到局促不安，你想知道这一大厅中是否有你已经认识的人。你的主人向你提议说，你一定认识那位正在甜点盘附近角落的女士罗丝。不费一秒钟，你就能向那里扫视，并且发现你的主人是正确的。然而，如果没有这样的暗示，你就必须环顾整个大厅，一个个地审视每一个人，看是否有你认识的人。</p>\n<p>生成问题的一个解通常比验证一个给定的解时间花费要多得多。这是这种一般现象的一个例子。与此类似的是，如果某人告诉你，数 13,717,421 可以写成两个较小的数的乘积，你可能不知道是否应该相信他，但是如果他告诉你他可以<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlOUIlQTAlRTUlQkMlOEYlRTUlODglODYlRTglQTclQTM/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">因式分解</span>为 3607 乘上 3803，那么你就可以用一个袖珍计算器容易验证这是对的。人们发现，所有的完全<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlQTQlOUElRTklQTElQjklRTUlQkMlOEY/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">多项式</span>非确定性问题，都可以转换为一类叫做满足性问题的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTklODAlQkIlRTglQkUlOTElRTglQkYlOTAlRTclQUUlOTc/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">逻辑运算</span>问题。既然这类问题的所有可能答案，都可以在<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlQTQlOUElRTklQTElQjklRTUlQkMlOEYlRTYlOTclQjYlRTklOTclQjQ/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">多项式时间</span>内计算，人们于是就猜想，是否这类问题，存在一个确定性算法，可以在多项式时间内，直接算出或是搜寻出正确的答案呢？这就是著名的 NP=P？的猜想。 不管我们编写程序是否灵巧，判定一个答案是可以很快利用内部知识来验证，还是没有这样的提示而需要花费大量时间来求解，被看作逻辑和计算机科学中最突出的问题之一。它是斯蒂文・考克于 1971 年陈述的。</p>\n<h2 id=\"千僖难题\"><a class=\"anchor\" href=\"#千僖难题\">#</a> 千僖难题</h2>\n<h3 id=\"背景\"><a class=\"anchor\" href=\"#背景\">#</a> 背景</h3>\n<p>美国麻州的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlODUlOEIlRTklOUIlQjcvMjEzMjEyMz9mcm9tTW9kdWxlPWxlbW1hX2lubGluaw==\">克雷</span>（Clay）数学研究所于 2000 年 5 月 24 日在巴黎法兰西学院宣布了一件被媒体炒得火热的大事：对七个 “千僖年数学难题” 的每一个悬赏一百万美元。</p>\n<h3 id=\"内容\"><a class=\"anchor\" href=\"#内容\">#</a> 内容</h3>\n<p>“千僖难题” 之一：P （确定性多项式算法）对 NP （非确定性多项式算法）</p>\n<p>“千僖难题” 之二：霍奇（Hodge）猜想</p>\n<p>“千僖难题” 之三：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlQkElOUUlRTUlOEElQTAlRTglOEUlQjElRUYlQkMlODhQb2luY2FyZSVFRiVCQyU4OSVFNyU4QyU5QyVFNiU4MyVCMz9mcm9tTW9kdWxlPWxlbW1hX2lubGluaw==\">庞加莱（Poincare）猜想</span></p>\n<p>“千僖难题” 之四：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTklQkIlOEUlRTYlOUIlQkMlRUYlQkMlODhSaWVtYW5uJUVGJUJDJTg5JUU1JTgxJTg3JUU4JUFFJUJFP2Zyb21Nb2R1bGU9bGVtbWFfaW5saW5r\">黎曼（Riemann）假设</span></p>\n<p>“千僖难题” 之五：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTYlOUQlQTglRUYlQkMlOEQlRTclQjElQjMlRTUlQjAlOTQlRTYlOTYlQUYlRUYlQkMlODhZYW5nLU1pbGxzJUVGJUJDJTg5JUU1JUFEJTk4JUU1JTlDJUE4JUU2JTgwJUE3JUU1JTkyJThDJUU4JUI0JUE4JUU5JTg3JThGJUU3JUJDJUJBJUU1JThGJUEzP2Zyb21Nb2R1bGU9bGVtbWFfaW5saW5r\">杨－米尔斯（Yang-Mills）存在性和质量缺口</span></p>\n<p>“千僖难题” 之六：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTclQkElQjMlRTclQkIlQjQlRTUlOEYlQjYlRUYlQkMlOEQlRTYlOTYlQUYlRTYlODklOTglRTUlODUlOEIlRTYlOTYlQUYlRUYlQkMlODhOYXZpZXItU3Rva2VzJUVGJUJDJTg5JUU2JTk2JUI5JUU3JUE4JThCP2Zyb21Nb2R1bGU9bGVtbWFfaW5saW5r\">纳维叶－斯托克斯（Navier-Stokes）方程</span>的存在性与光滑性</p>\n<p>“千僖难题” 之七：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTglQjQlOUQlRTglQjUlQUIlRUYlQkMlODhCaXJjaCVFRiVCQyU4OSVFNSU5MiU4QyVFNiU5NiVBRiVFNyVCQiVCNCVFOCVBRSVCNyVFOSU4MCU5QSVFRiVCQyU4RCVFNiU4OCVCNCVFNSVCMCU5NCVFRiVCQyU4OFN3aW5uZXJ0b24tRHllciVFRiVCQyU4OSVFNyU4QyU5QyVFNiU4MyVCMz9mcm9tTW9kdWxlPWxlbW1hX2lubGluaw==\">贝赫（Birch）和斯维讷通－戴尔（Swinnerton-Dyer）猜想</span></p>\n<h3 id=\"评价\"><a class=\"anchor\" href=\"#评价\">#</a> 评价</h3>\n<p>NP 完全问题排在百万美元大奖的首位，足见他的显赫地位和无穷魅力。</p>\n<h2 id=\"简介\"><a class=\"anchor\" href=\"#简介\">#</a> 简介</h2>\n<p><a href=\"https://baike.baidu.com/pic/NP%E5%AE%8C%E5%85%A8%E9%97%AE%E9%A2%98/4934286/0/d058ccbf6c81800a2c57c93db03533fa828b4756?fr=lemma&amp;fromModule=lemma_content-image&amp;ct=single\" title=\"假设P ≠ NP的图解。若P = NP则三类相同。\"><img data-src=\"https://bkimg.cdn.bcebos.com/pic/d058ccbf6c81800a2c57c93db03533fa828b4756?x-bce-process=image/resize,m_lfit,w_440,limit_1\" alt=\"假设P ≠ NP的图解。若P = NP则三类相同。\" /></a>假设 P ≠ NP 的图解。若 P = NP 则三类相同。</p>\n<p>NP 就是 Non-deterministic Polynomial 的问题，也即是多项式复杂程度的非确定性问题。而如果任何一个 NP 问题都能通过一个<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlQTQlOUElRTklQTElQjklRTUlQkMlOEY/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">多项式</span>时间算法转换为某个<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9OUCVFOSU5NyVBRSVFOSVBMiU5OD9mcm9tTW9kdWxlPWxlbW1hX2lubGluaw==\"> NP 问题</span>，那么这个 NP 问题就称为 NP 完全问题（Non-deterministic Polynomial complete problem）。NP 完全问题也叫做 NPC 问题。 [1]</p>\n<p>有些计算问题是确定性的，比如加减乘除之类，你只要按照公式推导，按部就班一步步来，就可以得到结果。但是，有些问题是无法按部就班直接地计算出来。比如，找大<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTglQjQlQTglRTYlOTUlQjA/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">质数</span>的问题。有没有一个公式，你一套公式，就可以一步步推算出来，下一个质数应该是多少呢？这样的公式是没有的。再比如，大的合数<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlODglODYlRTglQTclQTMlRTglQjQlQTglRTUlOUIlQTAlRTYlOTUlQjA/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">分解质因数</span>的问题，有没有一个公式，把<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlOTAlODglRTYlOTUlQjA/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">合数</span>代进去，就直接可以算出，它的因子各自是多少？也没有这样的公式。</p>\n<p>这种问题的答案，是无法直接计算得到的，只能通过间接的 “猜算” 来得到结果。这就是非确定性问题。而这些问题的通常有个算法，它不能直接告诉你答案是什么，但可以告诉你，某个可能的结果是正确的答案还是错误的。这个可以告诉你 “猜算” 的答案正确与否的算法，假如可以在<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlQTQlOUElRTklQTElQjklRTUlQkMlOEYlRTYlOTclQjYlRTklOTclQjQ/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">多项式时间</span>内算出来，就叫做多项式非确定性问题。而如果这个问题的所有可能答案，都是可以在多项式时间内进行正确与否的验算的话，就叫完全多项式非确定问题。 [2]</p>\n<p>完全多项式非确定性问题可以用<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTclQTklQjclRTQlQjglQkUlRTYlQjMlOTU/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">穷举法</span>得到答案，一个个检验下去，最终便能得到结果。但是这样算法的复杂程度，是<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTYlOEMlODclRTYlOTUlQjA/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">指数</span>关系，因此计算的时间随问题的复杂程度成指数的增长，很快便变得不可计算了。</p>\n<p>人们发现，所有的完全<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlQTQlOUElRTklQTElQjklRTUlQkMlOEY/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">多项式</span>非确定性问题，都可以转换为一类叫做满足性问题的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTklODAlQkIlRTglQkUlOTElRTglQkYlOTAlRTclQUUlOTc/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">逻辑运算</span>问题。既然这类问题的所有可能答案，都可以在多项式时间内计算，人们于是就猜想，是否这类问题存在一个确定性算法，可以在多项式时间内直接算出或是搜寻出正确的答案呢？这就是著名的 NP=P？的猜想。</p>\n<p>解决这个猜想，无非两种可能，一种是找到一个这样的算法，只要针对某个特定 NP 完全问题找到一个算法，所有这类问题都可以迎刃而解了，因为他们可以转化为同一个问题。另外的一种可能，就是这样的算法是不存在的。那么就要从数学理论上证明它为什么不存在。</p>\n<h2 id=\"搜索方法\"><a class=\"anchor\" href=\"#搜索方法\">#</a> 搜索方法</h2>\n<h3 id=\"近邻法\"><a class=\"anchor\" href=\"#近邻法\">#</a> 近邻法</h3>\n<p><strong>近邻法（nearest neighbor)</strong>　推销员从某个城镇出发，永远选择前往最近且尚未去过的城镇，最后再返回原先的出发点。这方法简单，也许是多数人的直觉做法，但是近邻法的短视使其表现非常不好，通常后段的路程会非常痛苦。</p>\n<h3 id=\"插入法\"><a class=\"anchor\" href=\"#插入法\">#</a> 插入法</h3>\n<p><strong>插入法（insertion)</strong>　先产生连接部分点的子路线，再根据某种法则将其它的点逐一加入路线。比如最近插入法（nearest insertion），先针对外围的点建构子路线，然后从剩余的点里面评估何者加入后路线总长度增加的幅度最小，再将这个点加入路线。又比如最远插入法（farthest insertion），是从剩余的点里面选择距离子路线最远的点，有点先苦后甜的滋味。</p>\n<h3 id=\"模拟退火算法\"><a class=\"anchor\" href=\"#模拟退火算法\">#</a> 模拟退火算法</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTYlQTglQTElRTYlOEIlOUYlRTklODAlODAlRTclODElQUIlRTclQUUlOTclRTYlQjMlOTU/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">模拟退火算法</span><strong>（Simulated Annealing)</strong> 来源于固体退火原理，将固体加温至充分高，再让其徐徐冷却，加温时，固体内部粒子随温升变为无序状，内能增大，而徐徐冷却时粒子渐趋有序，在每个温度都达到平衡态，最后在常温时达到基态，内能减为最小。根据 Metropolis 准则，粒子在温度 T 时趋于平衡的概率为 e-ΔE/(kT），其中 E 为温度 T 时的内能，ΔE 为其改变量，k 为 Boltzmann 常数。用固体退火模拟组合优化问题，将内能 E 模拟为目标函数值 f，温度 T 演化成控制参数 t，即得到解组合优化问题的模拟退火算法：由初始解 i 和控制参数初值 t 开始，对当前解重复 “产生新解→计算目标函数差→接受或舍弃” 的迭代，并逐步衰减 t 值，算法终止时的当前解即为所得近似最优解。</p>\n<h3 id=\"遗传算法\"><a class=\"anchor\" href=\"#遗传算法\">#</a> 遗传算法</h3>\n<p>遗传算法是仿真生物<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTklODElOTclRTQlQkMlQTAlRTUlQUQlQTYvMjMzOTE4P2Zyb21Nb2R1bGU9bGVtbWFfaW5saW5r\">遗传学</span>和自然选择机理，通过人工方式所构造的一类搜索算法，从某种程度上说遗传算法是对生物进化过程进行的数学方式仿真。生物种群的生存过程普遍遵循<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTglQkUlQkUlRTUlQjAlOTQlRTYlOTYlODc/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">达尔文</span>进化准则，群体中的个体根据对环境的适应能力而被大自然所选择或淘汰。进化过程的结果反映在个体的结构上，其染色体包含若干基因，相应的表现型和基因型的联系体现了个体的外部特性与内部机理间逻辑关系。通过个体之间的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTQlQkElQTQlRTUlOEYlODkvMTA4NjAxMDQ/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">交叉</span>、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlOEYlOTglRTUlQkMlODIvMzQxMTgyP2Zyb21Nb2R1bGU9bGVtbWFfaW5saW5r\">变异</span>来适应大自然环境。生物<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTYlOUYlOTMlRTglODklQjIlRTQlQkQlOTMvMTk1ODgxP2Zyb21Nb2R1bGU9bGVtbWFfaW5saW5r\">染色体</span>用数学方式或计算机方式来体现就是一串数码，仍叫染色体，有时也叫个体；适应能力是对应着一个染色体的一个数值来衡量；染色体的选择或淘汰则按所面对的问题是求最大还是最小来进行。 [3]</p>\n<h3 id=\"神经网络算法\"><a class=\"anchor\" href=\"#神经网络算法\">#</a> 神经网络算法</h3>\n<p>根据一个简化的统计，人脑由百亿条神经组成 — 每条神经平均连结到其它几千条神经。通过这种连结方式，神经可以收发不同数量的能量。神经的一个非常重要的功能是它们对能量的接受并不是立即作出响应，而是将它们累加起来，当这个累加的总和达到某个临界<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTklOTglODglRTUlODAlQkM/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">阈值</span>时，它们将它们自己的那部分能量发送给其它的神经。大脑通过调节这些连结的数目和强度进行学习。尽管这是个生物行为的简化描述。但同样可以充分有力地被看作是神经网络的模型。</p>\n<h2 id=\"填字游戏\"><a class=\"anchor\" href=\"#填字游戏\">#</a> 填字游戏</h2>\n<p><a href=\"https://baike.baidu.com/pic/NP%E5%AE%8C%E5%85%A8%E9%97%AE%E9%A2%98/4934286/0/00e93901213fb80ed5ce93a13fd12f2eb93894ad?fr=lemma&amp;fromModule=lemma_content-image&amp;ct=single\" title=\"NP完全问题之填数游戏\"><img data-src=\"https://bkimg.cdn.bcebos.com/pic/00e93901213fb80ed5ce93a13fd12f2eb93894ad?x-bce-process=image/resize,m_lfit,w_440,limit_1\" alt=\"NP完全问题之填数游戏\" /></a> NP 完全问题之填数游戏</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlQTElQUIlRTUlQUQlOTclRTYlQjglQjglRTYlODglOEYvMTM2MTk5OD9mcm9tTW9kdWxlPWxlbW1hX2lubGluaw==\">填字游戏</span>是一种最常见的益智纸上游戏，也是 NP 完全问题之一，游戏一般给出一个矩形的表格。这个表格被分割为若干个大小相同的方格，方格的颜色有白色与黑色两种。白色的方格组成一些交叉的行与列，行列的长度不等。玩家根据题目所提供的有关信息，将答案填入这些行与列之中，每个白色方格中只能填入一个字。一般地说，题目给出的每一条信息就是对应的一行或一列的解题线索。在行与列交叉的地方，玩家必须保证在交叉的方格中填入的字同时满足题目中对行与列的要求。（详见<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlQTElQUIlRTUlQUQlOTclRTYlQjglQjglRTYlODglOEYvMTM2MTk5OD9mcm9tTW9kdWxlPWxlbW1hX2lubGluaw==\">填字游戏</span>）</p>\n<h2 id=\"相关\"><a class=\"anchor\" href=\"#相关\">#</a> 相关</h2>\n<p>最常被引用的结果之一设计神喻。假想你有一个魔法机器可以解决单个问题，例如决定一个给定的数字是否为质数，但可以瞬间解决这个问题。我们的新问题是，若我们被允许任意利用这个机器，是否存在我们可以在多项式时间内验证但无法在多项式时间内解决的问题？结果是，依赖于机器能解决的问题，P = NP 和 P ≠ NP 二者都可以证明。这个结论的后果是，任何可以修改来证明该机器的存在性的结果不能解决问题。不幸的是，几乎所有经典的方法和大部分已知的方法可以这样修改（我们称它们在相对化）。</p>\n<p>如果这还不算太糟的话，1993 年 Razborov 和 Rudich 证明的一个结果表明，给定一个特定的可信的假设，在某种意义下 “自然” 的证明不能解决 P = NP 问题。这表明一些现在似乎最有希望的方法不太可能成功。随着更多这类的定理得到证明，该定理的可能证明有越来越多的陷阱要规避。这实际上也是为什么 NP 完全问题有用的原因：若有一个<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlQTQlOUElRTklQTElQjklRTUlQkMlOEYlRTYlOTclQjYlRTklOTclQjQ/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">多项式时间</span>算法，或者没有一个这样的算法，对于 NP 完全问题存在，这将用一种相信不被上述结果排除在外的方法来解决 P = NP 问题。P=NP 问题可以用逻辑命题的特定类的可表达性的术语来重新表述。所有 P 中的语言可以用<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTQlQjglODAlRTklOTglQjYlRTklODAlQkIlRTglQkUlOTE/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">一阶逻辑</span>加上最小<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTQlQjglOEQlRTUlOEElQTglRTclODIlQjk/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">不动点</span>操作（实际上，这允许了递归函数的定义）来表达。类似地，NP 是可以用存在性<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTQlQkElOEMlRTklOTglQjYlRTklODAlQkIlRTglQkUlOTE/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">二阶逻辑</span>来表达 — 也就是，在关系、函数、和<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlQUQlOTAlRTklOUIlODY/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">子集</span>上排除了全域量词的二阶逻辑。多项式等级，PH 中的语言对应与所有的二阶逻辑。这样，“P 是 NP 的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTclOUMlOUYlRTUlQUQlOTAlRTklOUIlODY/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">真子集</span>吗” 这样的问题可以表述为 “是否存在性二阶逻辑能够表达带最小不动点操作的一阶逻辑的所不能表达的语言？” [4]</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTYlOTklQUUlRTYlOUUlOTclRTYlOTYlQUYlRTklQTElQkYlRTUlQTQlQTclRTUlQUQlQTY/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">普林斯顿大学</span>计算机系楼将二进制代码表述的 “P=NP?” 问题刻进顶楼西面的砖头上。如果证明了 P=NP，砖头可以很方便的换成表示 “P=NP！”。<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlQkElQjclRTUlQTUlODglRTUlQjAlOTQlRTUlQTQlQTclRTUlQUQlQTY/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">康奈尔大学</span>的 Hubert Chen 博士提供了这个玩笑式的 P 不等于 NP 的证明：“反证法。设 P = NP。令 y 为一个 P = NP 的证明。证明 y 可以用一个合格的计算机科学家在<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlQTQlOUElRTklQTElQjklRTUlQkMlOEYlRTYlOTclQjYlRTklOTclQjQ/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">多项式时间</span>内验证，我们认定这样的科学家的存在性为真。但是，因为 P = NP，该证明 y 可以在多项式时间内由这样的科学家发现。但是这样的发现还没有发生（虽然这样的科学家试图发现这样的一个证明），我们得到矛盾。</p>\n<h2 id=\"最新情况\"><a class=\"anchor\" href=\"#最新情况\">#</a> 最新情况</h2>\n<p>2010 年 8 月 6 日，HP LAB 的 Vinay Deolalikar 教授宣布证明了 P!=NP，证明文章已经发送到该问题各相关领域专家手中，等待检验，在他的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTQlQjglQkIlRTklQTElQjU/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">主页</span>上，证明过程已经公布（PDF 格式共 103 页），但在 8 月 15 日，人们关于论文的看法 —— 即证明不能成立 —— 已经趋于稳定（当然这不能排除大家都同时犯了错误的可能性），随后的发言越来越多地集中于更抽象的层面，并且至今仍在继续。</p>\n<p><a href=\"https://baike.baidu.com/pic/NP%E5%AE%8C%E5%85%A8%E9%97%AE%E9%A2%98/4934286/0/a8ec8a13632762d0955650c9a9ec08fa513dc658?fr=lemma&amp;fromModule=lemma_content-image&amp;ct=single\" title=\"NP完全问题说明\"><img data-src=\"https://bkimg.cdn.bcebos.com/pic/a8ec8a13632762d0955650c9a9ec08fa513dc658?x-bce-process=image/resize,m_lfit,w_440,limit_1\" alt=\"NP完全问题说明\" /></a> NP 完全问题说明</p>\n<p>论 NP=P？</p>\n<p>NP=P，概括的说就是 3 句话：</p>\n<p>1. 任意简单无向图的最大团问题等于其对应的 “任意两个顶点的距离不大于 2 的图”—— 可以称之为理想图的最大团问题；</p>\n<p>2. 任意理想图的图着色问题是多项式时间问题；</p>\n<p>3. 任意理想图，其图着色问题可在多项式时间内转换为它的最大团问题。</p>\n<p>证明大纲：</p>\n<p>定理 1. 设 G=（V,E）是简单无向图，va、vb 是 G 中距离大于 2 的两个顶点，E'=E∪{（va，vb）}，则 G'=(V，E') 与 G 有相同的最大团。</p>\n<p>证明：显然。</p>\n<p>推论：对任意简单无向图 G=（V,E），存在简单无向图 G'=(V，E')，满足：</p>\n<p>（1）E⊆E'；</p>\n<p>（2）G' 中任意两个顶点的距离不大于 2；</p>\n<p>（3）G' 与 G 有相同的最大团。</p>\n<p>定理 2. 设 G=（V,E）是 n 阶简单无向图，n≥3，G 中任意两个顶点的距离不大于 2，则存在 n 的多项式时间算法，可在该算法下，解决 G 的图着色问题，即确定 G 的顶点色数。</p>\n<p>证明思路与算法：易知 G 是 k - 部图（不一定、也无须是完全 k - 部图）。</p>\n<p>算法：设 v 是 G 中度最大的顶点，显然 v 的邻点应该与 v 着色不同。在距离 v 为 2 的</p>\n<p>顶点中，依次选取 G 中度最大且互不相邻的顶点，得到包含 v 的一个极大独立集 V1，</p>\n<p>设 V=V1∪V2,V1∩V2=Ø，G 去掉 V1 中所有顶点（及其关联边）得到图</p>\n<p>G2=(V2，E2)。则可以证明 G2 的顶点色数比 G 的顶点色数小 1；且 G2 去掉度</p>\n<p>小于 2 的顶点（若这样的顶点存在）后，任意两个顶点的距离也是不大于 2 的。</p>\n<p>由递归关系可知 G 的顶点色数可以在 n 的多项式时间内确定。</p>\n<p>定理 3. 设 G=（V,E）是 n 阶简单无向图，n≥3，G 中任意两个顶点的距离不大于 2，则 G 的图着色问题（顶点色数问题）可以在 n 的多项式时间内转换为 G 的最大团问题。</p>\n",
            "tags": [
                "学习心得"
            ]
        },
        {
            "id": "http://红叶.top/2023/05/23/computer-science/notes/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/",
            "url": "http://红叶.top/2023/05/23/computer-science/notes/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/",
            "title": "动态规划",
            "date_published": "2023-05-23T07:49:38.062Z",
            "content_html": "<p><strong>动态规划算法通常用于求解具有最优性质的问题</strong></p>\n<h2 id=\"基本概念\"><a class=\"anchor\" href=\"#基本概念\">#</a> 基本概念</h2>\n<pre><code>  动态规划过程是：每次决策依赖于当前状态，又随即引起状态的转移。一个决策序列就是在变化的状态中产生出来的，所以，这种多阶段最优化决策解决问题的过程就称为动态规划(DP)。\n</code></pre>\n<h2 id=\"基本思想与策略\"><a class=\"anchor\" href=\"#基本思想与策略\">#</a> 基本思想与策略</h2>\n<pre><code>  基本思想与分治法类似，也是将待求解的问题分解为若干个子问题（阶段），按顺序求解子阶段，前一子问题的解，为后一子问题的求解提供了有用的信息。在求解任一子问题时，列出各种可能的局部解，通过决策保留那些有可能达到最优的局部解，丢弃其他局部解。依次解决各子问题，最后一个子问题就是初始问题的解。由于动态规划解决的问题多数有重叠子问题这个特点，为减少重复计算，对每一个子问题只解一次，将其不同阶段的不同状态保存在一个二维数组中。与分治法最大的差别是：适合于用动态规划法求解的问题，经分解后得到的子问题往往不是互相独立的（即下一个子阶段的求解是建立在上一个子阶段的解的基础上，进行进一步的求解）。\n</code></pre>\n<h2 id=\"动态规划的算法设计\"><a class=\"anchor\" href=\"#动态规划的算法设计\">#</a> 动态规划的算法设计</h2>\n<p>1：找出最优解的性质，并描述其结构特征</p>\n<p>2：递归定义最优值</p>\n<p>3：以自底向上的方式计算最优值</p>\n<p>4：根据计算最优值时得到的信息构造出最优解</p>\n<p>能采用动态规划求解的问题的一般要具有 3 个性质</p>\n<pre><code>  (1) 最优化原理：如果问题的最优解所包含的子问题的解也是最优的，就称该问题具有最优子结构，即满足最优化原理。\n  (2) 无后效性：即某阶段状态一旦确定，就不受这个状态以后决策的影响。也就是说，某状态以后的过程不会影响以前的状态，只与当前状态有关。\n\n  (3) 有重叠子问题：即子问题之间是不独立的，一个子问题在下一阶段决策中可能被多次使用到。（该性质并不是动态规划适用的必要条件，但是如果没有这条性质，动态规划算法同其他算法相比就不具备优势）动态规划将原来具有指数级时间复杂度的搜索算法改进成了具有多项式时间复杂度的算法。其中的关键在于解决冗余，这是动态规划算法的根本目的。动态规划实质上是一种以空间换时间的技术，它在实现的过程中，不得不存储产生过程中的各种状态，所以它的空间复杂度要大于其它的算法。\n</code></pre>\n<p>使用动态规划求解问题，最重要的就是确定动态规划三要素</p>\n<p>（1）问题的阶段</p>\n<p>（2）每个阶段的状态</p>\n<p>（3）从前一个阶段转化到后一个阶段之间的递推关系。</p>\n<pre><code>  递推关系必须是从次小的问题开始到较大的问题之间的转化，从这个角度来说，动态规划往往可以用递归程序来实现，不过因为递推可以充分利用前面保存的子问题的解来减少重复计算，所以对于大规模问题来说，有递归不可比拟的优势，这也是动态规划算法的核心之处。确定了动态规划的这三要素，整个求解过程就可以用一个最优决策表来描述，最优决策表是一个二维表，其中行表示决策的阶段，列表示问题状态，表格需要填写的数据一般对应此问题的在某个阶段某个状态下的最优值（如最短路径，最长公共子序列，最大价值等），填表的过程就是根据递推关系，从1行1列开始，以行或者列优先的顺序，依次填写表格，最后根据整个表格的数据通过简单的取舍或者运算求得问题的最优解:f(n,m)=max&#123;f(n-1,m), f(n-1,m-w[n])+P(n,m)&#125;\n</code></pre>\n<h2 id=\"动态规划的具体步骤\"><a class=\"anchor\" href=\"#动态规划的具体步骤\">#</a> 动态规划的具体步骤</h2>\n<pre><code>  (1)划分阶段：按照问题的时间或空间特征，把问题分为若干个阶段。在划分阶段时，注意划分后的阶段一定要是有序的或者是可排序的，否则问题就无法求解。\n  (2)确定状态和状态变量：将问题发展到各个阶段时所处于的各种客观情况用不同的状态表示出来。当然，状态的选择要满足无后效性。\n  (3)确定决策并写出状态转移方程：因为决策和状态转移有着天然的联系，状态转移就是根据上一阶段的状态和决策来导出本阶段的状态。所以如果确定了决策，状态转移方程也就可写出。但事实上常常是反过来做，根据相邻两个阶段的状态之间的关系来确定决策方法和状态转移方程。\n  (4)寻找边界条件：给出的状态转移方程是一个递推式，需要一个递推的终止条件或边界条件。</code></pre>\n",
            "tags": [
                "学习心得"
            ]
        },
        {
            "id": "http://红叶.top/2023/05/17/computer-science/network/TCP%20IP%20%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/",
            "url": "http://红叶.top/2023/05/17/computer-science/network/TCP%20IP%20%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/",
            "title": "TCP IP 网络模型",
            "date_published": "2023-05-17T10:55:03.059Z",
            "content_html": "<p>问问大家，为什么要有 TCP/IP 网络模型？</p>\n<p>对于同一台设备上的进程间通信，有很多种方式，比如有管道、消息队列、共享内存、信号等方式，而对于不同设备上的进程间通信，就需要网络通信，而设备是多样性的，所以要兼容多种多样的设备，就协商出了一套<strong>通用的网络协议</strong>。</p>\n<p>这个网络协议是分层的，每一层都有各自的作用和职责，接下来就根据「 TCP/IP 网络模型」分别对每一层进行介绍。</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly94aWFvbGluY29kaW5nLmNvbS9uZXR3b3JrLzFfYmFzZS90Y3BfaXBfbW9kZWwuaHRtbCMlRTUlQkElOTQlRTclOTQlQTglRTUlQjElODI=\">#</span>应用层</h2>\n<p>最上层的，也是我们能直接接触到的就是<strong>应用层</strong>（<em>Application Layer</em>），我们电脑或手机使用的应用软件都是在应用层实现。那么，当两个不同设备的应用需要通信的时候，应用就把应用数据传给下一层，也就是传输层。</p>\n<p>所以，应用层只需要专注于为用户提供应用功能，比如 HTTP、FTP、Telnet、DNS、SMTP 等。</p>\n<p>应用层是不用去关心数据是如何传输的，就类似于，我们寄快递的时候，只需要把包裹交给快递员，由他负责运输快递，我们不需要关心快递是如何被运输的。</p>\n<p>而且应用层是工作在操作系统中的用户态，传输层及以下则工作在内核态。</p>\n<h2 id=\"-2\"><a class=\"anchor\" href=\"#-2\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly94aWFvbGluY29kaW5nLmNvbS9uZXR3b3JrLzFfYmFzZS90Y3BfaXBfbW9kZWwuaHRtbCMlRTQlQkMlQTAlRTglQkUlOTMlRTUlQjElODI=\">#</span>传输层</h2>\n<p>应用层的数据包会传给传输层，<strong>传输层</strong>（<em>Transport Layer</em>）是为应用层提供网络支持的。</p>\n<p><img data-src=\"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost4@main/%E7%BD%91%E7%BB%9C/https/%E5%BA%94%E7%94%A8%E5%B1%82.png\" alt=\"\" /></p>\n<p>在传输层会有两个传输协议，分别是 TCP 和 UDP。</p>\n<p>TCP 的全称叫传输控制协议（<em>Transmission Control Protocol</em>），大部分应用使用的正是 TCP 传输层协议，比如 HTTP 应用层协议。TCP 相比 UDP 多了很多特性，比如流量控制、超时重传、拥塞控制等，这些都是为了保证数据包能可靠地传输给对方。</p>\n<p>UDP 相对来说就很简单，简单到只负责发送数据包，不保证数据包是否能抵达对方，但它实时性相对更好，传输效率也高。当然，UDP 也可以实现可靠传输，把 TCP 的特性在应用层上实现就可以，不过要实现一个商用的可靠 UDP 传输协议，也不是一件简单的事情。</p>\n<p>应用需要传输的数据可能会非常大，如果直接传输就不好控制，因此当传输层的数据包大小超过 MSS（TCP 最大报文段长度） ，就要将数据包分块，这样即使中途有一个分块丢失或损坏了，只需要重新发送这一个分块，而不用重新发送整个数据包。在 TCP 协议中，我们把每个分块称为一个 <strong>TCP 段</strong>（<em>TCP Segment</em>）。</p>\n<p><img data-src=\"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost4@main/%E7%BD%91%E7%BB%9C/https/TCP%E6%AE%B5.png\" alt=\"\" /></p>\n<p>当设备作为接收方时，传输层则要负责把数据包传给应用，但是一台设备上可能会有很多应用在接收或者传输数据，因此需要用一个编号将应用区分开来，这个编号就是<strong>端口</strong>。</p>\n<p>比如 80 端口通常是 Web 服务器用的，22 端口通常是远程登录服务器用的。而对于浏览器（客户端）中的每个标签栏都是一个独立的进程，操作系统会为这些进程分配临时的端口号。</p>\n<p>由于传输层的报文中会携带端口号，因此接收方可以识别出该报文是发送给哪个应用。</p>\n<h2 id=\"-3\"><a class=\"anchor\" href=\"#-3\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly94aWFvbGluY29kaW5nLmNvbS9uZXR3b3JrLzFfYmFzZS90Y3BfaXBfbW9kZWwuaHRtbCMlRTclQkQlOTElRTclQkIlOUMlRTUlQjElODI=\">#</span>网络层</h2>\n<p>传输层可能大家刚接触的时候，会认为它负责将数据从一个设备传输到另一个设备，事实上它并不负责。</p>\n<p>实际场景中的网络环节是错综复杂的，中间有各种各样的线路和分叉路口，如果一个设备的数据要传输给另一个设备，就需要在各种各样的路径和节点进行选择，而传输层的设计理念是简单、高效、专注，如果传输层还负责这一块功能就有点违背设计原则了。</p>\n<p>也就是说，我们不希望传输层协议处理太多的事情，只需要服务好应用即可，让其作为应用间数据传输的媒介，帮助实现应用到应用的通信，而实际的传输功能就交给下一层，也就是<strong>网络层</strong>（<em>Internet Layer</em>）。</p>\n<p><img data-src=\"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost4@main/%E7%BD%91%E7%BB%9C/https/%E7%BD%91%E7%BB%9C%E5%B1%82.png\" alt=\"\" /></p>\n<p>网络层最常使用的是 IP 协议（<em>Internet Protocol</em>），IP 协议会将传输层的报文作为数据部分，再加上 IP 包头组装成 IP 报文，如果 IP 报文大小超过 MTU（以太网中一般为 1500 字节）就会<strong>再次进行分片</strong>，得到一个即将发送到网络的 IP 报文。</p>\n<p><img data-src=\"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E9%94%AE%E5%85%A5%E7%BD%91%E5%9D%80%E8%BF%87%E7%A8%8B/12.jpg\" alt=\"\" /></p>\n<p>网络层负责将数据从一个设备传输到另一个设备，世界上那么多设备，又该如何找到对方呢？因此，网络层需要有区分设备的编号。</p>\n<p>我们一般用 IP 地址给设备进行编号，对于 IPv4 协议， IP 地址共 32 位，分成了四段（比如，192.168.100.1），每段是 8 位。只有一个单纯的 IP 地址虽然做到了区分设备，但是寻址起来就特别麻烦，全世界那么多台设备，难道一个一个去匹配？这显然不科学。</p>\n<p>因此，需要将 IP 地址分成两种意义：</p>\n<ul>\n<li>一个是<strong>网络号</strong>，负责标识该 IP 地址是属于哪个「子网」的；</li>\n<li>一个是<strong>主机号</strong>，负责标识同一「子网」下的不同主机；</li>\n</ul>\n<p>怎么分的呢？这需要配合<strong>子网掩码</strong>才能算出 IP 地址 的网络号和主机号。</p>\n<p>举个例子，比如 10.100.122.0/24，后面的 <code>/24</code>  表示就是  <code>255.255.255.0</code>  子网掩码，255.255.255.0 二进制是「11111111-11111111-11111111-00000000」，大家数数一共多少个 1？不用数了，是 24 个 1，为了简化子网掩码的表示，用 / 24 代替 255.255.255.0。</p>\n<p>知道了子网掩码，该怎么计算出网络地址和主机地址呢？</p>\n<p>将 10.100.122.2 和 255.255.255.0 进行<strong>按位与运算</strong>，就可以得到网络号，如下图：</p>\n<p><img data-src=\"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/IP/16.jpg\" alt=\"img\" /></p>\n<p>将 255.255.255.0 取反后与 IP 地址进行进行<strong>按位与运算</strong>，就可以得到主机号。</p>\n<p>大家可以去搜索下子网掩码计算器，自己改变下「掩码位」的数值，就能体会到子网掩码的作用了。</p>\n<p><img data-src=\"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost4/%E7%BD%91%E7%BB%9C/%E5%AD%90%E7%BD%91%E6%8E%A9%E7%A0%81%E8%AE%A1%E7%AE%97%E5%99%A8.png\" alt=\"子网掩码计算器\" /></p>\n<p>那么在寻址的过程中，先匹配到相同的网络号（表示要找到同一个子网），才会去找对应的主机。</p>\n<p>除了寻址能力， IP 协议还有另一个重要的能力就是<strong>路由</strong>。实际场景中，两台设备并不是用一条网线连接起来的，而是通过很多网关、路由器、交换机等众多网络设备连接起来的，那么就会形成很多条网络的路径，因此当数据包到达一个网络节点，就需要通过路由算法决定下一步走哪条路径。</p>\n<p>路由器寻址工作中，就是要找到目标地址的子网，找到后进而把数据包转发给对应的网络内。</p>\n<p><img data-src=\"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/IP/17.jpg\" alt=\"IP地址的网络号\" /></p>\n<p>所以，<strong>IP 协议的寻址作用是告诉我们去往下一个目的地该朝哪个方向走，路由则是根据「下一个目的地」选择路径。寻址更像在导航，路由更像在操作方向盘</strong>。</p>\n<h2 id=\"-4\"><a class=\"anchor\" href=\"#-4\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly94aWFvbGluY29kaW5nLmNvbS9uZXR3b3JrLzFfYmFzZS90Y3BfaXBfbW9kZWwuaHRtbCMlRTclQkQlOTElRTclQkIlOUMlRTYlOEUlQTUlRTUlOEYlQTMlRTUlQjElODI=\">#</span>网络接口层</h2>\n<p>生成了 IP 头部之后，接下来要交给<strong>网络接口层</strong>（<em>Link Layer</em>）在 IP 头部的前面加上 MAC 头部，并封装成数据帧（Data frame）发送到网络上。</p>\n<p><img data-src=\"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost4@main/%E7%BD%91%E7%BB%9C/https/%E7%BD%91%E7%BB%9C%E6%8E%A5%E5%8F%A3%E5%B1%82.png\" alt=\"\" /></p>\n<p>IP 头部中的接收方 IP 地址表示网络包的目的地，通过这个地址我们就可以判断要将包发到哪里，但在以太网的世界中，这个思路是行不通的。</p>\n<p>什么是以太网呢？电脑上的以太网接口，Wi-Fi 接口，以太网交换机、路由器上的千兆，万兆以太网口，还有网线，它们都是以太网的组成部分。以太网就是一种在「局域网」内，把附近的设备连接起来，使它们之间可以进行通讯的技术。</p>\n<p>以太网在判断网络包目的地时和 IP 的方式不同，因此必须采用相匹配的方式才能在以太网中将包发往目的地，而 MAC 头部就是干这个用的，所以，在以太网进行通讯要用到 MAC 地址。</p>\n<p>MAC 头部是以太网使用的头部，它包含了接收方和发送方的 MAC 地址等信息，我们可以通过 ARP 协议获取对方的 MAC 地址。</p>\n<p>所以说，网络接口层主要为网络层提供「链路级别」传输的服务，负责在以太网、WiFi 这样的底层网络上发送原始数据包，工作在网卡这个层次，使用 MAC 地址来标识网络上的设备。</p>\n<h2 id=\"-5\"><a class=\"anchor\" href=\"#-5\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly94aWFvbGluY29kaW5nLmNvbS9uZXR3b3JrLzFfYmFzZS90Y3BfaXBfbW9kZWwuaHRtbCMlRTYlODAlQkIlRTclQkIlOTM=\">#</span>总结</h2>\n<p>综上所述，TCP/IP 网络通常是由上到下分成 4 层，分别是<strong>应用层，传输层，网络层和网络接口层</strong>。</p>\n<p><img data-src=\"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost4@main/%E7%BD%91%E7%BB%9C/tcpip%E5%8F%82%E8%80%83%E6%A8%A1%E5%9E%8B.drawio.png\" alt=\"\" /></p>\n<p>再给大家贴一下每一层的封装格式：</p>\n<p><img data-src=\"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost3@main/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%B5%AE%E7%82%B9/%E5%B0%81%E8%A3%85.png\" alt=\"img\" /></p>\n<p>网络接口层的传输单位是帧（frame），IP 层的传输单位是包（packet），TCP 层的传输单位是段（segment），HTTP 的传输单位则是消息或报文（message）。但这些名词并没有什么本质的区分，可以统称为数据包。</p>\n",
            "tags": [
                "学习心得"
            ]
        },
        {
            "id": "http://红叶.top/2023/04/26/%E6%9E%AB%E5%8F%B6%E5%AE%9B/",
            "url": "http://红叶.top/2023/04/26/%E6%9E%AB%E5%8F%B6%E5%AE%9B/",
            "title": "欢迎来到我的个人网站！",
            "date_published": "2023-04-26T13:54:33.330Z",
            "content_html": "<p>我是一名热爱编程的程序员，这个网站是我用来展示我的作品和分享我的经验的平台。在这里，你可以看到我开发过的各种项目，包括网站、应用程序、桌面工具以及其他各种有趣的软件。</p>\n<p>此外，我还会在网站上分享一些关于编程和技术的文章，希望能够帮助到那些想学习编程或者正在提高自己编程技能的同学们。同时，我也欢迎大家与我进行交流和讨论，共同探讨编程和技术领域的各种问题。</p>\n<p>如果你对我的工作感兴趣，想与我合作或者请我为你开发一个项目，也可以通过网站上提供的联系方式与我取得联系。我非常期待与你的合作，并愿意尽我所能为你提供最好的服务。</p>\n<p>最后，请务必收藏我的网站，并定期关注我的更新，让我们一起共同探索编程和技术的无限可能！</p>\n",
            "tags": []
        }
    ]
}